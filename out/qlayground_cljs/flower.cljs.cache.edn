{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name qlayground-cljs.flower, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {setup {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/flower.cljs", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([]))}, :name qlayground-cljs.flower/setup, :variadic false, :file "src/qlayground_cljs/cljs/flower.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-state-interference {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/flower.cljs", :line 16, :column 7, :end-line 16, :end-column 32, :arglists (quote ([state]))}, :name qlayground-cljs.flower/update-state-interference, :variadic false, :file "src/qlayground_cljs/cljs/flower.cljs", :end-column 32, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, calculate-next-circle {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/flower.cljs", :line 31, :column 7, :end-line 31, :end-column 28, :arglists (quote ([circles]))}, :name qlayground-cljs.flower/calculate-next-circle, :variadic false, :file "src/qlayground_cljs/cljs/flower.cljs", :end-column 28, :method-params ([circles]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([circles]))}, draw-state {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/flower.cljs", :line 42, :column 7, :end-line 42, :end-column 17, :arglists (quote ([state]))}, :name qlayground-cljs.flower/draw-state, :variadic false, :file "src/qlayground_cljs/cljs/flower.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:hsb :color :index :circles}, :order [:hsb :color :circles :index]}, :doc nil}