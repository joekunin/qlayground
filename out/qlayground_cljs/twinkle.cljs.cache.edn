{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name qlayground-cljs.twinkle, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {setup {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/twinkle.cljs", :line 7, :column 7, :end-line 7, :end-column 12, :arglists (quote ([]))}, :name qlayground-cljs.twinkle/setup, :variadic false, :file "src/qlayground_cljs/cljs/twinkle.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-state {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/twinkle.cljs", :line 28, :column 7, :end-line 28, :end-column 19, :arglists (quote ([state]))}, :name qlayground-cljs.twinkle/update-state, :variadic false, :file "src/qlayground_cljs/cljs/twinkle.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, draw-state {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/twinkle.cljs", :line 49, :column 7, :end-line 49, :end-column 17, :arglists (quote ([state]))}, :name qlayground-cljs.twinkle/draw-state, :variadic false, :file "src/qlayground_cljs/cljs/twinkle.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :squares :width :radius :x :height}, :order [:x :y :width :height :radius :squares]}, :doc nil}