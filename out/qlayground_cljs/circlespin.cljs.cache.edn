{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name qlayground-cljs.circlespin, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {setup {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/circlespin.cljs", :line 6, :column 7, :end-line 6, :end-column 12, :arglists (quote ([]))}, :name qlayground-cljs.circlespin/setup, :variadic false, :file "src/qlayground_cljs/cljs/circlespin.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, modify-circle {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/circlespin.cljs", :line 21, :column 7, :end-line 21, :end-column 20, :arglists (quote ([[x y w h]]))}, :name qlayground-cljs.circlespin/modify-circle, :variadic false, :file "src/qlayground_cljs/cljs/circlespin.cljs", :end-column 20, :method-params ([p__40686]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y w h]]))}, update-state {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/circlespin.cljs", :line 28, :column 7, :end-line 28, :end-column 19, :arglists (quote ([state]))}, :name qlayground-cljs.circlespin/update-state, :variadic false, :file "src/qlayground_cljs/cljs/circlespin.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, draw-state {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/circlespin.cljs", :line 40, :column 7, :end-line 40, :end-column 17, :arglists (quote ([state]))}, :name qlayground-cljs.circlespin/draw-state, :variadic false, :file "src/qlayground_cljs/cljs/circlespin.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:hsb :variable :color :circles :angle}, :order [:hsb :color :circles :variable :angle]}, :doc nil}