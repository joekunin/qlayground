{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name qlayground-cljs.sacred, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {setup {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/sacred.cljs", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([]))}, :name qlayground-cljs.sacred/setup, :variadic false, :file "src/qlayground_cljs/cljs/sacred.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, state {:name qlayground-cljs.sacred/state, :file "src/qlayground_cljs/cljs/sacred.cljs", :line 17, :column 1, :end-line 17, :end-column 11, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/sacred.cljs", :line 17, :column 6, :end-line 17, :end-column 11}}, calculate-next-circle {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/sacred.cljs", :line 22, :column 7, :end-line 22, :end-column 28, :arglists (quote ([[x y w h] factor]))}, :name qlayground-cljs.sacred/calculate-next-circle, :variadic false, :file "src/qlayground_cljs/cljs/sacred.cljs", :end-column 28, :method-params ([p__40877 factor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x y w h] factor]))}, update-state {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/sacred.cljs", :line 34, :column 7, :end-line 34, :end-column 19, :arglists (quote ([state]))}, :name qlayground-cljs.sacred/update-state, :variadic false, :file "src/qlayground_cljs/cljs/sacred.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, draw-state {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/sacred.cljs", :line 43, :column 7, :end-line 43, :end-column 17, :arglists (quote ([state]))}, :name qlayground-cljs.sacred/draw-state, :variadic false, :file "src/qlayground_cljs/cljs/sacred.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, sacred {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/sacred.cljs", :line 62, :column 14, :end-line 62, :end-column 20, :export true, :arglists (quote ([]))}, :name qlayground-cljs.sacred/sacred, :variadic false, :file "src/qlayground_cljs/cljs/sacred.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:hsb :mouse-clicked :fn :color :index :circles :update :size :setup :middleware :host :host-id :no-start :draw}, :order [:hsb :color :circles :index :host :mouse-clicked :update :size :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}