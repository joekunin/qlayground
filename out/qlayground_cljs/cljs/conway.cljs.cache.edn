{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name qlayground-cljs.cljs.conway, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {grid-size {:name qlayground-cljs.cljs.conway/grid-size, :file "src/qlayground_cljs/cljs/conway.cljs", :line 7, :column 1, :end-line 7, :end-column 15, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/conway.cljs", :line 7, :column 6, :end-line 7, :end-column 15}}, state {:name qlayground-cljs.cljs.conway/state, :file "src/qlayground_cljs/cljs/conway.cljs", :line 9, :column 1, :end-line 9, :end-column 11, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/conway.cljs", :line 9, :column 6, :end-line 9, :end-column 11}}, setup {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/conway.cljs", :line 12, :column 7, :end-line 12, :end-column 12, :arglists (quote ([]))}, :name qlayground-cljs.cljs.conway/setup, :variadic false, :file "src/qlayground_cljs/cljs/conway.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-neighbors {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/conway.cljs", :line 19, :column 7, :end-line 19, :end-column 20, :arglists (quote ([idx vec]))}, :name qlayground-cljs.cljs.conway/get-neighbors, :variadic false, :file "src/qlayground_cljs/cljs/conway.cljs", :end-column 20, :method-params ([idx vec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([idx vec]))}, new-status {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/conway.cljs", :line 32, :column 7, :end-line 32, :end-column 17, :arglists (quote ([idx itm vec]))}, :name qlayground-cljs.cljs.conway/new-status, :variadic false, :file "src/qlayground_cljs/cljs/conway.cljs", :end-column 17, :method-params ([idx itm vec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 3, :fn-var true, :arglists (quote ([idx itm vec]))}, update-state {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/conway.cljs", :line 39, :column 7, :end-line 39, :end-column 19, :arglists (quote ([state]))}, :name qlayground-cljs.cljs.conway/update-state, :variadic false, :file "src/qlayground_cljs/cljs/conway.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, draw-state {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/conway.cljs", :line 46, :column 7, :end-line 46, :end-column 17, :arglists (quote ([state]))}, :name qlayground-cljs.cljs.conway/draw-state, :variadic false, :file "src/qlayground_cljs/cljs/conway.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, game-of-life {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/src/qlayground_cljs/cljs/conway.cljs", :line 62, :column 14, :end-line 62, :end-column 26, :export true, :arglists (quote ([]))}, :name qlayground-cljs.cljs.conway/game-of-life, :variadic false, :file "src/qlayground_cljs/cljs/conway.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:hsb :fn :update :renderer :size :setup :middleware :matrix :host :host-id :no-start :draw :p3d}, :order [:matrix :hsb :host :update :renderer :p3d :size :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}