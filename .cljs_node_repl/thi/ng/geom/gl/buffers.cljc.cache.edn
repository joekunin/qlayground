{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name thi.ng.geom.gl.buffers, :imports nil, :requires {gl thi.ng.geom.gl.core, thi.ng.geom.gl.core thi.ng.geom.gl.core, err thi.ng.xerror.core, thi.ng.xerror.core thi.ng.xerror.core, glc thi.ng.geom.gl.webgl.constants, thi.ng.geom.gl.webgl.constants thi.ng.geom.gl.webgl.constants}, :uses nil, :defs {Texture2D {:num-fields 3, :protocols #{cljs.core/IRecord thi.ng.geom.gl.core/IConfigure cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted thi.ng.geom.gl.core/IRelease cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable thi.ng.geom.gl.core/IBind cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.gl.buffers/Texture2D, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 21, :type true, :column 12, :internal-ctor true, :line 33, :record true, :end-line 33, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, make-depth-buffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 252, :column 10, :end-line 252, :end-column 27, :arglists (quote ([gl size] [gl width height])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([gl size] [gl width height]), :arglists ([gl size] [gl width height]), :arglists-meta (nil nil)}}, :name thi.ng.geom.gl.buffers/make-depth-buffer, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([gl size] [gl width height]), :arglists ([gl size] [gl width height]), :arglists-meta (nil nil)}, :method-params ([gl size] [gl width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 252, :end-line 252, :max-fixed-arity 3, :fn-var true, :arglists ([gl size] [gl width height])}, make-canvas-texture {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 142, :column 10, :end-line 142, :end-column 29, :arglists (quote ([gl canvas] [gl canvas opts])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([gl canvas] [gl canvas opts]), :arglists ([gl canvas] [gl canvas opts]), :arglists-meta (nil nil)}}, :name thi.ng.geom.gl.buffers/make-canvas-texture, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 29, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([gl canvas] [gl canvas opts]), :arglists ([gl canvas] [gl canvas opts]), :arglists-meta (nil nil)}, :method-params ([gl canvas] [gl canvas opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 142, :end-line 142, :max-fixed-arity 3, :fn-var true, :arglists ([gl canvas] [gl canvas opts])}, load-texture {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 173, :column 10, :end-line 173, :end-column 22, :arglists (quote ([gl opts]))}, :name thi.ng.geom.gl.buffers/load-texture, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 22, :method-params ([gl opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 173, :end-line 173, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl opts]))}, FBO {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted thi.ng.geom.gl.core/IRelease cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable thi.ng.geom.gl.core/IFramebuffer cljs.core/IPrintWithWriter cljs.core/IIterable thi.ng.geom.gl.core/IBind cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.gl.buffers/FBO, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 15, :type true, :column 12, :internal-ctor true, :line 260, :record true, :end-line 260, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Texture2D {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 33, :column 12, :end-line 33, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([gl id target]))}, :name thi.ng.geom.gl.buffers/->Texture2D, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 21, :method-params ([gl id target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 33, :end-line 33, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl id target]))}, map->Texture2D {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 33, :column 12, :end-line 33, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__32847]))}, :name thi.ng.geom.gl.buffers/map->Texture2D, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 21, :method-params ([G__32847]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__32847]))}, check-fbo {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 296, :column 8, :end-line 296, :end-column 17, :private true, :arglists (quote ([gl]))}, :private true, :name thi.ng.geom.gl.buffers/check-fbo, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 17, :method-params ([gl]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 296, :end-line 296, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gl]))}, make-render-buffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 235, :column 10, :end-line 235, :end-column 28, :arglists (quote ([gl] [gl opts])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([gl] [gl opts]), :arglists ([gl] [gl opts]), :arglists-meta (nil nil)}}, :name thi.ng.geom.gl.buffers/make-render-buffer, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 28, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([gl] [gl opts]), :arglists ([gl] [gl opts]), :arglists-meta (nil nil)}, :method-params ([gl] [gl opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 235, :end-line 235, :max-fixed-arity 2, :fn-var true, :arglists ([gl] [gl opts])}, RenderBuffer {:num-fields 5, :protocols #{cljs.core/IRecord thi.ng.geom.gl.core/IConfigure cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted thi.ng.geom.gl.core/IRelease cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable thi.ng.geom.gl.core/IBind cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.gl.buffers/RenderBuffer, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 24, :type true, :column 12, :internal-ctor true, :line 196, :record true, :end-line 196, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->FBO {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 260, :column 12, :end-line 260, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([gl id]))}, :name thi.ng.geom.gl.buffers/->FBO, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 15, :method-params ([gl id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 260, :end-line 260, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl id]))}, make-fbo {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 317, :column 10, :end-line 317, :end-column 18, :arglists (quote ([gl]))}, :name thi.ng.geom.gl.buffers/make-fbo, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 18, :method-params ([gl]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 317, :end-line 317, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gl]))}, map->RenderBuffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 196, :column 12, :end-line 196, :end-column 24, :internal-ctor true, :factory :map, :arglists (quote ([G__32884]))}, :name thi.ng.geom.gl.buffers/map->RenderBuffer, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 24, :method-params ([G__32884]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 196, :end-line 196, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__32884]))}, map->FBO {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 260, :column 12, :end-line 260, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__32909]))}, :name thi.ng.geom.gl.buffers/map->FBO, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 15, :method-params ([G__32909]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 260, :end-line 260, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__32909]))}, make-texture {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 129, :column 10, :end-line 129, :end-column 22, :arglists (quote ([gl opts]))}, :name thi.ng.geom.gl.buffers/make-texture, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 22, :method-params ([gl opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 129, :end-line 129, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl opts]))}, ->RenderBuffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 196, :column 12, :end-line 196, :end-column 24, :internal-ctor true, :factory :positional, :arglists (quote ([gl id format width height]))}, :name thi.ng.geom.gl.buffers/->RenderBuffer, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 24, :method-params ([gl id format width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 196, :end-line 196, :max-fixed-arity 5, :fn-var true, :arglists (quote ([gl id format width height]))}, make-fbo-with-attachments {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :line 321, :column 7, :end-line 321, :end-column 32, :arglists (quote ([gl {:keys [tex width height depth?]}]))}, :name thi.ng.geom.gl.buffers/make-fbo-with-attachments, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/buffers.cljc", :end-column 32, :method-params ([gl p__32927]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl {:keys [tex width height depth?]}]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{target :cors :format :wrap height :flip :tex :error-callback format WebGLRenderingContext :width :type :src :filter width :id :premultiply :gl :image :tag :target id :pixels :callback :depth? gl :height}, :order [:gl :id :target :pixels :height :format :wrap :flip :width :type :filter :premultiply :image gl :tag WebGLRenderingContext id target :callback :error-callback :cors :src format width height :tex :depth?]}, :doc nil}