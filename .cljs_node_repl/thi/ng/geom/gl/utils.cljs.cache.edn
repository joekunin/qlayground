{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name thi.ng.geom.gl.utils, :imports nil, :requires {arrays thi.ng.typedarrays.core, thi.ng.typedarrays.core thi.ng.typedarrays.core, err thi.ng.xerror.core, thi.ng.xerror.core thi.ng.xerror.core}, :uses nil, :defs {get-script-text {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/utils.cljs", :line 8, :column 7, :end-line 8, :end-column 22, :arglists (quote ([id]))}, :name thi.ng.geom.gl.utils/get-script-text, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/utils.cljs", :end-column 22, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, loop-kv {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/gl/utils.cljs", :line 14, :column 7, :end-line 14, :end-column 14, :arglists (quote ([f xs])), :doc "A combination of map & doseq specialized for maps. Takes a function `f` and\n    a map, calls `f` with each key & value, discards results."}, :name thi.ng.geom.gl.utils/loop-kv, :variadic false, :file ".cljs_node_repl/thi/ng/geom/gl/utils.cljs", :end-column 14, :method-params ([f xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f xs])), :doc "A combination of map & doseq specialized for maps. Takes a function `f` and\n    a map, calls `f` with each key & value, discards results."}}, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros}, :doc nil}