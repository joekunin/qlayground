{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name thi.ng.geom.cuboid, :imports nil, :requires {bm thi.ng.geom.basicmesh, thi.ng.geom.utils thi.ng.geom.utils, p thi.ng.geom.plane, attr thi.ng.geom.attribs, thi.ng.geom.core thi.ng.geom.core, gu thi.ng.geom.utils, v thi.ng.geom.vector, thi.ng.xerror.core thi.ng.xerror.core, thi.ng.math.core thi.ng.math.core, thi.ng.geom.basicmesh thi.ng.geom.basicmesh, m thi.ng.math.core, thi.ng.dstruct.core thi.ng.dstruct.core, thi.ng.geom.types thi.ng.geom.types, err thi.ng.xerror.core, thi.ng.geom.vector thi.ng.geom.vector, thi.ng.geom.attribs thi.ng.geom.attribs, thi.ng.geom.tetrahedron thi.ng.geom.tetrahedron, g thi.ng.geom.core, thi.ng.geom.plane thi.ng.geom.plane, tetra thi.ng.geom.tetrahedron, d thi.ng.dstruct.core}, :uses {vec3 thi.ng.geom.vector, Cuboid thi.ng.geom.types, *eps* thi.ng.math.core}, :defs {cuboid {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/cuboid.cljc", :line 26, :column 7, :end-line 26, :end-column 13, :arglists (quote ([] [a b c d e f g h] [x] [o size])), :top-fn {:variadic false, :max-fixed-arity 8, :method-params ([] [a b c d e f g h] [x] [o size]), :arglists ([] [a b c d e f g h] [x] [o size]), :arglists-meta (nil nil nil nil)}}, :name thi.ng.geom.cuboid/cuboid, :variadic false, :file ".cljs_node_repl/thi/ng/geom/cuboid.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 8, :method-params ([] [a b c d e f g h] [x] [o size]), :arglists ([] [a b c d e f g h] [x] [o size]), :arglists-meta (nil nil nil nil)}, :method-params ([] [a b c d e f g h] [x] [o size]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 8, :fn-var true, :arglists ([] [a b c d e f g h] [x] [o size])}}, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros}, :cljs.analyzer/constants {:seen #{:num :fn :else :points :slices :size :rows :cols :attribs :mesh :flags :p}, :order [:p :size :else :points :num :cols :rows :slices :mesh :flags :attribs :fn]}, :doc nil}