{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name thi.ng.geom.tetrahedron, :imports nil, :requires {t thi.ng.geom.triangle, bm thi.ng.geom.basicmesh, thi.ng.geom.utils thi.ng.geom.utils, thi.ng.geom.core thi.ng.geom.core, gu thi.ng.geom.utils, v thi.ng.geom.vector, thi.ng.geom.triangle thi.ng.geom.triangle, thi.ng.xerror.core thi.ng.xerror.core, isec thi.ng.geom.utils.intersect, thi.ng.math.core thi.ng.math.core, thi.ng.geom.basicmesh thi.ng.geom.basicmesh, m thi.ng.math.core, thi.ng.dstruct.core thi.ng.dstruct.core, thi.ng.geom.types thi.ng.geom.types, thi.ng.geom.utils.intersect thi.ng.geom.utils.intersect, err thi.ng.xerror.core, thi.ng.geom.vector thi.ng.geom.vector, g thi.ng.geom.core, d thi.ng.dstruct.core}, :uses {vec3 thi.ng.geom.vector, PI thi.ng.math.core, HALF_PI thi.ng.math.core, *eps* thi.ng.math.core, Tetrahedron thi.ng.geom.types, THIRD thi.ng.math.core, SQRT3 thi.ng.math.core}, :defs {orient-tetra {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/tetrahedron.cljc", :line 17, :column 7, :end-line 17, :end-column 19, :arglists (quote ([[a b c d :as t]])), :doc "Takes a seq of 4 3D points, returns them as vector in the order so\n  that the last point is on the opposite side of the plane defined by\n  the first three points."}, :name thi.ng.geom.tetrahedron/orient-tetra, :variadic false, :file ".cljs_node_repl/thi/ng/geom/tetrahedron.cljc", :end-column 19, :method-params ([p__31822]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[a b c d :as t]])), :doc "Takes a seq of 4 3D points, returns them as vector in the order so\n  that the last point is on the opposite side of the plane defined by\n  the first three points."}, tetrahedron {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/tetrahedron.cljc", :line 25, :column 7, :end-line 25, :end-column 18, :arglists (quote ([points] [a b c d])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([points] [a b c d]), :arglists ([points] [a b c d]), :arglists-meta (nil nil)}}, :name thi.ng.geom.tetrahedron/tetrahedron, :variadic false, :file ".cljs_node_repl/thi/ng/geom/tetrahedron.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([points] [a b c d]), :arglists ([points] [a b c d]), :arglists-meta (nil nil)}, :method-params ([points] [a b c d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 4, :fn-var true, :arglists ([points] [a b c d])}}, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros}, :cljs.analyzer/constants {:seen #{:dir :else :points :mesh :p}, :order [:points :mesh :else :p :dir]}, :doc nil}