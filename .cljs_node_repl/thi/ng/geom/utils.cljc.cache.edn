{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name thi.ng.geom.utils, :imports nil, :requires {thi.ng.geom.core thi.ng.geom.core, v thi.ng.geom.vector, thi.ng.math.core thi.ng.math.core, m thi.ng.math.core, thi.ng.dstruct.core thi.ng.dstruct.core, thi.ng.geom.types thi.ng.geom.types, thi.ng.geom.vector thi.ng.geom.vector, g thi.ng.geom.core, d thi.ng.dstruct.core}, :uses {Rect2 thi.ng.geom.types, V2 thi.ng.geom.vector, AABB thi.ng.geom.types, vec3 thi.ng.geom.vector, Sphere thi.ng.geom.types, Circle2 thi.ng.geom.types, V3 thi.ng.geom.vector, vec2 thi.ng.geom.vector, *eps* thi.ng.math.core}, :defs {sample-uniform* {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 195, :column 7, :end-line 195, :end-column 22, :arglists (quote ([udist include-last? points]))}, :name thi.ng.geom.utils/sample-uniform*, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 22, :method-params ([udist include-last? points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 3, :fn-var true, :arglists (quote ([udist include-last? points]))}, from-barycentric {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 156, :column 7, :end-line 156, :end-column 23, :arglists (quote ([points weights]))}, :name thi.ng.geom.utils/from-barycentric, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 23, :method-params ([points weights]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 2, :fn-var true, :arglists (quote ([points weights]))}, tessellate-with-first {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 262, :column 7, :end-line 262, :end-column 28, :arglists (quote ([points]))}, :name thi.ng.geom.utils/tessellate-with-first, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 28, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 262, :end-line 262, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, clockwise2? {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 323, :column 7, :end-line 323, :end-column 18, :arglists (quote ([a b c]))}, :name thi.ng.geom.utils/clockwise2?, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 18, :method-params ([a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 323, :end-line 323, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b c]))}, bounds* {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 115, :column 7, :end-line 115, :end-column 14, :arglists (quote ([zero coll]))}, :name thi.ng.geom.utils/bounds*, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 14, :method-params ([zero coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zero coll]))}, map-trilinear {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 244, :column 7, :end-line 244, :end-column 20, :arglists (quote ([[a b c d e f g h] [u v w]])), :doc "Takes a seq of 8 points defining a cuboid and vector of normalized\n  UVW coordinates. Applies trilinear interpolation to compute point\n  within the cuboid: U is coord along AD/BC edge, V along AE/BF, W\n  along AB/DC (see above diagram)"}, :name thi.ng.geom.utils/map-trilinear, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 20, :method-params ([p__30292 p__30293]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 244, :end-line 244, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[a b c d e f g h] [u v w]])), :doc "Takes a seq of 8 points defining a cuboid and vector of normalized\n  UVW coordinates. Applies trilinear interpolation to compute point\n  within the cuboid: U is coord along AD/BC edge, V along AE/BF, W\n  along AB/DC (see above diagram)"}, area-xf {:name thi.ng.geom.utils/area-xf, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :line 375, :column 1, :end-line 375, :end-column 23, :private true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 375, :column 16, :end-line 375, :end-column 23, :private true}}, arc-length {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 87, :column 7, :end-line 87, :end-column 17, :arglists (quote ([points]))}, :name thi.ng.geom.utils/arc-length, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 17, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, norm-sign2 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 310, :column 7, :end-line 310, :end-column 17, :arglists (quote ([[ax ay] [bx by] [cx cy]]))}, :name thi.ng.geom.utils/norm-sign2, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 17, :method-params ([p__30360 p__30361 p__30362]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 310, :end-line 310, :max-fixed-arity 3, :fn-var true, :arglists (quote ([[ax ay] [bx by] [cx cy]]))}, scale-size {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 109, :column 7, :end-line 109, :end-column 17, :arglists (quote ([s coll] [c s coll])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([s coll] [c s coll]), :arglists ([s coll] [c s coll]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/scale-size, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([s coll] [c s coll]), :arglists ([s coll] [c s coll]), :arglists-meta (nil nil)}, :method-params ([s coll] [c s coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 3, :fn-var true, :arglists ([s coll] [c s coll])}, coll-bounds {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 415, :column 7, :end-line 415, :end-column 18, :arglists (quote ([coll])), :doc "Takes a seq of shape entities, calls g/bounds on each and returns\n  union bounds. Does not support collections of mixed 2d/3d entities."}, :name thi.ng.geom.utils/coll-bounds, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 18, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 415, :end-line 415, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll])), :doc "Takes a seq of shape entities, calls g/bounds on each and returns\n  union bounds. Does not support collections of mixed 2d/3d entities."}, min-dist {:name thi.ng.geom.utils/min-dist, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :line 75, :column 1, :end-line 75, :end-column 14, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 75, :column 6, :end-line 75, :end-column 14}}, point-in-triangle2? {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 346, :column 7, :end-line 346, :end-column 26, :arglists (quote ([p a b c]))}, :name thi.ng.geom.utils/point-in-triangle2?, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 26, :method-params ([p a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 346, :end-line 346, :max-fixed-arity 4, :fn-var true, :arglists (quote ([p a b c]))}, map-bilinear {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 229, :column 7, :end-line 229, :end-column 19, :arglists (quote ([[a b c d] [u v]])), :doc "Takes a seq of 4 points in ccw order and 2D vector of normalized UV\n  coordinates. Applies bilinear interpolation to compute point within\n  the rect: U is coord along AB/DC edge, V along BC/AD"}, :name thi.ng.geom.utils/map-bilinear, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 19, :method-params ([p__30278 p__30279]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[a b c d] [u v]])), :doc "Takes a seq of 4 points in ccw order and 2D vector of normalized UV\n  coordinates. Applies bilinear interpolation to compute point within\n  the rect: U is coord along AB/DC edge, V along BC/AD"}, triangle-barycentric-coords {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 329, :column 7, :end-line 329, :end-column 34, :arglists (quote ([[a b c] p] [a b c p] [a b c p u v])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([[a b c] p] [a b c p] [a b c p u v]), :arglists ([[a b c] p] [a b c p] [a b c p u v]), :arglists-meta (nil nil nil)}}, :name thi.ng.geom.utils/triangle-barycentric-coords, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 34, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([[a b c] p] [a b c p] [a b c p u v]), :arglists ([[a b c] p] [a b c p] [a b c p u v]), :arglists-meta (nil nil nil)}, :method-params ([[a b c] p] [a b c p] [a b c p u v]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 329, :end-line 329, :max-fixed-arity 6, :fn-var true, :arglists ([[a b c] p] [a b c p] [a b c p u v])}, dist* {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 68, :column 7, :end-line 68, :end-column 12, :arglists (quote ([rf]))}, :name thi.ng.geom.utils/dist*, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 12, :method-params ([rf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rf]))}, tessellate-max4 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 283, :column 7, :end-line 283, :end-column 22, :arglists (quote ([points]))}, :name thi.ng.geom.utils/tessellate-max4, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 22, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, sample-segment-with-res {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 217, :column 7, :end-line 217, :end-column 30, :arglists (quote ([a b res include-b?]))}, :name thi.ng.geom.utils/sample-segment-with-res, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 30, :method-params ([a b res include-b?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 217, :end-line 217, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a b res include-b?]))}, closest-point-on-line {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 24, :column 7, :end-line 24, :end-column 28, :arglists (quote ([p a b]))}, :name thi.ng.geom.utils/closest-point-on-line, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 28, :method-params ([p a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p a b]))}, clockwise3? {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 326, :column 7, :end-line 326, :end-column 18, :arglists (quote ([a b c n]))}, :name thi.ng.geom.utils/clockwise3?, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 18, :method-params ([a b c n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 326, :end-line 326, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a b c n]))}, tri-area2 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 317, :column 7, :end-line 317, :end-column 16, :arglists (quote ([a b c]))}, :name thi.ng.geom.utils/tri-area2, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 16, :method-params ([a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 317, :end-line 317, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b c]))}, into-mesh {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 438, :column 7, :end-line 438, :end-column 16, :arglists (quote ([mesh add-face mesh-or-faces])), :doc "Takes a target mesh, its add-face fn and a source mesh or face\n  sequence. Adds faces to target mesh and returns it."}, :name thi.ng.geom.utils/into-mesh, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 16, :method-params ([mesh add-face mesh-or-faces]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 438, :end-line 438, :max-fixed-arity 3, :fn-var true, :arglists (quote ([mesh add-face mesh-or-faces])), :doc "Takes a target mesh, its add-face fn and a source mesh or face\n  sequence. Adds faces to target mesh and returns it."}, tessellating-transducer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 369, :column 8, :end-line 369, :end-column 31, :private true, :arglists (quote ([f]))}, :private true, :name thi.ng.geom.utils/tessellating-transducer, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 31, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, point-at {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 181, :column 7, :end-line 181, :end-column 15, :arglists (quote ([t points] [t points idx])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([t points] [t points idx]), :arglists ([t points] [t points idx]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/point-at, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([t points] [t points idx]), :arglists ([t points] [t points idx]), :arglists-meta (nil nil)}, :method-params ([t points] [t points idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 3, :fn-var true, :arglists ([t points] [t points idx])}, max-dist {:name thi.ng.geom.utils/max-dist, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :line 76, :column 1, :end-line 76, :end-column 14, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 76, :column 6, :end-line 76, :end-column 14}}, fit-all-into-bounds {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 421, :column 7, :end-line 421, :end-column 26, :arglists (quote ([bounds coll])), :doc "Takes an AABB or rect and seq of shapes, proportionally scales and\n  repositions all items to fit into given bounds. Returns lazyseq of\n  transformed entities. Does not support collections of mixed 2D/3D\n  entities. Use rects as target bounds for 2D colls."}, :name thi.ng.geom.utils/fit-all-into-bounds, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 26, :method-params ([bounds coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 421, :end-line 421, :max-fixed-arity 2, :fn-var true, :arglists (quote ([bounds coll])), :doc "Takes an AABB or rect and seq of shapes, proportionally scales and\n  repositions all items to fit into given bounds. Returns lazyseq of\n  transformed entities. Does not support collections of mixed 2D/3D\n  entities. Use rects as target bounds for 2D colls."}, norm-sign3 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 314, :column 7, :end-line 314, :end-column 17, :arglists (quote ([a b c]))}, :name thi.ng.geom.utils/norm-sign3, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 17, :method-params ([a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b c]))}, bounding-rect {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 391, :column 7, :end-line 391, :end-column 20, :arglists (quote ([points]))}, :name thi.ng.geom.utils/bounding-rect, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 20, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 391, :end-line 391, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, ortho-normal {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 303, :column 7, :end-line 303, :end-column 19, :arglists (quote ([[a b c]] [a b] [a b c])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([[a b c]] [a b] [a b c]), :arglists ([[a b c]] [a b] [a b c]), :arglists-meta (nil nil nil)}}, :name thi.ng.geom.utils/ortho-normal, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([[a b c]] [a b] [a b c]), :arglists ([[a b c]] [a b] [a b c]), :arglists-meta (nil nil nil)}, :method-params ([[a b c]] [a b] [a b c]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 303, :end-line 303, :max-fixed-arity 3, :fn-var true, :arglists ([[a b c]] [a b] [a b c])}, tri-area3 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 320, :column 7, :end-line 320, :end-column 16, :arglists (quote ([a b c]))}, :name thi.ng.geom.utils/tri-area3, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 16, :method-params ([a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 320, :end-line 320, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b c]))}, radial-bounds {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 134, :column 7, :end-line 134, :end-column 20, :arglists (quote ([ctor c r-or-points]))}, :name thi.ng.geom.utils/radial-bounds, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 20, :method-params ([ctor c r-or-points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ctor c r-or-points]))}, delta-contains {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 150, :column 7, :end-line 150, :end-column 21, :arglists (quote ([points p eps]))}, :name thi.ng.geom.utils/delta-contains, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 21, :method-params ([points p eps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 3, :fn-var true, :arglists (quote ([points p eps]))}, closest-line-between {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 44, :column 7, :end-line 44, :end-column 27, :arglists (quote ([a1 b1 a2 b2]))}, :name thi.ng.geom.utils/closest-line-between, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 27, :method-params ([a1 b1 a2 b2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a1 b1 a2 b2]))}, point-at-index {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 160, :column 7, :end-line 160, :end-column 21, :arglists (quote ([points t])), :doc "Takes a seq of points and normalized index (0.0 .. 1.0), returns\n  interpolated point at position t."}, :name thi.ng.geom.utils/point-at-index, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 21, :method-params ([points t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 2, :fn-var true, :arglists (quote ([points t])), :doc "Takes a seq of points and normalized index (0.0 .. 1.0), returns\n  interpolated point at position t."}, bounding-circle {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 401, :column 7, :end-line 401, :end-column 22, :arglists (quote ([points] [c r-or-points])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [c r-or-points]), :arglists ([points] [c r-or-points]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/bounding-circle, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [c r-or-points]), :arglists ([points] [c r-or-points]), :arglists-meta (nil nil)}, :method-params ([points] [c r-or-points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 401, :end-line 401, :max-fixed-arity 2, :fn-var true, :arglists ([points] [c r-or-points])}, sample-uniform {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 209, :column 7, :end-line 209, :end-column 21, :arglists (quote ([udist include-last? points]))}, :name thi.ng.geom.utils/sample-uniform, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 21, :method-params ([udist include-last? points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 3, :fn-var true, :arglists (quote ([udist include-last? points]))}, axis-bounds {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 141, :column 7, :end-line 141, :end-column 18, :arglists (quote ([axis coll]))}, :name thi.ng.geom.utils/axis-bounds, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 18, :method-params ([axis coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 2, :fn-var true, :arglists (quote ([axis coll]))}, bounding-rect-raw {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 126, :column 7, :end-line 126, :end-column 24, :arglists (quote ([points]))}, :name thi.ng.geom.utils/bounding-rect-raw, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 24, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, tessellate-with-point {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 254, :column 7, :end-line 254, :end-column 28, :arglists (quote ([points] [c points])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [c points]), :arglists ([points] [c points]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/tessellate-with-point, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 28, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [c points]), :arglists ([points] [c points]), :arglists-meta (nil nil)}, :method-params ([points] [c points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 254, :end-line 254, :max-fixed-arity 2, :fn-var true, :arglists ([points] [c points])}, bounding-box {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 396, :column 7, :end-line 396, :end-column 19, :arglists (quote ([points]))}, :name thi.ng.geom.utils/bounding-box, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 19, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 396, :end-line 396, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, axis-range {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 146, :column 7, :end-line 146, :end-column 17, :arglists (quote ([axis coll]))}, :name thi.ng.geom.utils/axis-range, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 17, :method-params ([axis coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 2, :fn-var true, :arglists (quote ([axis coll]))}, closest-point-on-segment {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 28, :column 7, :end-line 28, :end-column 31, :arglists (quote ([p a b]))}, :name thi.ng.geom.utils/closest-point-on-segment, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 31, :method-params ([p a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p a b]))}, tessellate-tri-with-midpoints {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 269, :column 7, :end-line 269, :end-column 36, :arglists (quote ([[a b c]]))}, :name thi.ng.geom.utils/tessellate-tri-with-midpoints, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 36, :method-params ([p__30322]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 269, :end-line 269, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[a b c]]))}, closest-point-coeff {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 19, :column 7, :end-line 19, :end-column 26, :arglists (quote ([p a b]))}, :name thi.ng.geom.utils/closest-point-coeff, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 26, :method-params ([p a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p a b]))}, bounding-box-raw {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 130, :column 7, :end-line 130, :end-column 23, :arglists (quote ([points]))}, :name thi.ng.geom.utils/bounding-box-raw, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 23, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, center {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 103, :column 7, :end-line 103, :end-column 13, :arglists (quote ([c' coll] [c c' coll])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c' coll] [c c' coll]), :arglists ([c' coll] [c c' coll]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/center, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c' coll] [c c' coll]), :arglists ([c' coll] [c c' coll]), :arglists-meta (nil nil)}, :method-params ([c' coll] [c c' coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 3, :fn-var true, :arglists ([c' coll] [c c' coll])}, closest-point-on-segments {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 33, :column 7, :end-line 33, :end-column 32, :arglists (quote ([p segments]))}, :name thi.ng.geom.utils/closest-point-on-segments, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 32, :method-params ([p segments]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p segments]))}, tessellate-face {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 289, :column 7, :end-line 289, :end-column 22, :arglists (quote ([tess-fn]))}, :name thi.ng.geom.utils/tessellate-face, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 22, :method-params ([tess-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 289, :end-line 289, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tess-fn]))}, centroid {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 93, :column 7, :end-line 93, :end-column 15, :arglists (quote ([coll]))}, :name thi.ng.geom.utils/centroid, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 15, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, arc-length-index {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 78, :column 7, :end-line 78, :end-column 23, :arglists (quote ([points]))}, :name thi.ng.geom.utils/arc-length-index, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 23, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, transform-mesh {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 456, :column 7, :end-line 456, :end-column 21, :arglists (quote ([mesh add-face tx])), :doc "Takes a mesh, its add-face fn and a vertex transformation fn.\n  Transforms all mesh vertices and returns new mesh."}, :name thi.ng.geom.utils/transform-mesh, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 21, :method-params ([mesh add-face tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 456, :end-line 456, :max-fixed-arity 3, :fn-var true, :arglists (quote ([mesh add-face tx])), :doc "Takes a mesh, its add-face fn and a vertex transformation fn.\n  Transforms all mesh vertices and returns new mesh."}, total-volume {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 385, :column 7, :end-line 385, :end-column 19, :arglists (quote ([faces] [xf faces])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([faces] [xf faces]), :arglists ([faces] [xf faces]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/total-volume, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([faces] [xf faces]), :arglists ([faces] [xf faces]), :arglists-meta (nil nil)}, :method-params ([faces] [xf faces]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 385, :end-line 385, :max-fixed-arity 2, :fn-var true, :arglists ([faces] [xf faces])}, tessellate-3 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 276, :column 7, :end-line 276, :end-column 19, :arglists (quote ([points]))}, :name thi.ng.geom.utils/tessellate-3, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 19, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 276, :end-line 276, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, bounding-sphere {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 408, :column 7, :end-line 408, :end-column 22, :arglists (quote ([points] [c r-or-points])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [c r-or-points]), :arglists ([points] [c r-or-points]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/bounding-sphere, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [c r-or-points]), :arglists ([points] [c r-or-points]), :arglists-meta (nil nil)}, :method-params ([points] [c r-or-points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 408, :end-line 408, :max-fixed-arity 2, :fn-var true, :arglists ([points] [c r-or-points])}, volume-xf {:name thi.ng.geom.utils/volume-xf, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :line 378, :column 1, :end-line 378, :end-column 25, :private true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 378, :column 16, :end-line 378, :end-column 25, :private true}}, total-area-3d {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 381, :column 7, :end-line 381, :end-column 20, :arglists (quote ([faces] [xf faces])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([faces] [xf faces]), :arglists ([faces] [xf faces]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/total-area-3d, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([faces] [xf faces]), :arglists ([faces] [xf faces]), :arglists-meta (nil nil)}, :method-params ([faces] [xf faces]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 381, :end-line 381, :max-fixed-arity 2, :fn-var true, :arglists ([faces] [xf faces])}, map-mesh {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 449, :column 7, :end-line 449, :end-column 15, :arglists (quote ([f mesh])), :doc "Applies f to all faces of given mesh and adds resulting faces to\n  new mesh. Thus f should return a seq of raw faces (i.e. each face as\n  2-elem vector of [verts attribs]. Returns new mesh."}, :name thi.ng.geom.utils/map-mesh, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 15, :method-params ([f mesh]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 449, :end-line 449, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f mesh])), :doc "Applies f to all faces of given mesh and adds resulting faces to\n  new mesh. Thus f should return a seq of raw faces (i.e. each face as\n  2-elem vector of [verts attribs]. Returns new mesh."}, point-in-triangle3? {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 356, :column 7, :end-line 356, :end-column 26, :arglists (quote ([p a b c]))}, :name thi.ng.geom.utils/point-in-triangle3?, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 26, :method-params ([p a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 356, :end-line 356, :max-fixed-arity 4, :fn-var true, :arglists (quote ([p a b c]))}, point-at* {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/geom/utils.cljc", :line 171, :column 7, :end-line 171, :end-column 16, :arglists (quote ([points idx total t i]))}, :name thi.ng.geom.utils/point-at*, :variadic false, :file ".cljs_node_repl/thi/ng/geom/utils.cljc", :end-column 16, :method-params ([points idx total t i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 5, :fn-var true, :arglists (quote ([points idx total t i]))}}, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros}, :cljs.analyzer/constants {:seen #{:parallel :default :ua :ub :type :size :b :intersect :a}, :order [:type :parallel :a :b :ua :ub :intersect :default :size]}, :doc nil}