{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name thi.ng.typedarrays.core, :imports nil, :requires nil, :uses nil, :defs {uint16-view {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 169, :column 7, :end-line 169, :end-column 18, :arglists (quote ([a] [a offset len])), :doc "Creates a Uint16Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}}, :name thi.ng.typedarrays.core/uint16-view, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}, :method-params ([a] [a offset len]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a offset len]), :doc "Creates a Uint16Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length."}, uint8 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 84, :column 7, :end-line 84, :end-column 12, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint8Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, :name thi.ng.typedarrays.core/uint8, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 12, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint8Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, typed-arrays-supported? {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 3, :column 7, :end-line 3, :end-column 30, :arglists (quote ([])), :doc "Returns true if JS runtime supports typed arrays"}, :name thi.ng.typedarrays.core/typed-arrays-supported?, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns true if JS runtime supports typed arrays"}, uint8-clamped {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 107, :column 7, :end-line 107, :end-column 20, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint8ClampedArray of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, :name thi.ng.typedarrays.core/uint8-clamped, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 20, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint8ClampedArray of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, int32 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 176, :column 7, :end-line 176, :end-column 12, :arglists (quote ([size-or-coll])), :doc "Creates a native Int32Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, :name thi.ng.typedarrays.core/int32, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 12, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Int32Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, uint32-view {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 215, :column 7, :end-line 215, :end-column 18, :arglists (quote ([a] [a offset len])), :doc "Creates a Uint32Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}}, :name thi.ng.typedarrays.core/uint32-view, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}, :method-params ([a] [a offset len]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a offset len]), :doc "Creates a Uint32Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length."}, int16 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 130, :column 7, :end-line 130, :end-column 12, :arglists (quote ([size-or-coll])), :doc "Creates a native Int16Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, :name thi.ng.typedarrays.core/int16, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 12, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Int16Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, float32 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 222, :column 7, :end-line 222, :end-column 14, :arglists (quote ([size-or-coll])), :doc "Creates a native Float32Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, :name thi.ng.typedarrays.core/float32, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 14, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Float32Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, array-types {:name thi.ng.typedarrays.core/array-types, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 7, :column 1, :end-line 7, :end-column 27, :private true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 7, :column 16, :end-line 7, :end-column 27, :private true}}, float64 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 245, :column 7, :end-line 245, :end-column 14, :arglists (quote ([size-or-coll])), :doc "Creates a native Float64Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, :name thi.ng.typedarrays.core/float64, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 14, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Float64Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, int32-view {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 192, :column 7, :end-line 192, :end-column 17, :arglists (quote ([a] [a offset len])), :doc "Creates a Int32Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}}, :name thi.ng.typedarrays.core/int32-view, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}, :method-params ([a] [a offset len]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a offset len]), :doc "Creates a Int32Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length."}, array-type {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 25, :column 7, :end-line 25, :end-column 17, :arglists (quote ([x]))}, :name thi.ng.typedarrays.core/array-type, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, int8-view {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 77, :column 7, :end-line 77, :end-column 16, :arglists (quote ([a] [a offset len])), :doc "Creates a Int8Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}}, :name thi.ng.typedarrays.core/int8-view, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}, :method-params ([a] [a offset len]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a offset len]), :doc "Creates a Int8Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length."}, uint16 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 153, :column 7, :end-line 153, :end-column 13, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint16Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, :name thi.ng.typedarrays.core/uint16, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 13, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint16Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, int8 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 61, :column 7, :end-line 61, :end-column 11, :arglists (quote ([size-or-coll])), :doc "Creates a native Int8Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, :name thi.ng.typedarrays.core/int8, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 11, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Int8Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, int16-view {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 146, :column 7, :end-line 146, :end-column 17, :arglists (quote ([a] [a offset len])), :doc "Creates a Int16Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}}, :name thi.ng.typedarrays.core/int16-view, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}, :method-params ([a] [a offset len]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a offset len]), :doc "Creates a Int16Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length."}, uint32 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 199, :column 7, :end-line 199, :end-column 13, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint32Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, :name thi.ng.typedarrays.core/uint32, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 13, :method-params ([size-or-coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size-or-coll])), :doc "Creates a native Uint32Array of the given size or from `coll`\n  If arg already is a typed array then a copy is created."}, float32-view {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 238, :column 7, :end-line 238, :end-column 19, :arglists (quote ([a] [a offset len])), :doc "Creates a Float32Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}}, :name thi.ng.typedarrays.core/float32-view, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}, :method-params ([a] [a offset len]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 238, :end-line 238, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a offset len]), :doc "Creates a Float32Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length."}, typed-array? {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 18, :column 7, :end-line 18, :end-column 19, :arglists (quote ([x])), :doc "Returns truthy value if the given arg is a typed array instance"}, :name thi.ng.typedarrays.core/typed-array?, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns truthy value if the given arg is a typed array instance"}, float64-view {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 261, :column 7, :end-line 261, :end-column 19, :arglists (quote ([a] [a offset len])), :doc "Creates a Float64Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}}, :name thi.ng.typedarrays.core/float64-view, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}, :method-params ([a] [a offset len]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a offset len]), :doc "Creates a Float64Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length."}, uint8-clamped-view {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 123, :column 7, :end-line 123, :end-column 25, :arglists (quote ([a] [a offset len])), :doc "Creates a Uint8ClampedArray view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}}, :name thi.ng.typedarrays.core/uint8-clamped-view, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 25, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}, :method-params ([a] [a offset len]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a offset len]), :doc "Creates a Uint8ClampedArray view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length."}, uint8-view {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_node_repl/thi/ng/typedarrays/core.cljs", :line 100, :column 7, :end-line 100, :end-column 17, :arglists (quote ([a] [a offset len])), :doc "Creates a Uint8Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}}, :name thi.ng.typedarrays.core/uint8-view, :variadic false, :file ".cljs_node_repl/thi/ng/typedarrays/core.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a] [a offset len]), :arglists ([a] [a offset len]), :arglists-meta (nil nil)}, :method-params ([a] [a offset len]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a offset len]), :doc "Creates a Uint8Array view of the given typed array's\n  underlying ArrayBuffer, optionally from given byte offset\n  and item length."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:int32 :uint8-clamped :int16 :float32 :float64 :else :uint16 :array :int8 :uint32 :uint8}, :order [:float64 :uint8 :int8 :uint8-clamped :uint16 :int16 :uint32 :float32 :int32 :array :else]}, :doc nil}