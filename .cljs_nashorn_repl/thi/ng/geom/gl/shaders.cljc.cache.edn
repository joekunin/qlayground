{:rename-macros {}, :renames {}, :use-macros {warn cljs-log.core, debug cljs-log.core}, :excludes #{}, :name thi.ng.geom.gl.shaders, :imports nil, :requires {thi.ng.color.core thi.ng.color.core, thi.ng.geom.gl.utils thi.ng.geom.gl.utils, thi.ng.glsl.core thi.ng.glsl.core, thi.ng.geom.core thi.ng.geom.core, glsl thi.ng.glsl.core, thi.ng.xerror.core thi.ng.xerror.core, thi.ng.math.core thi.ng.math.core, glu thi.ng.geom.gl.utils, m thi.ng.math.core, err thi.ng.xerror.core, glc thi.ng.geom.gl.webgl.constants, thi.ng.dstruct.streams thi.ng.dstruct.streams, streams thi.ng.dstruct.streams, thi.ng.geom.gl.webgl.constants thi.ng.geom.gl.webgl.constants, g thi.ng.geom.core, str clojure.string, col thi.ng.color.core, thi.ng.typedarrays.core thi.ng.typedarrays.core, clojure.string clojure.string, ta thi.ng.typedarrays.core}, :uses nil, :defs {set-uniform {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 199, :column 7, :end-line 199, :end-column 18, :arglists (quote ([shader uniforms id val]))}, :name thi.ng.geom.gl.shaders/set-uniform, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 18, :method-params ([shader uniforms id val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 4, :fn-var true, :arglists (quote ([shader uniforms id val]))}, init-shader-attribs {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 217, :column 7, :end-line 217, :end-column 26, :arglists (quote ([gl prog attribs]))}, :name thi.ng.geom.gl.shaders/init-shader-attribs, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 26, :method-params ([gl prog attribs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 217, :end-line 217, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl prog attribs]))}, make-shader-from-spec {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 385, :column 10, :end-line 385, :end-column 31, :arglists (quote ([gl spec]))}, :name thi.ng.geom.gl.shaders/make-shader-from-spec, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 31, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 385, :end-line 385, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, bind-attrib-locations {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 345, :column 7, :end-line 345, :end-column 28, :arglists (quote ([gl program attribs]))}, :name thi.ng.geom.gl.shaders/bind-attrib-locations, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 28, :method-params ([gl program attribs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 345, :end-line 345, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl program attribs]))}, default-prelude {:name thi.ng.geom.gl.shaders/default-prelude, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 259, :column 1, :end-line 259, :end-column 21, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 259, :column 6, :end-line 259, :end-column 21}}, compile-glsl3-attribs {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 293, :column 7, :end-line 293, :end-column 28, :arglists (quote ([coll]))}, :name thi.ng.geom.gl.shaders/compile-glsl3-attribs, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 28, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 293, :end-line 293, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, init-shader-uniforms {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 120, :column 7, :end-line 120, :end-column 27, :arglists (quote ([gl prog uniforms]))}, :name thi.ng.geom.gl.shaders/init-shader-uniforms, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 27, :method-params ([gl prog uniforms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl prog uniforms]))}, compile-shader {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 334, :column 10, :end-line 334, :end-column 24, :arglists (quote ([gl src type]))}, :name thi.ng.geom.gl.shaders/compile-shader, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 24, :method-params ([gl src type]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 334, :end-line 334, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl src type]))}, compile-glsl-vars {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 283, :column 7, :end-line 283, :end-column 24, :arglists (quote ([qualifier coll]))}, :name thi.ng.geom.gl.shaders/compile-glsl-vars, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 24, :method-params ([qualifier coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 2, :fn-var true, :arglists (quote ([qualifier coll]))}, set-attribute {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 226, :column 7, :end-line 226, :end-column 20, :arglists (quote ([gl shader id attrib-spec]))}, :name thi.ng.geom.gl.shaders/set-attribute, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 20, :method-params ([gl shader id attrib-spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 226, :max-fixed-arity 4, :fn-var true, :arglists (quote ([gl shader id attrib-spec]))}, apply-default-uniforms {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 206, :column 7, :end-line 206, :end-column 29, :arglists (quote ([shader uniforms]))}, :name thi.ng.geom.gl.shaders/apply-default-uniforms, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 29, :method-params ([shader uniforms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 2, :fn-var true, :arglists (quote ([shader uniforms]))}, bool->int {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 42, :column 7, :end-line 42, :end-column 16, :arglists (quote ([x]))}, :name thi.ng.geom.gl.shaders/bool->int, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, disable-attribute {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 245, :column 7, :end-line 245, :end-column 24, :arglists (quote ([gl shader id]))}, :name thi.ng.geom.gl.shaders/disable-attribute, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 24, :method-params ([gl shader id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl shader id]))}, make-shader-from-dom {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 412, :column 10, :end-line 412, :end-column 30, :arglists (quote ([gl {:keys [vs fs], :as spec}]))}, :name thi.ng.geom.gl.shaders/make-shader-from-dom, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 30, :method-params ([gl p__31087]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 412, :end-line 412, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl {:keys [vs fs], :as spec}]))}, parse-and-throw-error {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 316, :column 10, :end-line 316, :end-column 31, :arglists (quote ([gl shader src]))}, :name thi.ng.geom.gl.shaders/parse-and-throw-error, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 31, :method-params ([gl shader src]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 316, :end-line 316, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl shader src]))}, prepare-shader-sources {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 303, :column 7, :end-line 303, :end-column 29, :arglists (quote ([{:keys [vs fs uniforms attribs varying prelude version]}]))}, :name thi.ng.geom.gl.shaders/prepare-shader-sources, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 29, :method-params ([p__31062]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 303, :end-line 303, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [vs fs uniforms attribs varying prelude version]}]))}, uniform-types {:name thi.ng.geom.gl.shaders/uniform-types, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 50, :column 1, :end-line 50, :end-column 19, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 50, :column 6, :end-line 50, :end-column 19}}, bool->ivec {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :line 44, :column 7, :end-line 44, :end-column 17, :arglists (quote ([coll]))}, :name thi.ng.geom.gl.shaders/bool->ivec, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/shaders.cljc", :end-column 17, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}}, :require-macros {cljs-log.core cljs-log.core, glsl thi.ng.glsl.core, thi.ng.glsl.core thi.ng.glsl.core}, :cljs.analyzer/constants {:seen #{:vs-src :bvec3 :else :int :offset :uniforms :fs-src :mat3 :default :vec3 :float :ivec4 :mat2 :type :ivec2 :setter :vec4 :size :bind-attr :vec2 :bvec2 :normalized? :attribs :varying :prelude :samplerCube :mat4 :bvec4 :bool :version :loc :program :sampler2D :fs :stride :ivec3 :buffer :vs}, :order [:bvec3 :int :mat3 :vec3 :float :ivec4 :mat2 :ivec2 :vec4 :vec2 :bvec2 :samplerCube :mat4 :bvec4 :bool :sampler2D :ivec3 :type :default :setter :loc :else :uniforms :buffer :stride :size :normalized? :offset :attribs :vs :fs :varying :prelude :version :vs-src :fs-src :bind-attr :program]}, :doc nil}