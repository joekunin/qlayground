{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name thi.ng.geom.gl.core, :imports nil, :requires {mat thi.ng.geom.matrix, sh thi.ng.geom.gl.shaders, thi.ng.geom.matrix thi.ng.geom.matrix, thi.ng.geom.utils thi.ng.geom.utils, thi.ng.color.core thi.ng.color.core, thi.ng.geom.core thi.ng.geom.core, gu thi.ng.geom.utils, r thi.ng.geom.rect, v thi.ng.geom.vector, gm thi.ng.geom.gmesh, thi.ng.xerror.core thi.ng.xerror.core, thi.ng.math.core thi.ng.math.core, m thi.ng.math.core, thi.ng.geom.types thi.ng.geom.types, thi.ng.geom.gmesh thi.ng.geom.gmesh, err thi.ng.xerror.core, glc thi.ng.geom.gl.webgl.constants, thi.ng.dstruct.streams thi.ng.dstruct.streams, streams thi.ng.dstruct.streams, thi.ng.geom.vector thi.ng.geom.vector, thi.ng.geom.rect thi.ng.geom.rect, thi.ng.geom.gl.webgl.constants thi.ng.geom.gl.webgl.constants, g thi.ng.geom.core, thi.ng.geom.gl.shaders thi.ng.geom.gl.shaders, col thi.ng.color.core, thi.ng.typedarrays.core thi.ng.typedarrays.core, ta thi.ng.typedarrays.core}, :uses {V3Z thi.ng.geom.vector, Rect2 thi.ng.geom.types, LineStrip2 thi.ng.geom.types, vec3 thi.ng.geom.vector, GMesh thi.ng.geom.types, vec2 thi.ng.geom.vector, LineStrip3 thi.ng.geom.types, Polygon2 thi.ng.geom.types, BasicMesh thi.ng.geom.types}, :defs {mesh-vertex-normals-buffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 206, :column 7, :end-line 206, :end-column 33, :arglists (quote ([m]))}, :name thi.ng.geom.gl.core/mesh-vertex-normals-buffer, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 33, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, set-viewport {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 639, :column 10, :end-line 639, :end-column 22, :arglists (quote ([gl {[x y] :p, [w h] :size}] [gl x y w h])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([gl {[x y] :p, [w h] :size}] [gl x y w h]), :arglists ([gl {[x y] :p, [w h] :size}] [gl x y w h]), :arglists-meta (nil nil)}}, :name thi.ng.geom.gl.core/set-viewport, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([gl {[x y] :p, [w h] :size}] [gl x y w h]), :arglists ([gl {[x y] :p, [w h] :size}] [gl x y w h]), :arglists-meta (nil nil)}, :method-params ([gl {[x y] :p, [w h] :size}] [gl x y w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 639, :end-line 639, :max-fixed-arity 5, :fn-var true, :arglists ([gl {[x y] :p, [w h] :size}] [gl x y w h])}, draw {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 899, :column 10, :end-line 899, :end-column 14, :arglists (quote ([gl spec]))}, :name thi.ng.geom.gl.core/draw, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 14, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 899, :end-line 899, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, end-shader {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 806, :column 7, :end-line 806, :end-column 17, :arglists (quote ([gl shader]))}, :name thi.ng.geom.gl.core/end-shader, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 17, :method-params ([gl shader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 806, :end-line 806, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl shader]))}, inject-normal-matrix {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 875, :column 7, :end-line 875, :end-column 27, :arglists (quote ([spec model-mat view-mat normal-mat-id]))}, :name thi.ng.geom.gl.core/inject-normal-matrix, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 27, :method-params ([spec model-mat view-mat normal-mat-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 875, :end-line 875, :max-fixed-arity 4, :fn-var true, :arglists (quote ([spec model-mat view-mat normal-mat-id]))}, cull-faces {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 627, :column 10, :end-line 627, :end-column 20, :arglists (quote ([gl side]))}, :name thi.ng.geom.gl.core/cull-faces, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 20, :method-params ([gl side]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 627, :end-line 627, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl side]))}, fill-buffer-vec2 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 98, :column 10, :end-line 98, :end-column 26, :arglists (quote ([buf idx v num stride]))}, :name thi.ng.geom.gl.core/fill-buffer-vec2, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 26, :method-params ([buf idx v num stride]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 98, :end-line 98, :max-fixed-arity 5, :fn-var true, :arglists (quote ([buf idx v num stride]))}, fill-vertex-buffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 147, :column 7, :end-line 147, :end-column 25, :arglists (quote ([buf coll stride]))}, :name thi.ng.geom.gl.core/fill-vertex-buffer, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 25, :method-params ([buf coll stride]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 3, :fn-var true, :arglists (quote ([buf coll stride]))}, update-buffer-in-spec {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 784, :column 10, :end-line 784, :end-column 31, :arglists (quote ([gl spec id coll]))}, :name thi.ng.geom.gl.core/update-buffer-in-spec, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 31, :method-params ([gl spec id coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 784, :end-line 784, :max-fixed-arity 4, :fn-var true, :arglists (quote ([gl spec id coll]))}, prepare-render-state {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 840, :column 7, :end-line 840, :end-column 27, :arglists (quote ([gl {:keys [state]}])), :doc "Takes a GL context and shader spec, sets GL render flags stored\n  under :state key (only if :state is present)."}, :name thi.ng.geom.gl.core/prepare-render-state, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 27, :method-params ([gl p__27299]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 840, :end-line 840, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl {:keys [state]}])), :doc "Takes a GL context and shader spec, sets GL render flags stored\n  under :state key (only if :state is present)."}, make-attribute-buffers {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 750, :column 7, :end-line 750, :end-column 29, :arglists (quote ([gl mode attribs]))}, :name thi.ng.geom.gl.core/make-attribute-buffers, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 29, :method-params ([gl mode attribs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 750, :end-line 750, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl mode attribs]))}, begin-shader {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 794, :column 7, :end-line 794, :end-column 19, :arglists (quote ([gl shader uniforms attribs indices]))}, :name thi.ng.geom.gl.core/begin-shader, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 19, :method-params ([gl shader uniforms attribs indices]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 794, :end-line 794, :max-fixed-arity 5, :fn-var true, :arglists (quote ([gl shader uniforms attribs indices]))}, scissor-test {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 611, :column 10, :end-line 611, :end-column 22, :arglists (quote ([gl {[x y] :p, [w h] :size}] [gl x y w h])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([gl {[x y] :p, [w h] :size}] [gl x y w h]), :arglists ([gl {[x y] :p, [w h] :size}] [gl x y w h]), :arglists-meta (nil nil)}}, :name thi.ng.geom.gl.core/scissor-test, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([gl {[x y] :p, [w h] :size}] [gl x y w h]), :arglists ([gl {[x y] :p, [w h] :size}] [gl x y w h]), :arglists-meta (nil nil)}, :method-params ([gl {[x y] :p, [w h] :size}] [gl x y w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 611, :end-line 611, :max-fixed-arity 5, :fn-var true, :arglists ([gl {[x y] :p, [w h] :size}] [gl x y w h])}, bind {:protocol-inline nil, :meta {:protocol thi.ng.geom.gl.core/IBind, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 8, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :column 4, :line 65, :end-line 65, :arglists (quote ([_] [_ opts])), :doc nil}, :protocol thi.ng.geom.gl.core/IBind, :name thi.ng.geom.gl.core/bind, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 8, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :method-params ([_] [_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ opts]), :doc nil}, face-normals-buffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 166, :column 7, :end-line 166, :end-column 26, :arglists (quote ([faces]))}, :name thi.ng.geom.gl.core/face-normals-buffer, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 26, :method-params ([faces]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists (quote ([faces]))}, disable {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 593, :column 10, :end-line 593, :end-column 17, :arglists (quote ([gl flag]))}, :name thi.ng.geom.gl.core/disable, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 17, :method-params ([gl flag]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 593, :end-line 593, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl flag]))}, IRelease {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 22, :column 14, :line 61, :protocol-info {:methods {release [[_]]}}, :end-line 61, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.gl.core/IRelease, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 22, :column 1, :line 61, :protocol-info {:methods {release [[_]]}}, :info nil, :end-line 61, :impls #{}, :doc nil, :jsdoc ("@interface")}, fill-vertex-buffer-faces {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 154, :column 7, :end-line 154, :end-column 31, :arglists (quote ([f buf coll stride]))}, :name thi.ng.geom.gl.core/fill-vertex-buffer-faces, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 31, :method-params ([f buf coll stride]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 4, :fn-var true, :arglists (quote ([f buf coll stride]))}, IFramebuffer {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 26, :column 14, :line 75, :protocol-info {:methods {set-fbo-color-texture [[_ tex]], set-fbo-depth-buffer [[_ depth-buffer]]}}, :end-line 75, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.gl.core/IFramebuffer, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 26, :column 1, :line 75, :protocol-info {:methods {set-fbo-color-texture [[_ tex]], set-fbo-depth-buffer [[_ depth-buffer]]}}, :info nil, :end-line 75, :impls #{}, :doc nil, :jsdoc ("@interface")}, IBind {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 19, :column 14, :line 64, :protocol-info {:methods {bind [[_] [_ opts]], unbind [[_] [_ opts]]}}, :end-line 64, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.gl.core/IBind, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 19, :column 1, :line 64, :protocol-info {:methods {bind [[_] [_ opts]], unbind [[_] [_ opts]]}}, :info nil, :end-line 64, :impls #{}, :doc nil, :jsdoc ("@interface")}, enable {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 599, :column 10, :end-line 599, :end-column 16, :arglists (quote ([gl flag]))}, :name thi.ng.geom.gl.core/enable, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 16, :method-params ([gl flag]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 599, :end-line 599, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl flag]))}, clear-color-and-depth-buffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 579, :column 10, :end-line 579, :end-column 38, :arglists (quote ([gl col d] [gl r g b a d])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([gl col d] [gl r g b a d]), :arglists ([gl col d] [gl r g b a d]), :arglists-meta (nil nil)}}, :name thi.ng.geom.gl.core/clear-color-and-depth-buffer, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 38, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([gl col d] [gl r g b a d]), :arglists ([gl col d] [gl r g b a d]), :arglists-meta (nil nil)}, :method-params ([gl col d] [gl r g b a d]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 579, :end-line 579, :max-fixed-arity 6, :fn-var true, :arglists ([gl col d] [gl r g b a d])}, get-extension {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 671, :column 10, :end-line 671, :end-column 23, :arglists (quote ([gl ext]))}, :name thi.ng.geom.gl.core/get-extension, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 23, :method-params ([gl ext]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 671, :end-line 671, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl ext]))}, get-float-extension {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 676, :column 10, :end-line 676, :end-column 29, :arglists (quote ([gl spec]))}, :name thi.ng.geom.gl.core/get-float-extension, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 29, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 676, :end-line 676, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, zero-fill-coll {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 79, :column 7, :end-line 79, :end-column 21, :arglists (quote ([coll stride]))}, :name thi.ng.geom.gl.core/zero-fill-coll, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 21, :method-params ([coll stride]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll stride]))}, auto-normal-matrix {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 868, :column 7, :end-line 868, :end-column 25, :arglists (quote ([model-id view-id]))}, :name thi.ng.geom.gl.core/auto-normal-matrix, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 25, :method-params ([model-id view-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 868, :end-line 868, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model-id view-id]))}, compute-normal-matrix {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 865, :column 7, :end-line 865, :end-column 28, :arglists (quote ([m v]))}, :name thi.ng.geom.gl.core/compute-normal-matrix, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 28, :method-params ([m v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 865, :end-line 865, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m v]))}, clear-color-buffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 544, :column 10, :end-line 544, :end-column 28, :arglists (quote ([gl col] [gl r g b a])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([gl col] [gl r g b a]), :arglists ([gl col] [gl r g b a]), :arglists-meta (nil nil)}}, :name thi.ng.geom.gl.core/clear-color-buffer, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 28, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([gl col] [gl r g b a]), :arglists ([gl col] [gl r g b a]), :arglists-meta (nil nil)}, :method-params ([gl col] [gl r g b a]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 544, :end-line 544, :max-fixed-arity 5, :fn-var true, :arglists ([gl col] [gl r g b a])}, draw-with-shader {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 907, :column 7, :end-line 907, :end-column 23, :arglists (quote ([gl {:keys [shader], :as spec}]))}, :name thi.ng.geom.gl.core/draw-with-shader, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 23, :method-params ([gl p__27319]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 907, :end-line 907, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl {:keys [shader], :as spec}]))}, context-default-attribs {:name thi.ng.geom.gl.core/context-default-attribs, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 501, :column 4, :end-line 501, :end-column 32, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 501, :column 9, :end-line 501, :end-column 32}}, fill-buffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 138, :column 10, :end-line 138, :end-column 21, :arglists (quote ([buf idx coll n stride]))}, :name thi.ng.geom.gl.core/fill-buffer, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 21, :method-params ([buf idx coll n stride]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 138, :end-line 138, :max-fixed-arity 5, :fn-var true, :arglists (quote ([buf idx coll n stride]))}, release {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 62, :column 4, :end-line 62, :end-column 11, :protocol thi.ng.geom.gl.core/IRelease, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.gl.core/IRelease, :name thi.ng.geom.gl.core/release, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, mesh-face-normals-buffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 185, :column 7, :end-line 185, :end-column 31, :arglists (quote ([m]))}, :name thi.ng.geom.gl.core/mesh-face-normals-buffer, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 31, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, as-gl-buffer-spec {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 59, :column 4, :end-line 59, :end-column 21, :protocol thi.ng.geom.gl.core/IGLConvert, :doc nil, :arglists (quote ([_ opts]))}, :protocol thi.ng.geom.gl.core/IGLConvert, :name thi.ng.geom.gl.core/as-gl-buffer-spec, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 21, :method-params ([_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ opts])), :doc nil}, ITexture {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 22, :column 14, :line 71, :protocol-info {:methods {set-texture-filter [[_ min mag]], set-texture-wrap [[_ wrap-s wrap-t]]}}, :end-line 71, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.gl.core/ITexture, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 22, :column 1, :line 71, :protocol-info {:methods {set-texture-filter [[_ min mag]], set-texture-wrap [[_ wrap-s wrap-t]]}}, :info nil, :end-line 71, :impls #{}, :doc nil, :jsdoc ("@interface")}, ortho {:name thi.ng.geom.gl.core/ortho, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 658, :column 1, :end-line 658, :end-column 11, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 658, :column 6, :end-line 658, :end-column 11}}, make-array-buffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 725, :column 10, :end-line 725, :end-column 27, :arglists (quote ([gl target mode data]))}, :name thi.ng.geom.gl.core/make-array-buffer, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 27, :method-params ([gl target mode data]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 725, :end-line 725, :max-fixed-arity 4, :fn-var true, :arglists (quote ([gl target mode data]))}, set-texture-filter {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 72, :column 4, :end-line 72, :end-column 22, :protocol thi.ng.geom.gl.core/ITexture, :doc nil, :arglists (quote ([_ min mag]))}, :protocol thi.ng.geom.gl.core/ITexture, :name thi.ng.geom.gl.core/set-texture-filter, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 22, :method-params ([_ min mag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 72, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ min mag])), :doc nil}, set-fbo-depth-buffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 77, :column 4, :end-line 77, :end-column 24, :protocol thi.ng.geom.gl.core/IFramebuffer, :doc nil, :arglists (quote ([_ depth-buffer]))}, :protocol thi.ng.geom.gl.core/IFramebuffer, :name thi.ng.geom.gl.core/set-fbo-depth-buffer, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 24, :method-params ([_ depth-buffer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 77, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ depth-buffer])), :doc nil}, make-buffers-in-spec {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 764, :column 7, :end-line 764, :end-column 27, :arglists (quote ([spec gl mode]))}, :name thi.ng.geom.gl.core/make-buffers-in-spec, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 27, :method-params ([spec gl mode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 764, :end-line 764, :max-fixed-arity 3, :fn-var true, :arglists (quote ([spec gl mode]))}, get-supported-extensions {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 699, :column 10, :end-line 699, :end-column 34, :arglists (quote ([gl]))}, :name thi.ng.geom.gl.core/get-supported-extensions, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 34, :method-params ([gl]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 699, :end-line 699, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gl]))}, perspective {:name thi.ng.geom.gl.core/perspective, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 656, :column 1, :end-line 656, :end-column 17, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 656, :column 6, :end-line 656, :end-column 17}}, set-fbo-color-texture {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 76, :column 4, :end-line 76, :end-column 25, :protocol thi.ng.geom.gl.core/IFramebuffer, :doc nil, :arglists (quote ([_ tex]))}, :protocol thi.ng.geom.gl.core/IFramebuffer, :name thi.ng.geom.gl.core/set-fbo-color-texture, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 25, :method-params ([_ tex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ tex])), :doc nil}, gl-context {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 514, :column 10, :end-line 514, :end-column 20, :arglists (quote ([canvas] [canvas attribs])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([canvas] [canvas attribs]), :arglists ([canvas] [canvas attribs]), :arglists-meta (nil nil)}}, :name thi.ng.geom.gl.core/gl-context, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([canvas] [canvas attribs]), :arglists ([canvas] [canvas attribs]), :arglists-meta (nil nil)}, :method-params ([canvas] [canvas attribs]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 514, :end-line 514, :max-fixed-arity 2, :fn-var true, :arglists ([canvas] [canvas attribs])}, configure {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 69, :column 4, :end-line 69, :end-column 13, :protocol thi.ng.geom.gl.core/IConfigure, :doc nil, :arglists (quote ([_ opts]))}, :protocol thi.ng.geom.gl.core/IConfigure, :name thi.ng.geom.gl.core/configure, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 13, :method-params ([_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ opts])), :doc nil}, IConfigure {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 24, :column 14, :line 68, :protocol-info {:methods {configure [[_ opts]]}}, :end-line 68, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.gl.core/IConfigure, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 24, :column 1, :line 68, :protocol-info {:methods {configure [[_ opts]]}}, :info nil, :end-line 68, :impls #{}, :doc nil, :jsdoc ("@interface")}, get-viewport-rect {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 651, :column 10, :end-line 651, :end-column 27, :arglists (quote ([gl]))}, :name thi.ng.geom.gl.core/get-viewport-rect, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 27, :method-params ([gl]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 651, :end-line 651, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gl]))}, IGLConvert {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 24, :column 14, :line 58, :protocol-info {:methods {as-gl-buffer-spec [[_ opts]]}}, :end-line 58, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.gl.core/IGLConvert, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 24, :column 1, :line 58, :protocol-info {:methods {as-gl-buffer-spec [[_ opts]]}}, :info nil, :end-line 58, :impls #{thi.ng.geom.types/BasicMesh thi.ng.geom.types/LineStrip2 thi.ng.geom.types/GMesh thi.ng.geom.types/Rect2 thi.ng.geom.types/LineStrip3 thi.ng.geom.types/Polygon2}, :doc nil, :jsdoc ("@interface")}, bind-sequentially {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 832, :column 7, :end-line 832, :end-column 24, :arglists (quote ([coll]))}, :name thi.ng.geom.gl.core/bind-sequentially, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 24, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 832, :end-line 832, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, float-ext-ids {:name thi.ng.geom.gl.core/float-ext-ids, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 662, :column 1, :end-line 662, :end-column 29, :private true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 662, :column 16, :end-line 662, :end-column 29, :private true}}, into-float-buffer-vec3 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 318, :column 10, :end-line 318, :end-column 32, :arglists (quote ([v buf stride idx]))}, :name thi.ng.geom.gl.core/into-float-buffer-vec3, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 32, :method-params ([v buf stride idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 318, :end-line 318, :max-fixed-arity 4, :fn-var true, :arglists (quote ([v buf stride idx]))}, set-texture-wrap {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 73, :column 4, :end-line 73, :end-column 20, :protocol thi.ng.geom.gl.core/ITexture, :doc nil, :arglists (quote ([_ wrap-s wrap-t]))}, :protocol thi.ng.geom.gl.core/ITexture, :name thi.ng.geom.gl.core/set-texture-wrap, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 20, :method-params ([_ wrap-s wrap-t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 73, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ wrap-s wrap-t])), :doc nil}, fill-buffer-vec3 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 118, :column 10, :end-line 118, :end-column 26, :arglists (quote ([buf idx v num stride]))}, :name thi.ng.geom.gl.core/fill-buffer-vec3, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 26, :method-params ([buf idx v num stride]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 118, :end-line 118, :max-fixed-arity 5, :fn-var true, :arglists (quote ([buf idx v num stride]))}, clear-depth-buffer {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 561, :column 10, :end-line 561, :end-column 28, :arglists (quote ([gl d]))}, :name thi.ng.geom.gl.core/clear-depth-buffer, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 28, :method-params ([gl d]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 561, :end-line 561, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl d]))}, into-float-buffer-vec2 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 304, :column 10, :end-line 304, :end-column 32, :arglists (quote ([v buf stride idx]))}, :name thi.ng.geom.gl.core/into-float-buffer-vec2, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 32, :method-params ([v buf stride idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 304, :end-line 304, :max-fixed-arity 4, :fn-var true, :arglists (quote ([v buf stride idx]))}, common-attrib-buffer-specs {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :line 245, :column 7, :end-line 245, :end-column 33, :arglists (quote ([{:keys [num-vertices], :as acc} {:keys [normals fixed-normal uv colors fixed-color]}]))}, :name thi.ng.geom.gl.core/common-attrib-buffer-specs, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 33, :method-params ([p__27153 p__27154]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [num-vertices], :as acc} {:keys [normals fixed-normal uv colors fixed-color]}]))}, unbind {:protocol-inline nil, :meta {:protocol thi.ng.geom.gl.core/IBind, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :column 4, :line 66, :end-line 66, :arglists (quote ([_] [_ opts])), :doc nil}, :protocol thi.ng.geom.gl.core/IBind, :name thi.ng.geom.gl.core/unbind, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/gl/core.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :method-params ([_] [_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ opts]), :doc nil}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:prefer-low-power-to-high-performance :preserve-drawing-buffer :blend-eq :prefer :color :num-vertices :single :antialias :else :depth-test :tex :uniforms :default :fail-if-major-performance-caveat :precision :renderable :mode :require :filterable :fixed-color :vnormals :type :colors :premultiplied-alpha :state :points :num-items :normal :size :attribs :num-faces :score :tessellate :normals :half :alpha :position :depth :fixed-normal :blend :indices :target :blend-fn :program :buffer-mode :p :stride :texture :shader :uv :fnormals :buffer :stencil :data}, :order [:else :num-vertices :normals :fixed-normal :uv :colors :fixed-color :attribs :normal :data :size :color :points :stride :mode :position :num-faces :fnormals :tessellate :vnormals :default :alpha :antialias :depth :fail-if-major-performance-caveat :prefer-low-power-to-high-performance :premultiplied-alpha :preserve-drawing-buffer :stencil :p :score :prefer :texture :require :filterable :renderable :type :precision :single :half :target :buffer :buffer-mode :indices :program :state :depth-test :blend :blend-fn :blend-eq :tex :uniforms :num-items :shader]}, :doc nil}