{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{into}, :name thi.ng.geom.core, :imports nil, :requires nil, :uses nil, :defs {rotate-x {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 34, :column 4, :end-line 34, :end-column 12, :protocol thi.ng.geom.core/IRotate3D, :doc nil, :arglists (quote ([_ t]))}, :protocol thi.ng.geom.core/IRotate3D, :name thi.ng.geom.core/rotate-x, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :method-params ([_ t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ t])), :doc nil}, IBoundary {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 23, :column 14, :line 122, :protocol-info {:methods {contains-entity? [[_ s]], contains-point? [[_ p]]}}, :end-line 122, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IBoundary, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 23, :column 1, :line 122, :protocol-info {:methods {contains-entity? [[_ s]], contains-point? [[_ p]]}}, :info nil, :end-line 122, :impls #{}, :doc nil, :jsdoc ("@interface")}, IRotate {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 21, :column 14, :line 30, :protocol-info {:methods {rotate [[_ t]]}}, :end-line 30, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IRotate, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 21, :column 1, :line 30, :protocol-info {:methods {rotate [[_ t]]}}, :info nil, :end-line 30, :impls #{}, :doc nil, :jsdoc ("@interface")}, ISample {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 21, :column 14, :line 198, :protocol-info {:methods {point-at [[_ t] [_ u v]], random-point [[_]], random-point-inside [[_]], sample-uniform [[_ dist include-last?]], sample-with-resolution [[_ res]]}}, :end-line 198, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/ISample, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 21, :column 1, :line 198, :protocol-info {:methods {point-at [[_ t] [_ u v]], random-point [[_]], random-point-inside [[_]], sample-uniform [[_ dist include-last?]], sample-with-resolution [[_ res]]}}, :info nil, :end-line 198, :impls #{}, :doc nil, :jsdoc ("@interface")}, IRotate3D {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 23, :column 14, :line 33, :protocol-info {:methods {rotate-x [[_ t]], rotate-y [[_ t]], rotate-z [[_ t]], rotate-around-axis [[_ a t]]}}, :end-line 33, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IRotate3D, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 23, :column 1, :line 33, :protocol-info {:methods {rotate-x [[_ t]], rotate-y [[_ t]], rotate-z [[_ t]], rotate-around-axis [[_ a t]]}}, :info nil, :end-line 33, :impls #{}, :doc nil, :jsdoc ("@interface")}, rotate-z {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 36, :column 4, :end-line 36, :end-column 12, :protocol thi.ng.geom.core/IRotate3D, :doc nil, :arglists (quote ([_ t]))}, :protocol thi.ng.geom.core/IRotate3D, :name thi.ng.geom.core/rotate-z, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :method-params ([_ t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ t])), :doc nil}, replace-vertex {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 67, :column 4, :end-line 67, :end-column 18, :protocol thi.ng.geom.core/IGraph, :doc nil, :arglists (quote ([_ a b]))}, :protocol thi.ng.geom.core/IGraph, :name thi.ng.geom.core/replace-vertex, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 18, :method-params ([_ a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 67, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ a b])), :doc nil}, subdivide-face {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 211, :column 4, :end-line 211, :end-column 18, :protocol thi.ng.geom.core/ISubdivide, :doc nil, :arglists (quote ([_ f p displace splits]))}, :protocol thi.ng.geom.core/ISubdivide, :name thi.ng.geom.core/subdivide-face, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 18, :method-params ([_ f p displace splits]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 211, :max-fixed-arity 5, :fn-var true, :arglists (quote ([_ f p displace splits])), :doc nil}, get-prop {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 227, :column 4, :end-line 227, :end-column 12, :protocol thi.ng.geom.core/IMutableProps, :doc nil, :arglists (quote ([_ k]))}, :protocol thi.ng.geom.core/IMutableProps, :name thi.ng.geom.core/get-prop, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :method-params ([_ k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 227, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ k])), :doc nil}, face-normal {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 104, :column 4, :end-line 104, :end-column 15, :protocol thi.ng.geom.core/INormalAccess, :doc nil, :arglists (quote ([_ f]))}, :protocol thi.ng.geom.core/INormalAccess, :name thi.ng.geom.core/face-normal, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 15, :method-params ([_ f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 104, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ f])), :doc nil}, IConvexHull {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 25, :column 14, :line 162, :protocol-info {:methods {convex-hull [[_]]}}, :end-line 162, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IConvexHull, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 25, :column 1, :line 162, :protocol-info {:methods {convex-hull [[_]]}}, :info nil, :end-line 162, :impls #{}, :doc nil, :jsdoc ("@interface")}, extrude {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 166, :column 4, :end-line 166, :end-column 11, :protocol thi.ng.geom.core/IExtrude, :doc nil, :arglists (quote ([_ opts]))}, :protocol thi.ng.geom.core/IExtrude, :name thi.ng.geom.core/extrude, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 11, :method-params ([_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 166, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ opts])), :doc nil}, ITessellate {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 25, :column 14, :line 213, :protocol-info {:methods {tessellate [[_] [_ opts]]}}, :end-line 213, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/ITessellate, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 25, :column 1, :line 213, :protocol-info {:methods {tessellate [[_] [_ opts]]}}, :info nil, :end-line 213, :impls #{}, :doc nil, :jsdoc ("@interface")}, remove-vertex {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 66, :column 4, :end-line 66, :end-column 17, :protocol thi.ng.geom.core/IGraph, :doc nil, :arglists (quote ([_ v]))}, :protocol thi.ng.geom.core/IGraph, :name thi.ng.geom.core/remove-vertex, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 17, :method-params ([_ v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ v])), :doc nil}, random-point-inside {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 201, :column 4, :end-line 201, :end-column 23, :protocol thi.ng.geom.core/ISample, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/ISample, :name thi.ng.geom.core/random-point-inside, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 23, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 201, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, contains-point? {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 124, :column 4, :end-line 124, :end-column 19, :protocol thi.ng.geom.core/IBoundary, :doc nil, :arglists (quote ([_ p]))}, :protocol thi.ng.geom.core/IBoundary, :name thi.ng.geom.core/contains-point?, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 19, :method-params ([_ p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 124, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ p])), :doc nil}, ISubdivide {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :column 14, :line 208, :protocol-info {:methods {subdivide [[_] [_ opts]], subdivide-edge [[_ a b splits]], subdivide-face [[_ f p displace splits]]}}, :end-line 208, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/ISubdivide, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :column 1, :line 208, :protocol-info {:methods {subdivide [[_] [_ opts]], subdivide-edge [[_ a b splits]], subdivide-face [[_ f p displace splits]]}}, :info nil, :end-line 208, :impls #{}, :doc nil, :jsdoc ("@interface")}, IPolar {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 14, :line 23, :protocol-info {:methods {as-polar [[_]], as-cartesian [[_]]}}, :end-line 23, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IPolar, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 1, :line 23, :protocol-info {:methods {as-polar [[_]], as-cartesian [[_]]}}, :info nil, :end-line 23, :impls #{}, :doc nil, :jsdoc ("@interface")}, edges {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/IEdgeAccess, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 9, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :column 4, :line 81, :end-line 81, :arglists (quote ([_] [_ opts])), :doc nil}, :protocol thi.ng.geom.core/IEdgeAccess, :name thi.ng.geom.core/edges, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 9, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :method-params ([_] [_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ opts]), :doc nil}, IDirectedGraph {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 28, :column 14, :line 70, :protocol-info {:methods {in-vertices [[_ v]], out-vertices [[_ v]]}}, :end-line 70, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IDirectedGraph, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 28, :column 1, :line 70, :protocol-info {:methods {in-vertices [[_ v]], out-vertices [[_ v]]}}, :info nil, :end-line 70, :impls #{}, :doc nil, :jsdoc ("@interface")}, as-cartesian {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 25, :column 4, :end-line 25, :end-column 16, :protocol thi.ng.geom.core/IPolar, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IPolar, :name thi.ng.geom.core/as-cartesian, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 16, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, scale-size {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 44, :column 4, :end-line 44, :end-column 14, :protocol thi.ng.geom.core/IScale, :doc nil, :arglists (quote ([_ s]))}, :protocol thi.ng.geom.core/IScale, :name thi.ng.geom.core/scale-size, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 14, :method-params ([_ s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ s])), :doc nil}, ISpatialTree {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 26, :column 14, :line 220, :protocol-info {:methods {add-point [[_ p d]], delete-point [[_ p]], get-point [[_]], get-point-data [[_]]}}, :end-line 220, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/ISpatialTree, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 26, :column 1, :line 220, :protocol-info {:methods {add-point [[_ p d]], delete-point [[_ p]], get-point [[_]], get-point-data [[_]]}}, :info nil, :end-line 220, :impls #{}, :doc nil, :jsdoc ("@interface")}, reflect {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 40, :column 4, :end-line 40, :end-column 11, :protocol thi.ng.geom.core/IReflect, :doc nil, :arglists (quote ([_ r]))}, :protocol thi.ng.geom.core/IReflect, :name thi.ng.geom.core/reflect, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 11, :method-params ([_ r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ r])), :doc nil}, height {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 137, :column 4, :end-line 137, :end-column 10, :protocol thi.ng.geom.core/IBounds, :doc "Returns entity's extent along Y axis", :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IBounds, :name thi.ng.geom.core/height, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 137, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns entity's extent along Y axis"}, intersect-shape {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 181, :column 4, :end-line 181, :end-column 19, :protocol thi.ng.geom.core/IIntersect, :doc nil, :arglists (quote ([_ s]))}, :protocol thi.ng.geom.core/IIntersect, :name thi.ng.geom.core/intersect-shape, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 19, :method-params ([_ s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 181, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ s])), :doc nil}, IBoundingSphere {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 29, :column 14, :line 129, :protocol-info {:methods {bounding-sphere [[_]]}}, :end-line 129, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IBoundingSphere, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 29, :column 1, :line 129, :protocol-info {:methods {bounding-sphere [[_]]}}, :info nil, :end-line 129, :impls #{}, :doc nil, :jsdoc ("@interface")}, as-mesh {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/IMeshConvert, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :column 4, :line 184, :end-line 184, :arglists (quote ([_] [_ opts])), :doc "Transforms the current enitity into a mesh instance"}, :protocol thi.ng.geom.core/IMeshConvert, :name thi.ng.geom.core/as-mesh, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :method-params ([_] [_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 184, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ opts]), :doc "Transforms the current enitity into a mesh instance"}, as-matrix {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/IMatrixConvert, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :column 4, :line 59, :end-line 59, :arglists (quote ([_] [_ opts])), :doc nil}, :protocol thi.ng.geom.core/IMatrixConvert, :name thi.ng.geom.core/as-matrix, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :method-params ([_] [_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ opts]), :doc nil}, vertex-normals {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 105, :column 4, :end-line 105, :end-column 18, :protocol thi.ng.geom.core/INormalAccess, :doc nil, :arglists (quote ([_ force?]))}, :protocol thi.ng.geom.core/INormalAccess, :name thi.ng.geom.core/vertex-normals, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 18, :method-params ([_ force?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ force?])), :doc nil}, heading {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 11, :column 4, :end-line 11, :end-column 11, :protocol thi.ng.geom.core/IHeading, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IHeading, :name thi.ng.geom.core/heading, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, map-point {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 188, :column 4, :end-line 188, :end-column 13, :protocol thi.ng.geom.core/IPointMap, :doc nil, :arglists (quote ([_ p]))}, :protocol thi.ng.geom.core/IPointMap, :name thi.ng.geom.core/map-point, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 13, :method-params ([_ p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 188, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ p])), :doc nil}, merge-vertices {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 68, :column 4, :end-line 68, :end-column 18, :protocol thi.ng.geom.core/IGraph, :doc nil, :arglists (quote ([_ a b]))}, :protocol thi.ng.geom.core/IGraph, :name thi.ng.geom.core/merge-vertices, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 18, :method-params ([_ a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 68, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ a b])), :doc nil}, IBounds {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 21, :column 14, :line 132, :protocol-info {:methods {bounds [[_]], depth [[_]], height [[_]], width [[_]]}}, :end-line 132, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IBounds, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 21, :column 1, :line 132, :protocol-info {:methods {bounds [[_]], depth [[_]], height [[_]], width [[_]]}}, :info nil, :end-line 132, :impls #{}, :doc nil, :jsdoc ("@interface")}, slope-xy {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 16, :column 4, :end-line 16, :end-column 12, :protocol thi.ng.geom.core/IHeading, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IHeading, :name thi.ng.geom.core/slope-xy, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, IPolygonConvert {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 29, :column 14, :line 191, :protocol-info {:methods {as-polygon [[_] [_ res]]}}, :end-line 191, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IPolygonConvert, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 29, :column 1, :line 191, :protocol-info {:methods {as-polygon [[_] [_ res]]}}, :info nil, :end-line 191, :impls #{}, :doc nil, :jsdoc ("@interface")}, IVertexAccess {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 27, :column 14, :line 77, :protocol-info {:methods {vertices [[_] [_ opts]]}}, :end-line 77, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IVertexAccess, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 27, :column 1, :line 77, :protocol-info {:methods {vertices [[_] [_ opts]]}}, :info nil, :end-line 77, :impls #{}, :doc nil, :jsdoc ("@interface")}, update-prop! {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 229, :column 4, :end-line 229, :end-column 16, :protocol thi.ng.geom.core/IMutableProps, :doc nil, :arglists (quote ([_ k f]))}, :protocol thi.ng.geom.core/IMutableProps, :name thi.ng.geom.core/update-prop!, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 16, :method-params ([_ k f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 229, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ k f])), :doc nil}, transform-vector {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 56, :column 4, :end-line 56, :end-column 20, :protocol thi.ng.geom.core/IVectorTransform, :doc nil, :arglists (quote ([_ v]))}, :protocol thi.ng.geom.core/IVectorTransform, :name thi.ng.geom.core/transform-vector, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :method-params ([_ v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ v])), :doc nil}, out-vertices {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 72, :column 4, :end-line 72, :end-column 16, :protocol thi.ng.geom.core/IDirectedGraph, :doc nil, :arglists (quote ([_ v]))}, :protocol thi.ng.geom.core/IDirectedGraph, :name thi.ng.geom.core/out-vertices, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 16, :method-params ([_ v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ v])), :doc nil}, ITransform {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :column 14, :line 49, :protocol-info {:methods {transform [[_ tx]]}}, :end-line 49, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/ITransform, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :column 1, :line 49, :protocol-info {:methods {transform [[_ tx]]}}, :info nil, :end-line 49, :impls #{}, :doc nil, :jsdoc ("@interface")}, get-point-data {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 224, :column 4, :end-line 224, :end-column 18, :protocol thi.ng.geom.core/ISpatialTree, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/ISpatialTree, :name thi.ng.geom.core/get-point-data, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 18, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 224, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, rotate-y {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 35, :column 4, :end-line 35, :end-column 12, :protocol thi.ng.geom.core/IRotate3D, :doc nil, :arglists (quote ([_ t]))}, :protocol thi.ng.geom.core/IRotate3D, :name thi.ng.geom.core/rotate-y, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :method-params ([_ t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ t])), :doc nil}, IInset {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 14, :line 175, :protocol-info {:methods {inset [[_ inset]]}}, :end-line 175, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IInset, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 1, :line 175, :protocol-info {:methods {inset [[_ inset]]}}, :info nil, :end-line 175, :impls #{}, :doc nil, :jsdoc ("@interface")}, as-graph {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/IGraphConvert, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :column 4, :line 75, :end-line 75, :arglists (quote ([_] [_ opts])), :doc nil}, :protocol thi.ng.geom.core/IGraphConvert, :name thi.ng.geom.core/as-graph, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :method-params ([_] [_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ opts]), :doc nil}, vertices {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/IVertexAccess, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :column 4, :line 78, :end-line 78, :arglists (quote ([_] [_ opts])), :doc nil}, :protocol thi.ng.geom.core/IVertexAccess, :name thi.ng.geom.core/vertices, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :method-params ([_] [_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ opts]), :doc nil}, into {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 173, :column 4, :end-line 173, :end-column 8, :protocol thi.ng.geom.core/IGeomContainer, :doc nil, :arglists (quote ([_ m]))}, :protocol thi.ng.geom.core/IGeomContainer, :name thi.ng.geom.core/into, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 8, :method-params ([_ m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 173, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ m])), :doc nil}, transform {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 50, :column 4, :end-line 50, :end-column 13, :protocol thi.ng.geom.core/ITransform, :doc nil, :arglists (quote ([_ tx]))}, :protocol thi.ng.geom.core/ITransform, :name thi.ng.geom.core/transform, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 13, :method-params ([_ tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ tx])), :doc nil}, classify-point {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 153, :column 4, :end-line 153, :end-column 18, :protocol thi.ng.geom.core/IClassify, :doc nil, :arglists (quote ([_ p]))}, :protocol thi.ng.geom.core/IClassify, :name thi.ng.geom.core/classify-point, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 18, :method-params ([_ p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 153, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ p])), :doc nil}, IGraph {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 14, :line 61, :protocol-info {:methods {connected-components [[_]], cyclic? [[_]], vertex-valence [[_ v]], vertex-neighbors [[_ v]], remove-vertex [[_ v]], replace-vertex [[_ a b]], merge-vertices [[_ a b]]}}, :end-line 61, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IGraph, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 1, :line 61, :protocol-info {:methods {connected-components [[_]], cyclic? [[_]], vertex-valence [[_ v]], vertex-neighbors [[_ v]], remove-vertex [[_ v]], replace-vertex [[_ a b]], merge-vertices [[_ a b]]}}, :info nil, :end-line 61, :impls #{}, :doc nil, :jsdoc ("@interface")}, IArea {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 19, :column 14, :line 118, :protocol-info {:methods {area [[_]]}}, :end-line 118, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IArea, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 19, :column 1, :line 118, :protocol-info {:methods {area [[_]]}}, :info nil, :end-line 118, :impls #{}, :doc nil, :jsdoc ("@interface")}, inset {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 176, :column 4, :end-line 176, :end-column 9, :protocol thi.ng.geom.core/IInset, :doc nil, :arglists (quote ([_ inset]))}, :protocol thi.ng.geom.core/IInset, :name thi.ng.geom.core/inset, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 9, :method-params ([_ inset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 176, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ inset])), :doc nil}, add-point {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 221, :column 4, :end-line 221, :end-column 13, :protocol thi.ng.geom.core/ISpatialTree, :doc nil, :arglists (quote ([_ p d]))}, :protocol thi.ng.geom.core/ISpatialTree, :name thi.ng.geom.core/add-point, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 13, :method-params ([_ p d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 221, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ p d])), :doc nil}, IPointMap {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 23, :column 14, :line 187, :protocol-info {:methods {map-point [[_ p]], unmap-point [[_ p]]}}, :end-line 187, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IPointMap, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 23, :column 1, :line 187, :protocol-info {:methods {map-point [[_ p]], unmap-point [[_ p]]}}, :info nil, :end-line 187, :impls #{}, :doc nil, :jsdoc ("@interface")}, slope-xz {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 17, :column 4, :end-line 17, :end-column 12, :protocol thi.ng.geom.core/IHeading, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IHeading, :name thi.ng.geom.core/slope-xz, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, convex-hull {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 163, :column 4, :end-line 163, :end-column 15, :protocol thi.ng.geom.core/IConvexHull, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IConvexHull, :name thi.ng.geom.core/convex-hull, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 15, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, shear {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 47, :column 4, :end-line 47, :end-column 9, :protocol thi.ng.geom.core/IShear, :doc nil, :arglists (quote ([_ s]))}, :protocol thi.ng.geom.core/IShear, :name thi.ng.geom.core/shear, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 9, :method-params ([_ s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ s])), :doc nil}, connected-components {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 62, :column 4, :end-line 62, :end-column 24, :protocol thi.ng.geom.core/IGraph, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IGraph, :name thi.ng.geom.core/connected-components, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, heading-xy {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 12, :column 4, :end-line 12, :end-column 14, :protocol thi.ng.geom.core/IHeading, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IHeading, :name thi.ng.geom.core/heading-xy, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 14, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, INormalAccess {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 27, :column 14, :line 100, :protocol-info {:methods {compute-face-normals [[_]], compute-vertex-normals [[_]], face-normals [[_ force?]], face-normal [[_ f]], vertex-normals [[_ force?]], vertex-normal [[_ v]]}}, :end-line 100, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/INormalAccess, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 27, :column 1, :line 100, :protocol-info {:methods {compute-face-normals [[_]], compute-vertex-normals [[_]], face-normals [[_ force?]], face-normal [[_ f]], vertex-normals [[_ force?]], vertex-normal [[_ v]]}}, :info nil, :end-line 100, :impls #{}, :doc nil, :jsdoc ("@interface")}, flip {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 170, :column 4, :end-line 170, :end-column 8, :protocol thi.ng.geom.core/IFlip, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IFlip, :name thi.ng.geom.core/flip, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 8, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, vertex-neighbors {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 65, :column 4, :end-line 65, :end-column 20, :protocol thi.ng.geom.core/IGraph, :doc nil, :arglists (quote ([_ v]))}, :protocol thi.ng.geom.core/IGraph, :name thi.ng.geom.core/vertex-neighbors, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :method-params ([_ v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ v])), :doc nil}, compute-face-normals {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 101, :column 4, :end-line 101, :end-column 24, :protocol thi.ng.geom.core/INormalAccess, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/INormalAccess, :name thi.ng.geom.core/compute-face-normals, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, IScale {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 14, :line 42, :protocol-info {:methods {scale [[_ s]], scale-size [[_ s]]}}, :end-line 42, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IScale, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 1, :line 42, :protocol-info {:methods {scale [[_ s]], scale-size [[_ s]]}}, :info nil, :end-line 42, :impls #{}, :doc nil, :jsdoc ("@interface")}, align-with {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 115, :column 4, :end-line 115, :end-column 14, :protocol thi.ng.geom.core/IAlign, :doc "Returns updated entity aligned with `x` in the specified manner", :arglists (quote ([_ x opts]))}, :protocol thi.ng.geom.core/IAlign, :name thi.ng.geom.core/align-with, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 14, :method-params ([_ x opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 115, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ x opts])), :doc "Returns updated entity aligned with `x` in the specified manner"}, IAttributeAccess {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 30, :column 14, :line 108, :protocol-info {:methods {attribs [[_ ctx] [_ ctx attr]]}}, :end-line 108, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IAttributeAccess, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 30, :column 1, :line 108, :protocol-info {:methods {attribs [[_ ctx] [_ ctx attr]]}}, :info nil, :end-line 108, :impls #{}, :doc nil, :jsdoc ("@interface")}, clip-with {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 160, :column 4, :end-line 160, :end-column 13, :protocol thi.ng.geom.core/IClip, :doc nil, :arglists (quote ([_ s]))}, :protocol thi.ng.geom.core/IClip, :name thi.ng.geom.core/clip-with, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 13, :method-params ([_ s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 159, :end-line 160, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ s])), :doc nil}, vertex-normal {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 106, :column 4, :end-line 106, :end-column 17, :protocol thi.ng.geom.core/INormalAccess, :doc nil, :arglists (quote ([_ v]))}, :protocol thi.ng.geom.core/INormalAccess, :name thi.ng.geom.core/vertex-normal, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 17, :method-params ([_ v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 106, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ v])), :doc nil}, IGeomContainer {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 28, :column 14, :line 172, :protocol-info {:methods {into [[_ m]]}}, :end-line 172, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IGeomContainer, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 28, :column 1, :line 172, :protocol-info {:methods {into [[_ m]]}}, :info nil, :end-line 172, :impls #{}, :doc nil, :jsdoc ("@interface")}, point-at {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/ISample, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ t] [_ u v]), :arglists ([_ t] [_ u v]), :arglists-meta (nil nil)}, :column 4, :line 199, :end-line 199, :arglists (quote ([_ t] [_ u v])), :doc nil}, :protocol thi.ng.geom.core/ISample, :name thi.ng.geom.core/point-at, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ t] [_ u v]), :arglists ([_ t] [_ u v]), :arglists-meta (nil nil)}, :method-params ([_ t] [_ u v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 199, :max-fixed-arity 3, :fn-var true, :arglists ([_ t] [_ u v]), :doc nil}, IHeading {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 22, :column 14, :line 10, :protocol-info {:methods {heading [[_]], heading-xy [[_]], heading-xz [[_]], heading-yz [[_]], angle-between [[_ a]], slope-xy [[_]], slope-xz [[_]], slope-yz [[_]]}}, :end-line 10, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IHeading, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 22, :column 1, :line 10, :protocol-info {:methods {heading [[_]], heading-xy [[_]], heading-xz [[_]], heading-yz [[_]], angle-between [[_ a]], slope-xy [[_]], slope-xz [[_]], slope-yz [[_]]}}, :info nil, :end-line 10, :impls #{}, :doc nil, :jsdoc ("@interface")}, scale {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 43, :column 4, :end-line 43, :end-column 9, :protocol thi.ng.geom.core/IScale, :doc nil, :arglists (quote ([_ s]))}, :protocol thi.ng.geom.core/IScale, :name thi.ng.geom.core/scale, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 9, :method-params ([_ s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ s])), :doc nil}, IProximity {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :column 14, :line 195, :protocol-info {:methods {closest-point [[_ p]]}}, :end-line 195, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IProximity, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :column 1, :line 195, :protocol-info {:methods {closest-point [[_ p]]}}, :info nil, :end-line 195, :impls #{}, :doc nil, :jsdoc ("@interface")}, IVectorTransform {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 30, :column 14, :line 55, :protocol-info {:methods {transform-vector [[_ v]]}}, :end-line 55, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IVectorTransform, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 30, :column 1, :line 55, :protocol-info {:methods {transform-vector [[_ v]]}}, :info nil, :end-line 55, :impls #{}, :doc nil, :jsdoc ("@interface")}, contains-entity? {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 123, :column 4, :end-line 123, :end-column 20, :protocol thi.ng.geom.core/IBoundary, :doc nil, :arglists (quote ([_ s]))}, :protocol thi.ng.geom.core/IBoundary, :name thi.ng.geom.core/contains-entity?, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :method-params ([_ s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 123, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ s])), :doc nil}, IShear {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 14, :line 46, :protocol-info {:methods {shear [[_ s]]}}, :end-line 46, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IShear, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 1, :line 46, :protocol-info {:methods {shear [[_ s]]}}, :info nil, :end-line 46, :impls #{}, :doc nil, :jsdoc ("@interface")}, heading-xz {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 13, :column 4, :end-line 13, :end-column 14, :protocol thi.ng.geom.core/IHeading, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IHeading, :name thi.ng.geom.core/heading-xz, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 14, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, raw {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 112, :column 4, :end-line 112, :end-column 7, :protocol thi.ng.geom.core/IRawAccess, :doc nil, :arglists (quote ([_ ctx]))}, :protocol thi.ng.geom.core/IRawAccess, :name thi.ng.geom.core/raw, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 7, :method-params ([_ ctx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 112, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ ctx])), :doc nil}, dist {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 7, :column 4, :end-line 7, :end-column 8, :protocol thi.ng.geom.core/IDistance, :doc nil, :arglists (quote ([_ a]))}, :protocol thi.ng.geom.core/IDistance, :name thi.ng.geom.core/dist, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 8, :method-params ([_ a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ a])), :doc nil}, rotate-around-axis {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 37, :column 4, :end-line 37, :end-column 22, :protocol thi.ng.geom.core/IRotate3D, :doc nil, :arglists (quote ([_ a t]))}, :protocol thi.ng.geom.core/IRotate3D, :name thi.ng.geom.core/rotate-around-axis, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 22, :method-params ([_ a t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 37, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ a t])), :doc nil}, IRawAccess {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :column 14, :line 111, :protocol-info {:methods {raw [[_ ctx]]}}, :end-line 111, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IRawAccess, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :column 1, :line 111, :protocol-info {:methods {raw [[_ ctx]]}}, :info nil, :end-line 111, :impls #{}, :doc nil, :jsdoc ("@interface")}, IDistance {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 23, :column 14, :line 6, :protocol-info {:methods {dist [[_ a]], dist-squared [[_ a]]}}, :end-line 6, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IDistance, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 23, :column 1, :line 6, :protocol-info {:methods {dist [[_ a]], dist-squared [[_ a]]}}, :info nil, :end-line 6, :impls #{}, :doc nil, :jsdoc ("@interface")}, unmap-point {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 189, :column 4, :end-line 189, :end-column 15, :protocol thi.ng.geom.core/IPointMap, :doc nil, :arglists (quote ([_ p]))}, :protocol thi.ng.geom.core/IPointMap, :name thi.ng.geom.core/unmap-point, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 15, :method-params ([_ p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 189, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ p])), :doc nil}, IReflect {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 22, :column 14, :line 39, :protocol-info {:methods {reflect [[_ r]]}}, :end-line 39, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IReflect, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 22, :column 1, :line 39, :protocol-info {:methods {reflect [[_ r]]}}, :info nil, :end-line 39, :impls #{}, :doc nil, :jsdoc ("@interface")}, extrude-shell {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 167, :column 4, :end-line 167, :end-column 17, :protocol thi.ng.geom.core/IExtrude, :doc nil, :arglists (quote ([_ opts]))}, :protocol thi.ng.geom.core/IExtrude, :name thi.ng.geom.core/extrude-shell, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 17, :method-params ([_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 167, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ opts])), :doc nil}, slice-with {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/ISlice, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_ e] [_ e classifier] [_ e classifier parts]), :arglists ([_ e] [_ e classifier] [_ e classifier parts]), :arglists-meta (nil nil nil)}, :column 4, :line 206, :end-line 206, :arglists (quote ([_ e] [_ e classifier] [_ e classifier parts])), :doc nil}, :protocol thi.ng.geom.core/ISlice, :name thi.ng.geom.core/slice-with, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_ e] [_ e classifier] [_ e classifier parts]), :arglists ([_ e] [_ e classifier] [_ e classifier parts]), :arglists-meta (nil nil nil)}, :method-params ([_ e] [_ e classifier] [_ e classifier parts]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 205, :end-line 206, :max-fixed-arity 4, :fn-var true, :arglists ([_ e] [_ e classifier] [_ e classifier parts]), :doc nil}, IClear {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 14, :line 155, :protocol-info {:methods {clear* [[_]], clear! [[_]]}}, :end-line 155, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IClear, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 1, :line 155, :protocol-info {:methods {clear* [[_]], clear! [[_]]}}, :info nil, :end-line 155, :impls #{}, :doc nil, :jsdoc ("@interface")}, circumference {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 149, :column 4, :end-line 149, :end-column 17, :protocol thi.ng.geom.core/ICircumference, :doc "Returns an entity's circumference", :arglists (quote ([_]))}, :protocol thi.ng.geom.core/ICircumference, :name thi.ng.geom.core/circumference, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 17, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns an entity's circumference"}, reduce-vector {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/IVectorReduce, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_ f xs] [_ f f2 xs]), :arglists ([_ f xs] [_ f f2 xs]), :arglists-meta (nil nil)}, :column 4, :line 28, :end-line 28, :arglists (quote ([_ f xs] [_ f f2 xs])), :doc nil}, :protocol thi.ng.geom.core/IVectorReduce, :name thi.ng.geom.core/reduce-vector, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_ f xs] [_ f f2 xs]), :arglists ([_ f xs] [_ f f2 xs]), :arglists-meta (nil nil)}, :method-params ([_ f xs] [_ f f2 xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 28, :max-fixed-arity 4, :fn-var true, :arglists ([_ f xs] [_ f f2 xs]), :doc nil}, IEdgeAccess {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 25, :column 14, :line 80, :protocol-info {:methods {edges [[_] [_ opts]]}}, :end-line 80, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IEdgeAccess, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 25, :column 1, :line 80, :protocol-info {:methods {edges [[_] [_ opts]]}}, :info nil, :end-line 80, :impls #{}, :doc nil, :jsdoc ("@interface")}, ICenter {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 21, :column 14, :line 142, :protocol-info {:methods {center [[_] [_ p]], centroid [[_]]}}, :end-line 142, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/ICenter, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 21, :column 1, :line 142, :protocol-info {:methods {center [[_] [_ p]], centroid [[_]]}}, :info nil, :end-line 142, :impls #{}, :doc nil, :jsdoc ("@interface")}, as-polar {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 24, :column 4, :end-line 24, :end-column 12, :protocol thi.ng.geom.core/IPolar, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IPolar, :name thi.ng.geom.core/as-polar, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, IAlign {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 14, :line 114, :protocol-info {:methods {align-with [[_ x opts]]}}, :end-line 114, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IAlign, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 1, :line 114, :protocol-info {:methods {align-with [[_ x opts]]}}, :info nil, :end-line 114, :impls #{}, :doc nil, :jsdoc ("@interface")}, IFlip {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 19, :column 14, :line 169, :protocol-info {:methods {flip [[_]]}}, :end-line 169, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IFlip, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 19, :column 1, :line 169, :protocol-info {:methods {flip [[_]]}}, :info nil, :end-line 169, :impls #{}, :doc nil, :jsdoc ("@interface")}, width {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 139, :column 4, :end-line 139, :end-column 9, :protocol thi.ng.geom.core/IBounds, :doc "Returns entity's extent along X axis", :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IBounds, :name thi.ng.geom.core/width, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 9, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 139, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns entity's extent along X axis"}, closest-point {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 196, :column 4, :end-line 196, :end-column 17, :protocol thi.ng.geom.core/IProximity, :doc nil, :arglists (quote ([_ p]))}, :protocol thi.ng.geom.core/IProximity, :name thi.ng.geom.core/closest-point, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 17, :method-params ([_ p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 196, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ p])), :doc nil}, vertex-valence {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 64, :column 4, :end-line 64, :end-column 18, :protocol thi.ng.geom.core/IGraph, :doc nil, :arglists (quote ([_ v]))}, :protocol thi.ng.geom.core/IGraph, :name thi.ng.geom.core/vertex-valence, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 18, :method-params ([_ v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ v])), :doc nil}, bounding-circle {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 127, :column 4, :end-line 127, :end-column 19, :protocol thi.ng.geom.core/IBoundingCircle, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IBoundingCircle, :name thi.ng.geom.core/bounding-circle, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 19, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 127, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, IExtrude {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 22, :column 14, :line 165, :protocol-info {:methods {extrude [[_ opts]], extrude-shell [[_ opts]]}}, :end-line 165, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IExtrude, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 22, :column 1, :line 165, :protocol-info {:methods {extrude [[_ opts]], extrude-shell [[_ opts]]}}, :info nil, :end-line 165, :impls #{}, :doc nil, :jsdoc ("@interface")}, sample-uniform {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 202, :column 4, :end-line 202, :end-column 18, :protocol thi.ng.geom.core/ISample, :doc nil, :arglists (quote ([_ dist include-last?]))}, :protocol thi.ng.geom.core/ISample, :name thi.ng.geom.core/sample-uniform, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 18, :method-params ([_ dist include-last?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 202, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ dist include-last?])), :doc nil}, random-point {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 200, :column 4, :end-line 200, :end-column 16, :protocol thi.ng.geom.core/ISample, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/ISample, :name thi.ng.geom.core/random-point, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 16, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 200, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, IVolume {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 21, :column 14, :line 216, :protocol-info {:methods {volume [[_]], signed-volume [[_]]}}, :end-line 216, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IVolume, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 21, :column 1, :line 216, :protocol-info {:methods {volume [[_]], signed-volume [[_]]}}, :info nil, :end-line 216, :impls #{}, :doc nil, :jsdoc ("@interface")}, set-prop! {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 228, :column 4, :end-line 228, :end-column 13, :protocol thi.ng.geom.core/IMutableProps, :doc nil, :arglists (quote ([_ k v]))}, :protocol thi.ng.geom.core/IMutableProps, :name thi.ng.geom.core/set-prop!, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 13, :method-params ([_ k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 228, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ k v])), :doc nil}, ICircumference {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 28, :column 14, :line 148, :protocol-info {:methods {circumference [[_]]}}, :end-line 148, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/ICircumference, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 28, :column 1, :line 148, :protocol-info {:methods {circumference [[_]]}}, :info nil, :end-line 148, :impls #{}, :doc nil, :jsdoc ("@interface")}, normal {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/INormal, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ a]), :arglists ([_] [_ a]), :arglists-meta (nil nil)}, :column 4, :line 21, :end-line 21, :arglists (quote ([_] [_ a])), :doc nil}, :protocol thi.ng.geom.core/INormal, :name thi.ng.geom.core/normal, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ a]), :arglists ([_] [_ a]), :arglists-meta (nil nil)}, :method-params ([_] [_ a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ a]), :doc nil}, clear! {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 157, :column 4, :end-line 157, :end-column 10, :protocol thi.ng.geom.core/IClear, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IClear, :name thi.ng.geom.core/clear!, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 157, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, IFaceAccess {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 25, :column 14, :line 83, :protocol-info {:methods {add-face [[_ face]], faces [[_] [_ opts]], remove-face [[_ fverts]], vertex-faces [[_ v]]}}, :end-line 83, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IFaceAccess, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 25, :column 1, :line 83, :protocol-info {:methods {add-face [[_ face]], faces [[_] [_ opts]], remove-face [[_ fverts]], vertex-faces [[_ v]]}}, :info nil, :end-line 83, :impls #{}, :doc nil, :jsdoc ("@interface")}, vertex-faces {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 97, :column 4, :end-line 97, :end-column 16, :protocol thi.ng.geom.core/IFaceAccess, :doc "Returns seq of faces the given vertex is part of.", :arglists (quote ([_ v]))}, :protocol thi.ng.geom.core/IFaceAccess, :name thi.ng.geom.core/vertex-faces, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 16, :method-params ([_ v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 97, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ v])), :doc "Returns seq of faces the given vertex is part of."}, IVectorReduce {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 27, :column 14, :line 27, :protocol-info {:methods {reduce-vector [[_ f xs] [_ f f2 xs]]}}, :end-line 27, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IVectorReduce, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 27, :column 1, :line 27, :protocol-info {:methods {reduce-vector [[_ f xs] [_ f f2 xs]]}}, :info nil, :end-line 27, :impls #{}, :doc nil, :jsdoc ("@interface")}, IMeshConvert {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 26, :column 14, :line 183, :protocol-info {:methods {as-mesh [[_] [_ opts]]}}, :end-line 183, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IMeshConvert, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 26, :column 1, :line 183, :protocol-info {:methods {as-mesh [[_] [_ opts]]}}, :info nil, :end-line 183, :impls #{}, :doc nil, :jsdoc ("@interface")}, signed-volume {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 218, :column 4, :end-line 218, :end-column 17, :protocol thi.ng.geom.core/IVolume, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IVolume, :name thi.ng.geom.core/signed-volume, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 17, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, cyclic? {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 63, :column 4, :end-line 63, :end-column 11, :protocol thi.ng.geom.core/IGraph, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IGraph, :name thi.ng.geom.core/cyclic?, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, volume {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 217, :column 4, :end-line 217, :end-column 10, :protocol thi.ng.geom.core/IVolume, :doc "Returns an entity's inner volume.", :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IVolume, :name thi.ng.geom.core/volume, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 217, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns an entity's inner volume."}, INormal {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 21, :column 14, :line 20, :protocol-info {:methods {normal [[_] [_ a]]}}, :end-line 20, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/INormal, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 21, :column 1, :line 20, :protocol-info {:methods {normal [[_] [_ a]]}}, :info nil, :end-line 20, :impls #{}, :doc nil, :jsdoc ("@interface")}, bounds {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 133, :column 4, :end-line 133, :end-column 10, :protocol thi.ng.geom.core/IBounds, :doc "Returns bounding rect for 2d entities or box for 3d", :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IBounds, :name thi.ng.geom.core/bounds, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns bounding rect for 2d entities or box for 3d"}, center {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/ICenter, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ p]), :arglists ([_] [_ p]), :arglists-meta (nil nil)}, :column 4, :line 143, :end-line 143, :arglists (quote ([_] [_ p])), :doc "Returns updated entity centered around world origin or given point"}, :protocol thi.ng.geom.core/ICenter, :name thi.ng.geom.core/center, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ p]), :arglists ([_] [_ p]), :arglists-meta (nil nil)}, :method-params ([_] [_ p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 143, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ p]), :doc "Returns updated entity centered around world origin or given point"}, IGraphConvert {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 27, :column 14, :line 74, :protocol-info {:methods {as-graph [[_] [_ opts]]}}, :end-line 74, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IGraphConvert, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 27, :column 1, :line 74, :protocol-info {:methods {as-graph [[_] [_ opts]]}}, :info nil, :end-line 74, :impls #{}, :doc nil, :jsdoc ("@interface")}, angle-between {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 15, :column 4, :end-line 15, :end-column 17, :protocol thi.ng.geom.core/IHeading, :doc nil, :arglists (quote ([_ a]))}, :protocol thi.ng.geom.core/IHeading, :name thi.ng.geom.core/angle-between, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 17, :method-params ([_ a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ a])), :doc nil}, add-face {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 84, :column 4, :end-line 84, :end-column 12, :protocol thi.ng.geom.core/IFaceAccess, :doc "Adds a new face to a mesh. The face arg is a 2-element vector\n    of [vertices attributes], where attributes is a map of arbitrary\n    vertex attributes. E.g. (g/add-face m [verts {:uv [[0 0] [1 0] [1 1]]}])", :arglists (quote ([_ face]))}, :protocol thi.ng.geom.core/IFaceAccess, :name thi.ng.geom.core/add-face, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :method-params ([_ face]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 84, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ face])), :doc "Adds a new face to a mesh. The face arg is a 2-element vector\n    of [vertices attributes], where attributes is a map of arbitrary\n    vertex attributes. E.g. (g/add-face m [verts {:uv [[0 0] [1 0] [1 1]]}])"}, IMutableProps {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 27, :column 14, :line 226, :protocol-info {:methods {get-prop [[_ k]], set-prop! [[_ k v]], update-prop! [[_ k f]]}}, :end-line 226, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IMutableProps, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 27, :column 1, :line 226, :protocol-info {:methods {get-prop [[_ k]], set-prop! [[_ k v]], update-prop! [[_ k f]]}}, :info nil, :end-line 226, :impls #{}, :doc nil, :jsdoc ("@interface")}, get-point {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 223, :column 4, :end-line 223, :end-column 13, :protocol thi.ng.geom.core/ISpatialTree, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/ISpatialTree, :name thi.ng.geom.core/get-point, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 13, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 223, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, face-normals {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 103, :column 4, :end-line 103, :end-column 16, :protocol thi.ng.geom.core/INormalAccess, :doc nil, :arglists (quote ([_ force?]))}, :protocol thi.ng.geom.core/INormalAccess, :name thi.ng.geom.core/face-normals, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 16, :method-params ([_ force?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 103, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ force?])), :doc nil}, as-polygon {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/IPolygonConvert, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ res]), :arglists ([_] [_ res]), :arglists-meta (nil nil)}, :column 4, :line 192, :end-line 192, :arglists (quote ([_] [_ res])), :doc "Transforms current entity into a Polygon2 instance"}, :protocol thi.ng.geom.core/IPolygonConvert, :name thi.ng.geom.core/as-polygon, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ res]), :arglists ([_] [_ res]), :arglists-meta (nil nil)}, :method-params ([_] [_ res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 192, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ res]), :doc "Transforms current entity into a Polygon2 instance"}, IIntersect {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :column 14, :line 178, :protocol-info {:methods {intersect-line [[_ l] [_ p q]], intersect-ray [[_ r] [_ p dir]], intersect-shape [[_ s]]}}, :end-line 178, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IIntersect, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :column 1, :line 178, :protocol-info {:methods {intersect-line [[_ l] [_ p q]], intersect-ray [[_ r] [_ p dir]], intersect-shape [[_ s]]}}, :info nil, :end-line 178, :impls #{}, :doc nil, :jsdoc ("@interface")}, intersect-line {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/IIntersect, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ l] [_ p q]), :arglists ([_ l] [_ p q]), :arglists-meta (nil nil)}, :column 4, :line 179, :end-line 179, :arglists (quote ([_ l] [_ p q])), :doc nil}, :protocol thi.ng.geom.core/IIntersect, :name thi.ng.geom.core/intersect-line, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ l] [_ p q]), :arglists ([_ l] [_ p q]), :arglists-meta (nil nil)}, :method-params ([_ l] [_ p q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 179, :max-fixed-arity 3, :fn-var true, :arglists ([_ l] [_ p q]), :doc nil}, delete-point {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 222, :column 4, :end-line 222, :end-column 16, :protocol thi.ng.geom.core/ISpatialTree, :doc nil, :arglists (quote ([_ p]))}, :protocol thi.ng.geom.core/ISpatialTree, :name thi.ng.geom.core/delete-point, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 16, :method-params ([_ p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 222, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ p])), :doc nil}, subdivide-edge {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 210, :column 4, :end-line 210, :end-column 18, :protocol thi.ng.geom.core/ISubdivide, :doc nil, :arglists (quote ([_ a b splits]))}, :protocol thi.ng.geom.core/ISubdivide, :name thi.ng.geom.core/subdivide-edge, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 18, :method-params ([_ a b splits]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 210, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_ a b splits])), :doc nil}, centroid {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 145, :column 4, :end-line 145, :end-column 12, :protocol thi.ng.geom.core/ICenter, :doc "Returns centroid of entity", :arglists (quote ([_]))}, :protocol thi.ng.geom.core/ICenter, :name thi.ng.geom.core/centroid, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns centroid of entity"}, ITranslate {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :column 14, :line 52, :protocol-info {:methods {translate [[_ t]]}}, :end-line 52, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/ITranslate, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 24, :column 1, :line 52, :protocol-info {:methods {translate [[_ t]]}}, :info nil, :end-line 52, :impls #{}, :doc nil, :jsdoc ("@interface")}, attribs {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/IAttributeAccess, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ ctx] [_ ctx attr]), :arglists ([_ ctx] [_ ctx attr]), :arglists-meta (nil nil)}, :column 4, :line 109, :end-line 109, :arglists (quote ([_ ctx] [_ ctx attr])), :doc nil}, :protocol thi.ng.geom.core/IAttributeAccess, :name thi.ng.geom.core/attribs, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ ctx] [_ ctx attr]), :arglists ([_ ctx] [_ ctx attr]), :arglists-meta (nil nil)}, :method-params ([_ ctx] [_ ctx attr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 109, :max-fixed-arity 3, :fn-var true, :arglists ([_ ctx] [_ ctx attr]), :doc nil}, clear* {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 156, :column 4, :end-line 156, :end-column 10, :protocol thi.ng.geom.core/IClear, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IClear, :name thi.ng.geom.core/clear*, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 156, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, IClip {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 19, :column 14, :line 159, :protocol-info {:methods {clip-with [[_ s]]}}, :end-line 159, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IClip, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 19, :column 1, :line 159, :protocol-info {:methods {clip-with [[_ s]]}}, :info nil, :end-line 159, :impls #{}, :doc nil, :jsdoc ("@interface")}, tessellate {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/ITessellate, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :column 4, :line 214, :end-line 214, :arglists (quote ([_] [_ opts])), :doc nil}, :protocol thi.ng.geom.core/ITessellate, :name thi.ng.geom.core/tessellate, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :method-params ([_] [_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 214, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ opts]), :doc nil}, *resolution* {:name thi.ng.geom.core/*resolution*, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 4, :column 1, :end-line 4, :end-column 28, :dynamic true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 4, :column 16, :end-line 4, :end-column 28, :dynamic true}}, IMatrixConvert {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 28, :column 14, :line 58, :protocol-info {:methods {as-matrix [[_] [_ opts]]}}, :end-line 58, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IMatrixConvert, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 28, :column 1, :line 58, :protocol-info {:methods {as-matrix [[_] [_ opts]]}}, :info nil, :end-line 58, :impls #{}, :doc nil, :jsdoc ("@interface")}, dist-squared {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 8, :column 4, :end-line 8, :end-column 16, :protocol thi.ng.geom.core/IDistance, :doc nil, :arglists (quote ([_ a]))}, :protocol thi.ng.geom.core/IDistance, :name thi.ng.geom.core/dist-squared, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 16, :method-params ([_ a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ a])), :doc nil}, bounding-sphere {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 130, :column 4, :end-line 130, :end-column 19, :protocol thi.ng.geom.core/IBoundingSphere, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IBoundingSphere, :name thi.ng.geom.core/bounding-sphere, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 19, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, subdivide {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/ISubdivide, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :column 4, :line 209, :end-line 209, :arglists (quote ([_] [_ opts])), :doc nil}, :protocol thi.ng.geom.core/ISubdivide, :name thi.ng.geom.core/subdivide, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :method-params ([_] [_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 209, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ opts]), :doc nil}, IBoundingCircle {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 29, :column 14, :line 126, :protocol-info {:methods {bounding-circle [[_]]}}, :end-line 126, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IBoundingCircle, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 29, :column 1, :line 126, :protocol-info {:methods {bounding-circle [[_]]}}, :info nil, :end-line 126, :impls #{}, :doc nil, :jsdoc ("@interface")}, in-vertices {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 71, :column 4, :end-line 71, :end-column 15, :protocol thi.ng.geom.core/IDirectedGraph, :doc nil, :arglists (quote ([_ v]))}, :protocol thi.ng.geom.core/IDirectedGraph, :name thi.ng.geom.core/in-vertices, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 15, :method-params ([_ v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ v])), :doc nil}, sample-with-resolution {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 203, :column 4, :end-line 203, :end-column 26, :protocol thi.ng.geom.core/ISample, :doc nil, :arglists (quote ([_ res]))}, :protocol thi.ng.geom.core/ISample, :name thi.ng.geom.core/sample-with-resolution, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 26, :method-params ([_ res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 203, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ res])), :doc nil}, intersect-ray {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/IIntersect, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ r] [_ p dir]), :arglists ([_ r] [_ p dir]), :arglists-meta (nil nil)}, :column 4, :line 180, :end-line 180, :arglists (quote ([_ r] [_ p dir])), :doc nil}, :protocol thi.ng.geom.core/IIntersect, :name thi.ng.geom.core/intersect-ray, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ r] [_ p dir]), :arglists ([_ r] [_ p dir]), :arglists-meta (nil nil)}, :method-params ([_ r] [_ p dir]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 180, :max-fixed-arity 3, :fn-var true, :arglists ([_ r] [_ p dir]), :doc nil}, IClassify {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 23, :column 14, :line 152, :protocol-info {:methods {classify-point [[_ p]]}}, :end-line 152, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/IClassify, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 23, :column 1, :line 152, :protocol-info {:methods {classify-point [[_ p]]}}, :info nil, :end-line 152, :impls #{}, :doc nil, :jsdoc ("@interface")}, rotate {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 31, :column 4, :end-line 31, :end-column 10, :protocol thi.ng.geom.core/IRotate, :doc nil, :arglists (quote ([_ t]))}, :protocol thi.ng.geom.core/IRotate, :name thi.ng.geom.core/rotate, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 10, :method-params ([_ t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ t])), :doc nil}, translate {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 53, :column 4, :end-line 53, :end-column 13, :protocol thi.ng.geom.core/ITranslate, :doc nil, :arglists (quote ([_ t]))}, :protocol thi.ng.geom.core/ITranslate, :name thi.ng.geom.core/translate, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 13, :method-params ([_ t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ t])), :doc nil}, heading-yz {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 14, :column 4, :end-line 14, :end-column 14, :protocol thi.ng.geom.core/IHeading, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IHeading, :name thi.ng.geom.core/heading-yz, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 14, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, depth {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 135, :column 4, :end-line 135, :end-column 9, :protocol thi.ng.geom.core/IBounds, :doc "Returns entity's extent along Z (zero for 2d)", :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IBounds, :name thi.ng.geom.core/depth, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 9, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns entity's extent along Z (zero for 2d)"}, area {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 119, :column 4, :end-line 119, :end-column 8, :protocol thi.ng.geom.core/IArea, :doc "Returns an entity's total surface area", :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IArea, :name thi.ng.geom.core/area, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 8, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns an entity's total surface area"}, slope-yz {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 18, :column 4, :end-line 18, :end-column 12, :protocol thi.ng.geom.core/IHeading, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/IHeading, :name thi.ng.geom.core/slope-yz, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, remove-face {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 94, :column 4, :end-line 94, :end-column 15, :protocol thi.ng.geom.core/IFaceAccess, :doc "Takes a vector of vertices defining a face in the mesh and\n    returns updated mesh without that face.", :arglists (quote ([_ fverts]))}, :protocol thi.ng.geom.core/IFaceAccess, :name thi.ng.geom.core/remove-face, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 15, :method-params ([_ fverts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 94, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ fverts])), :doc "Takes a vector of vertices defining a face in the mesh and\n    returns updated mesh without that face."}, faces {:protocol-inline nil, :meta {:protocol thi.ng.geom.core/IFaceAccess, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 9, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :column 4, :line 88, :end-line 88, :arglists (quote ([_] [_ opts])), :doc "Returns a mesh's face collection. If called without opts arg,\n    returns faces directly as used internally by the mesh. If opts is\n    truthy, returns each face as vector with a vector of face vertices\n    as its first element. If the mesh supports vertex attributes,\n    they're returned as the 2nd element in each face vector."}, :protocol thi.ng.geom.core/IFaceAccess, :name thi.ng.geom.core/faces, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 9, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ opts]), :arglists ([_] [_ opts]), :arglists-meta (nil nil)}, :method-params ([_] [_ opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ opts]), :doc "Returns a mesh's face collection. If called without opts arg,\n    returns faces directly as used internally by the mesh. If opts is\n    truthy, returns each face as vector with a vector of face vertices\n    as its first element. If the mesh supports vertex attributes,\n    they're returned as the 2nd element in each face vector."}, ISlice {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 14, :line 205, :protocol-info {:methods {slice-with [[_ e] [_ e classifier] [_ e classifier parts]]}}, :end-line 205, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.geom.core/ISlice, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 20, :column 1, :line 205, :protocol-info {:methods {slice-with [[_ e] [_ e classifier] [_ e classifier parts]]}}, :info nil, :end-line 205, :impls #{}, :doc nil, :jsdoc ("@interface")}, compute-vertex-normals {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/core.cljc", :line 102, :column 4, :end-line 102, :end-column 26, :protocol thi.ng.geom.core/INormalAccess, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.geom.core/INormalAccess, :name thi.ng.geom.core/compute-vertex-normals, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/core.cljc", :end-column 26, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}}, :require-macros nil, :doc nil}