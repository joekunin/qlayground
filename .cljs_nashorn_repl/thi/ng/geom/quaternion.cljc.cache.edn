{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name thi.ng.geom.quaternion, :imports nil, :requires {mat thi.ng.geom.matrix, thi.ng.geom.matrix thi.ng.geom.matrix, thi.ng.geom.core thi.ng.geom.core, v thi.ng.geom.vector, thi.ng.xerror.core thi.ng.xerror.core, thi.ng.math.core thi.ng.math.core, m thi.ng.math.core, err thi.ng.xerror.core, thi.ng.geom.vector thi.ng.geom.vector, g thi.ng.geom.core}, :uses {V3Z thi.ng.geom.vector, V3Y thi.ng.geom.vector, TWO_PI thi.ng.math.core, vec3 thi.ng.geom.vector, PI thi.ng.math.core, vec2 thi.ng.geom.vector, *eps* thi.ng.math.core, V3X thi.ng.geom.vector}, :defs {swizzle4 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :line 583, :column 7, :end-line 583, :end-column 15, :arglists (quote ([_ k default]))}, :name thi.ng.geom.quaternion/swizzle4, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :end-column 15, :method-params ([_ k default]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 583, :end-line 583, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ k default]))}, quat-from-euler {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :line 510, :column 7, :end-line 510, :end-column 22, :arglists (quote ([order alpha beta gamma]))}, :name thi.ng.geom.quaternion/quat-from-euler, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :end-column 22, :method-params ([order alpha beta gamma]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 510, :end-line 510, :max-fixed-arity 4, :fn-var true, :arglists (quote ([order alpha beta gamma]))}, quat {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :line 490, :column 7, :end-line 490, :end-column 11, :arglists (quote ([] [[x y z] w] [[x y z w]] [x y z w])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([] [[x y z] w] [[x y z w]] [x y z w]), :arglists ([] [[x y z] w] [[x y z w]] [x y z w]), :arglists-meta (nil nil nil nil)}}, :name thi.ng.geom.quaternion/quat, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([] [[x y z] w] [[x y z w]] [x y z w]), :arglists ([] [[x y z] w] [[x y z w]] [x y z w]), :arglists-meta (nil nil nil nil)}, :method-params ([] [[x y z] w] [[x y z w]] [x y z w]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 490, :end-line 490, :max-fixed-arity 4, :fn-var true, :arglists ([] [[x y z] w] [[x y z w]] [x y z w])}, alignment-quat {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :line 566, :column 7, :end-line 566, :end-column 21, :arglists (quote ([from to]))}, :name thi.ng.geom.quaternion/alignment-quat, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :end-column 21, :method-params ([from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 566, :end-line 566, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from to]))}, lookup4 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :line 574, :column 7, :end-line 574, :end-column 14, :arglists (quote ([_ k nf]))}, :name thi.ng.geom.quaternion/lookup4, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :end-column 14, :method-params ([_ k nf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 574, :end-line 574, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ k nf]))}, quat-from-axis-angle {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :line 496, :column 7, :end-line 496, :end-column 27, :arglists (quote ([axis theta]))}, :name thi.ng.geom.quaternion/quat-from-axis-angle, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :end-column 27, :method-params ([axis theta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 496, :end-line 496, :max-fixed-arity 2, :fn-var true, :arglists (quote ([axis theta]))}, swizzle4-assoc {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :line 625, :column 7, :end-line 625, :end-column 21, :arglists (quote ([_ k v]))}, :name thi.ng.geom.quaternion/swizzle4-assoc, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :end-column 21, :method-params ([_ k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 625, :end-line 625, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ k v]))}, Q {:name thi.ng.geom.quaternion/Q, :file ".cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :line 488, :column 1, :end-line 488, :end-column 7, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :line 488, :column 6, :end-line 488, :end-column 7}}, ->Quat4 {:protocol-inline nil, :meta {:protocols #{thi.ng.geom.core/IMatrixConvert cljs.core/IIndexed cljs.core/IVector thi.ng.math.core/IDotProduct cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection thi.ng.math.core/IDeltaEquals thi.ng.geom.core/IRotate3D thi.ng.math.core/IInvert cljs.core/ICounted thi.ng.math.core/IConjugate thi.ng.geom.quaternion/Object cljs.core/ISeq thi.ng.math.core/IInterpolate cljs.core/INext thi.ng.math.core/IMathOps cljs.core/ISeqable cljs.core/ICloneable cljs.core/IStack thi.ng.math.core/INormalize thi.ng.math.core/IMagnitude thi.ng.geom.core/IScale thi.ng.geom.core/IVectorTransform cljs.core/IComparable cljs.core/ISequential cljs.core/IAssociative cljs.core/ILookup}, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :end-column 15, :column 10, :factory :positional, :line 18, :end-line 18, :arglists (quote ([x y z w _hasheq])), :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/ICloneable cljs.core/IStack cljs.core/IComparable cljs.core/ISequential cljs.core/IAssociative cljs.core/ILookup}}, :protocols #{thi.ng.geom.core/IMatrixConvert cljs.core/IIndexed cljs.core/IVector thi.ng.math.core/IDotProduct cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection thi.ng.math.core/IDeltaEquals thi.ng.geom.core/IRotate3D thi.ng.math.core/IInvert cljs.core/ICounted thi.ng.math.core/IConjugate thi.ng.geom.quaternion/Object cljs.core/ISeq thi.ng.math.core/IInterpolate cljs.core/INext thi.ng.math.core/IMathOps cljs.core/ISeqable cljs.core/ICloneable cljs.core/IStack thi.ng.math.core/INormalize thi.ng.math.core/IMagnitude thi.ng.geom.core/IScale thi.ng.geom.core/IVectorTransform cljs.core/IComparable cljs.core/ISequential cljs.core/IAssociative cljs.core/ILookup}, :name thi.ng.geom.quaternion/->Quat4, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :end-column 15, :method-params ([x y z w _hasheq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 18, :end-line 18, :max-fixed-arity 5, :fn-var true, :arglists (quote ([x y z w _hasheq])), :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/ICloneable cljs.core/IStack cljs.core/IComparable cljs.core/ISequential cljs.core/IAssociative cljs.core/ILookup}}, as-axis-angle {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :line 501, :column 7, :end-line 501, :end-column 20, :arglists (quote ([q]))}, :name thi.ng.geom.quaternion/as-axis-angle, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :end-column 20, :method-params ([q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 501, :end-line 501, :max-fixed-arity 1, :fn-var true, :arglists (quote ([q]))}, swizzle-assoc* {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :line 614, :column 7, :end-line 614, :end-column 21, :arglists (quote ([_ ctor keymap k v]))}, :name thi.ng.geom.quaternion/swizzle-assoc*, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :end-column 21, :method-params ([_ ctor keymap k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 614, :end-line 614, :max-fixed-arity 5, :fn-var true, :arglists (quote ([_ ctor keymap k v]))}, quat-from-matrix {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :line 528, :column 7, :end-line 528, :end-column 23, :arglists (quote ([m]))}, :name thi.ng.geom.quaternion/quat-from-matrix, :variadic false, :file ".cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :end-column 23, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 528, :end-line 528, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, Quat4 {:num-fields 5, :protocols #{thi.ng.geom.core/IMatrixConvert cljs.core/IIndexed cljs.core/IVector thi.ng.math.core/IDotProduct cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection thi.ng.math.core/IDeltaEquals thi.ng.geom.core/IRotate3D thi.ng.math.core/IInvert cljs.core/ICounted thi.ng.math.core/IConjugate thi.ng.geom.quaternion/Object cljs.core/ISeq thi.ng.math.core/IInterpolate cljs.core/INext thi.ng.math.core/IMathOps cljs.core/ISeqable cljs.core/ICloneable cljs.core/IStack thi.ng.math.core/INormalize thi.ng.math.core/IMagnitude thi.ng.geom.core/IScale thi.ng.geom.core/IVectorTransform cljs.core/IComparable cljs.core/ISequential cljs.core/IAssociative cljs.core/ILookup}, :name thi.ng.geom.quaternion/Quat4, :file ".cljs_nashorn_repl/thi/ng/geom/quaternion.cljc", :end-column 15, :type true, :column 10, :line 18, :record false, :end-line 18, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/ICloneable cljs.core/IStack cljs.core/IComparable cljs.core/ISequential cljs.core/IAssociative cljs.core/ILookup}}}, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros}, :cljs.analyzer/constants {:seen #{:y x y :w _hasheq w :z :translate z :x :mutable}, :order [:translate :y :w :z :x x y z w _hasheq :mutable]}, :doc nil}