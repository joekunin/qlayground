{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name thi.ng.color.core, :imports nil, :requires {thi.ng.xerror.core thi.ng.xerror.core, thi.ng.math.core thi.ng.math.core, m thi.ng.math.core, err thi.ng.xerror.core, thi.ng.dstruct.streams thi.ng.dstruct.streams, streams thi.ng.dstruct.streams, thi.ng.typedarrays.core thi.ng.typedarrays.core, ta thi.ng.typedarrays.core, thi.ng.strf.core thi.ng.strf.core, f thi.ng.strf.core}, :uses {TWO_THIRD thi.ng.math.core, TWO_PI thi.ng.math.core, SIXTH thi.ng.math.core, PI thi.ng.math.core, INV8BIT thi.ng.math.core, THIRD thi.ng.math.core}, :defs {hsl-hue {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 901, :column 8, :end-line 901, :end-column 15, :private true, :arglists (quote ([f1 f2 h]))}, :private true, :name thi.ng.color.core/hsl-hue, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 15, :method-params ([f1 f2 h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 901, :end-line 901, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f1 f2 h]))}, proxied-color-type {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 780, :column 7, :end-line 780, :end-column 25, :arglists (quote ([to-rgba from-rgba]))}, :name thi.ng.color.core/proxied-color-type, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 25, :method-params ([to-rgba from-rgba]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 780, :end-line 780, :max-fixed-arity 2, :fn-var true, :arglists (quote ([to-rgba from-rgba]))}, magenta {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 51, :column 4, :end-line 51, :end-column 11, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/magenta, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, map->Int24 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 211, :column 12, :end-line 211, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__25314]))}, :name thi.ng.color.core/map->Int24, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 17, :method-params ([G__25314]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 211, :end-line 211, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25314]))}, hex->int {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1026, :column 7, :end-line 1026, :end-column 15, :arglists (quote ([hex]))}, :name thi.ng.color.core/hex->int, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 15, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1026, :end-line 1026, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, as-hsla {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 29, :column 4, :end-line 29, :end-column 11, :protocol thi.ng.color.core/IHSLConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IHSLConvert, :name thi.ng.color.core/as-hsla, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, t_thi$ng$color$core25362 {:num-fields 5, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/t_thi$ng$color$core25362, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :type true, :anonymous true, :column 5, :line 783, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, Int32 {:num-fields 1, :protocols #{thi.ng.color.core/IHSLConvert cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert cljs.core/ICounted thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer cljs.core/IWithMeta thi.ng.color.core/IHSVConvert cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.color.core/Int32, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 295, :record true, :end-line 295, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, BLUE {:name thi.ng.color.core/BLUE, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 893, :column 1, :end-line 893, :end-column 10, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 893, :column 6, :end-line 893, :end-column 10}}, parse-css {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1043, :column 8, :end-line 1043, :end-column 17, :private true, :arglists (quote ([col]))}, :private true, :name thi.ng.color.core/parse-css, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 17, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1043, :end-line 1043, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, GREEN {:name thi.ng.color.core/GREEN, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 892, :column 1, :end-line 892, :end-column 11, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 892, :column 6, :end-line 892, :end-column 11}}, analog {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1105, :column 7, :end-line 1105, :end-column 13, :arglists (quote ([col theta sat bright])), :doc "Returns new color of same type with its hue rotated and adjusted\n  saturation & brightness."}, :name thi.ng.color.core/analog, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 13, :method-params ([col theta sat bright]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1105, :end-line 1105, :max-fixed-arity 4, :fn-var true, :arglists (quote ([col theta sat bright])), :doc "Returns new color of same type with its hue rotated and adjusted\n  saturation & brightness."}, map->CSS {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 702, :column 12, :end-line 702, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__25356]))}, :name thi.ng.color.core/map->CSS, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 15, :method-params ([G__25356]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 702, :end-line 702, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25356]))}, ycbcra->rgba {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 959, :column 8, :end-line 959, :end-column 20, :private true, :arglists (quote ([ycbcra] [y cb cr] [y cb cr a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([ycbcra] [y cb cr] [y cb cr a]), :arglists ([ycbcra] [y cb cr] [y cb cr a]), :arglists-meta (nil nil nil)}}, :private true, :name thi.ng.color.core/ycbcra->rgba, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([ycbcra] [y cb cr] [y cb cr a]), :arglists ([ycbcra] [y cb cr] [y cb cr a]), :arglists-meta (nil nil nil)}, :method-params ([ycbcra] [y cb cr] [y cb cr a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 959, :end-line 959, :max-fixed-arity 4, :fn-var true, :arglists ([ycbcra] [y cb cr] [y cb cr a])}, IIntConvert {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 25, :column 14, :line 37, :protocol-info {:methods {as-int24 [[_]], as-int32 [[_]]}}, :end-line 37, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.color.core/IIntConvert, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 25, :column 1, :line 37, :protocol-info {:methods {as-int24 [[_]], as-int32 [[_]]}}, :info nil, :end-line 37, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core25362 thi.ng.color.core/t_thi$ng$color$core25371 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core25368 thi.ng.color.core/t_thi$ng$color$core25365 thi.ng.color.core/HSLA thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, map->RGBA {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 61, :column 12, :end-line 61, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__25300]))}, :name thi.ng.color.core/map->RGBA, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 16, :method-params ([G__25300]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25300]))}, cie1931->rgba {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1014, :column 8, :end-line 1014, :end-column 21, :private true, :arglists (quote ([xyz] [x y z] [x y z a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([xyz] [x y z] [x y z a]), :arglists ([xyz] [x y z] [x y z a]), :arglists-meta (nil nil nil)}}, :private true, :name thi.ng.color.core/cie1931->rgba, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([xyz] [x y z] [x y z a]), :arglists ([xyz] [x y z] [x y z a]), :arglists-meta (nil nil nil)}, :method-params ([xyz] [x y z] [x y z a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 1014, :end-line 1014, :max-fixed-arity 4, :fn-var true, :arglists ([xyz] [x y z] [x y z a])}, hcya {:name thi.ng.color.core/hcya, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1063, :column 1, :end-line 1063, :end-column 10, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1063, :column 6, :end-line 1063, :end-column 10}}, adjust-brightness {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 58, :column 4, :end-line 58, :end-column 21, :protocol thi.ng.color.core/IColorOps, :doc nil, :arglists (quote ([_ offset]))}, :protocol thi.ng.color.core/IColorOps, :name thi.ng.color.core/adjust-brightness, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 21, :method-params ([_ offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ offset])), :doc nil}, ->t_thi$ng$color$core25371 {:protocol-inline nil, :meta {:anonymous true, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([to-rgba from-rgba ctor col meta25372])), :file nil}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->t_thi$ng$color$core25371, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :method-params ([to-rgba from-rgba ctor col meta25372]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 783, :max-fixed-arity 5, :fn-var true, :arglists (quote ([to-rgba from-rgba ctor col meta25372])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, as-rgba {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 23, :column 4, :end-line 23, :end-column 11, :protocol thi.ng.color.core/IRGBConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IRGBConvert, :name thi.ng.color.core/as-rgba, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, dist-hsv {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1135, :column 7, :end-line 1135, :end-column 15, :arglists (quote ([a b])), :doc "Returns HSV distance of any two colors (in cartesian space)."}, :name thi.ng.color.core/dist-hsv, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 15, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1135, :end-line 1135, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b])), :doc "Returns HSV distance of any two colors (in cartesian space)."}, ->Int32 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 295, :column 12, :end-line 295, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([col]))}, :name thi.ng.color.core/->Int32, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 17, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 295, :end-line 295, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, ycbcra {:name thi.ng.color.core/ycbcra, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1067, :column 1, :end-line 1067, :end-column 12, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1067, :column 6, :end-line 1067, :end-column 12}}, rotate-hue {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 56, :column 4, :end-line 56, :end-column 14, :protocol thi.ng.color.core/IColorOps, :doc nil, :arglists (quote ([_ theta]))}, :protocol thi.ng.color.core/IColorOps, :name thi.ng.color.core/rotate-hue, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 14, :method-params ([_ theta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ theta])), :doc nil}, YELLOW {:name thi.ng.color.core/YELLOW, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 896, :column 1, :end-line 896, :end-column 12, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 896, :column 6, :end-line 896, :end-column 12}}, ->RGBA {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 61, :column 12, :end-line 61, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([r g b a]))}, :name thi.ng.color.core/->RGBA, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 16, :method-params ([r g b a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 61, :end-line 61, :max-fixed-arity 4, :fn-var true, :arglists (quote ([r g b a]))}, black {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 53, :column 4, :end-line 53, :end-column 9, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/black, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 9, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, Int24 {:num-fields 1, :protocols #{thi.ng.color.core/IHSLConvert cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert cljs.core/ICounted thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer cljs.core/IWithMeta thi.ng.color.core/IHSVConvert cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.color.core/Int24, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 211, :record true, :end-line 211, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, CSS {:num-fields 1, :protocols #{thi.ng.color.core/IHSLConvert cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert cljs.core/ICounted thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer cljs.core/IWithMeta thi.ng.color.core/IHSVConvert cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.color.core/CSS, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 15, :type true, :column 12, :internal-ctor true, :line 702, :record true, :end-line 702, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, BLACK {:name thi.ng.color.core/BLACK, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 897, :column 1, :end-line 897, :end-column 11, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 897, :column 6, :end-line 897, :end-column 11}}, hue {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 46, :column 4, :end-line 46, :end-column 7, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/hue, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 7, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, int32 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 864, :column 7, :end-line 864, :end-column 12, :arglists (quote ([col] [col alpha])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([col] [col alpha]), :arglists ([col] [col alpha]), :arglists-meta (nil nil)}}, :name thi.ng.color.core/int32, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([col] [col alpha]), :arglists ([col] [col alpha]), :arglists-meta (nil nil)}, :method-params ([col] [col alpha]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 864, :end-line 864, :max-fixed-arity 2, :fn-var true, :arglists ([col] [col alpha])}, parse-channel-val {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1037, :column 8, :end-line 1037, :end-column 25, :private true, :arglists (quote ([c]))}, :private true, :name thi.ng.color.core/parse-channel-val, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 25, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1037, :end-line 1037, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, t_thi$ng$color$core25368 {:num-fields 5, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/t_thi$ng$color$core25368, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :type true, :anonymous true, :column 5, :line 783, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, rgba {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 856, :column 7, :end-line 856, :end-column 11, :arglists (quote ([[r g b a]] [r g b] [r g b a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[r g b a]] [r g b] [r g b a]), :arglists ([[r g b a]] [r g b] [r g b a]), :arglists-meta (nil nil nil)}}, :name thi.ng.color.core/rgba, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[r g b a]] [r g b] [r g b a]), :arglists ([[r g b a]] [r g b] [r g b a]), :arglists-meta (nil nil nil)}, :method-params ([[r g b a]] [r g b] [r g b a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 856, :end-line 856, :max-fixed-arity 4, :fn-var true, :arglists ([[r g b a]] [r g b] [r g b a])}, map->CMYKA {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 622, :column 12, :end-line 622, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__25348]))}, :name thi.ng.color.core/map->CMYKA, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 17, :method-params ([G__25348]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 622, :end-line 622, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25348]))}, random-analog {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1114, :column 7, :end-line 1114, :end-column 20, :arglists (quote ([col delta] [col theta sat bright])), :doc "Returns new color of same type with its hue rotated and adjusted\n  saturation & brightness within given tolerances (+/-).", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([col delta] [col theta sat bright]), :arglists ([col delta] [col theta sat bright]), :arglists-meta (nil nil)}}, :name thi.ng.color.core/random-analog, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([col delta] [col theta sat bright]), :arglists ([col delta] [col theta sat bright]), :arglists-meta (nil nil)}, :method-params ([col delta] [col theta sat bright]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1114, :end-line 1114, :max-fixed-arity 4, :fn-var true, :arglists ([col delta] [col theta sat bright]), :doc "Returns new color of same type with its hue rotated and adjusted\n  saturation & brightness within given tolerances (+/-)."}, primary-hues {:name thi.ng.color.core/primary-hues, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1076, :column 1, :end-line 1076, :end-column 18, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1076, :column 6, :end-line 1076, :end-column 18}}, t_thi$ng$color$core25365 {:num-fields 5, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/t_thi$ng$color$core25365, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :type true, :anonymous true, :column 5, :line 783, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, ->t_thi$ng$color$core25362 {:protocol-inline nil, :meta {:anonymous true, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([to-rgba from-rgba ctor col meta25363])), :file nil}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->t_thi$ng$color$core25362, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :method-params ([to-rgba from-rgba ctor col meta25363]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 783, :max-fixed-arity 5, :fn-var true, :arglists (quote ([to-rgba from-rgba ctor col meta25363])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, hues {:name thi.ng.color.core/hues, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1071, :column 1, :end-line 1071, :end-column 10, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1071, :column 6, :end-line 1071, :end-column 10}}, dist-rgb {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1125, :column 7, :end-line 1125, :end-column 15, :arglists (quote ([a b])), :doc "Returns RGB distance of any two colors"}, :name thi.ng.color.core/dist-rgb, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 15, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1125, :end-line 1125, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b])), :doc "Returns RGB distance of any two colors"}, map->Int32 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 295, :column 12, :end-line 295, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__25322]))}, :name thi.ng.color.core/map->Int32, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 17, :method-params ([G__25322]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 295, :end-line 295, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25322]))}, hue->rgb {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 910, :column 8, :end-line 910, :end-column 16, :private true, :arglists (quote ([h]))}, :private true, :name thi.ng.color.core/hue->rgb, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 16, :method-params ([h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 910, :end-line 910, :max-fixed-arity 1, :fn-var true, :arglists (quote ([h]))}, as-int32 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 39, :column 4, :end-line 39, :end-column 12, :protocol thi.ng.color.core/IIntConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IIntConvert, :name thi.ng.color.core/as-int32, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, ->t_thi$ng$color$core25368 {:protocol-inline nil, :meta {:anonymous true, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([to-rgba from-rgba ctor col meta25369])), :file nil}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->t_thi$ng$color$core25368, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :method-params ([to-rgba from-rgba ctor col meta25369]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 783, :max-fixed-arity 5, :fn-var true, :arglists (quote ([to-rgba from-rgba ctor col meta25369])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, ->t_thi$ng$color$core25365 {:protocol-inline nil, :meta {:anonymous true, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([to-rgba from-rgba ctor col meta25366])), :file nil}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->t_thi$ng$color$core25365, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :method-params ([to-rgba from-rgba ctor col meta25366]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 783, :max-fixed-arity 5, :fn-var true, :arglists (quote ([to-rgba from-rgba ctor col meta25366])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, map->HSVA {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 388, :column 12, :end-line 388, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__25330]))}, :name thi.ng.color.core/map->HSVA, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 16, :method-params ([G__25330]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 388, :end-line 388, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25330]))}, yellow {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 52, :column 4, :end-line 52, :end-column 10, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/yellow, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, saturation {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 47, :column 4, :end-line 47, :end-column 14, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/saturation, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 14, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, ->HSLA {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 504, :column 12, :end-line 504, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([h s l a]))}, :name thi.ng.color.core/->HSLA, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 16, :method-params ([h s l a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 504, :end-line 504, :max-fixed-arity 4, :fn-var true, :arglists (quote ([h s l a]))}, adjust-saturation {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 57, :column 4, :end-line 57, :end-column 21, :protocol thi.ng.color.core/IColorOps, :doc nil, :arglists (quote ([_ offset]))}, :protocol thi.ng.color.core/IColorOps, :name thi.ng.color.core/adjust-saturation, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 21, :method-params ([_ offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ offset])), :doc nil}, adjust-alpha {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 59, :column 4, :end-line 59, :end-column 16, :protocol thi.ng.color.core/IColorOps, :doc nil, :arglists (quote ([_ offset]))}, :protocol thi.ng.color.core/IColorOps, :name thi.ng.color.core/adjust-alpha, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 16, :method-params ([_ offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ offset])), :doc nil}, IColorOps {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 23, :column 14, :line 55, :protocol-info {:methods {rotate-hue [[_ theta]], adjust-saturation [[_ offset]], adjust-brightness [[_ offset]], adjust-alpha [[_ offset]]}}, :end-line 55, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.color.core/IColorOps, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 23, :column 1, :line 55, :protocol-info {:methods {rotate-hue [[_ theta]], adjust-saturation [[_ offset]], adjust-brightness [[_ offset]], adjust-alpha [[_ offset]]}}, :info nil, :end-line 55, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core25362 thi.ng.color.core/t_thi$ng$color$core25371 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core25368 thi.ng.color.core/t_thi$ng$color$core25365 thi.ng.color.core/HSLA thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, HSLA {:num-fields 4, :protocols #{thi.ng.color.core/IHSLConvert cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert cljs.core/ICounted thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer cljs.core/IWithMeta thi.ng.color.core/IHSVConvert cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.color.core/HSLA, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 16, :type true, :column 12, :internal-ctor true, :line 504, :record true, :end-line 504, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, complementary {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1101, :column 7, :end-line 1101, :end-column 20, :arglists (quote ([col])), :doc "Returns new color of same type with its hue rotated by 180 degrees."}, :name thi.ng.color.core/complementary, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 20, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1101, :end-line 1101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col])), :doc "Returns new color of same type with its hue rotated by 180 degrees."}, ICSSConvert {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 25, :column 14, :line 34, :protocol-info {:methods {as-css [[_]]}}, :end-line 34, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.color.core/ICSSConvert, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 25, :column 1, :line 34, :protocol-info {:methods {as-css [[_]]}}, :info nil, :end-line 34, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core25362 thi.ng.color.core/t_thi$ng$color$core25371 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core25368 thi.ng.color.core/t_thi$ng$color$core25365 thi.ng.color.core/HSLA thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, green {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 43, :column 4, :end-line 43, :end-column 9, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/green, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 9, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, CYAN {:name thi.ng.color.core/CYAN, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 894, :column 1, :end-line 894, :end-column 10, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 894, :column 6, :end-line 894, :end-column 10}}, t_thi$ng$color$core25371 {:num-fields 5, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/t_thi$ng$color$core25371, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :type true, :anonymous true, :column 5, :line 783, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, yuva->rgba {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 994, :column 8, :end-line 994, :end-column 18, :private true, :arglists (quote ([yuva] [y u v] [y u v a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([yuva] [y u v] [y u v a]), :arglists ([yuva] [y u v] [y u v a]), :arglists-meta (nil nil nil)}}, :private true, :name thi.ng.color.core/yuva->rgba, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([yuva] [y u v] [y u v a]), :arglists ([yuva] [y u v] [y u v a]), :arglists-meta (nil nil nil)}, :method-params ([yuva] [y u v] [y u v a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 994, :end-line 994, :max-fixed-arity 4, :fn-var true, :arglists ([yuva] [y u v] [y u v a])}, cyan {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 50, :column 4, :end-line 50, :end-column 8, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/cyan, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 8, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, ->HSVA {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 388, :column 12, :end-line 388, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([h s v a]))}, :name thi.ng.color.core/->HSVA, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 16, :method-params ([h s v a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 388, :end-line 388, :max-fixed-arity 4, :fn-var true, :arglists (quote ([h s v a]))}, IColorComponents {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 30, :column 14, :line 41, :protocol-info {:methods {magenta [[_]], black [[_]], hue [[_]], yellow [[_]], saturation [[_]], green [[_]], cyan [[_]], brightness [[_]], luminance [[_]], red [[_]], blue [[_]], alpha [[_]]}}, :end-line 41, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.color.core/IColorComponents, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 30, :column 1, :line 41, :protocol-info {:methods {magenta [[_]], black [[_]], hue [[_]], yellow [[_]], saturation [[_]], green [[_]], cyan [[_]], brightness [[_]], luminance [[_]], red [[_]], blue [[_]], alpha [[_]]}}, :info nil, :end-line 41, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core25362 thi.ng.color.core/t_thi$ng$color$core25371 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core25368 thi.ng.color.core/t_thi$ng$color$core25365 thi.ng.color.core/HSLA thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, RGBA {:num-fields 4, :protocols #{thi.ng.color.core/IHSLConvert cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert cljs.core/ICounted thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer cljs.core/IWithMeta thi.ng.color.core/IHSVConvert cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.color.core/RGBA, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 16, :type true, :column 12, :internal-ctor true, :line 61, :record true, :end-line 61, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, css {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 885, :column 7, :end-line 885, :end-column 10, :arglists (quote ([col]))}, :name thi.ng.color.core/css, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 10, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 885, :end-line 885, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, as-int24 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 38, :column 4, :end-line 38, :end-column 12, :protocol thi.ng.color.core/IIntConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IIntConvert, :name thi.ng.color.core/as-int24, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, brightness {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 48, :column 4, :end-line 48, :end-column 14, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/brightness, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 14, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, hex6 {:name thi.ng.color.core/hex6, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 18, :column 1, :end-line 18, :end-column 20, :private true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 18, :column 16, :end-line 18, :end-column 20, :private true}}, as-cmyka {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 32, :column 4, :end-line 32, :end-column 12, :protocol thi.ng.color.core/ICMYKConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/ICMYKConvert, :name thi.ng.color.core/as-cmyka, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, IRGBConvert {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 25, :column 14, :line 22, :protocol-info {:methods {as-rgba [[_]]}}, :end-line 22, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.color.core/IRGBConvert, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 25, :column 1, :line 22, :protocol-info {:methods {as-rgba [[_]]}}, :info nil, :end-line 22, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core25362 thi.ng.color.core/t_thi$ng$color$core25371 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core25368 thi.ng.color.core/t_thi$ng$color$core25365 thi.ng.color.core/HSLA thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, yuva {:name thi.ng.color.core/yuva, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1065, :column 1, :end-line 1065, :end-column 10, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1065, :column 6, :end-line 1065, :end-column 10}}, GRAY {:name thi.ng.color.core/GRAY, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 899, :column 1, :end-line 899, :end-column 10, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 899, :column 6, :end-line 899, :end-column 10}}, as-hsva {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 26, :column 4, :end-line 26, :end-column 11, :protocol thi.ng.color.core/IHSVConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IHSVConvert, :name thi.ng.color.core/as-hsva, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, WHITE {:name thi.ng.color.core/WHITE, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 898, :column 1, :end-line 898, :end-column 11, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 898, :column 6, :end-line 898, :end-column 11}}, ->CMYKA {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 622, :column 12, :end-line 622, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([c m y k a]))}, :name thi.ng.color.core/->CMYKA, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 17, :method-params ([c m y k a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 622, :end-line 622, :max-fixed-arity 5, :fn-var true, :arglists (quote ([c m y k a]))}, rgba->yuva {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 983, :column 8, :end-line 983, :end-column 18, :private true, :arglists (quote ([rgba]))}, :private true, :name thi.ng.color.core/rgba->yuva, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 18, :method-params ([rgba]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 983, :end-line 983, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rgba]))}, ->Int24 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 211, :column 12, :end-line 211, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([col]))}, :name thi.ng.color.core/->Int24, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 17, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 211, :end-line 211, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, map->HSLA {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 504, :column 12, :end-line 504, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__25340]))}, :name thi.ng.color.core/map->HSLA, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 16, :method-params ([G__25340]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 504, :end-line 504, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25340]))}, IHSVConvert {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 25, :column 14, :line 25, :protocol-info {:methods {as-hsva [[_]]}}, :end-line 25, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.color.core/IHSVConvert, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 25, :column 1, :line 25, :protocol-info {:methods {as-hsva [[_]]}}, :info nil, :end-line 25, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core25362 thi.ng.color.core/t_thi$ng$color$core25371 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core25368 thi.ng.color.core/t_thi$ng$color$core25365 thi.ng.color.core/HSLA thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, ns-prefix {:name thi.ng.color.core/ns-prefix, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 20, :column 1, :end-line 20, :end-column 25, :private true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 20, :column 16, :end-line 20, :end-column 25, :private true}}, cie1931 {:name thi.ng.color.core/cie1931, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1069, :column 1, :end-line 1069, :end-column 13, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1069, :column 6, :end-line 1069, :end-column 13}}, rgba->ycbcra {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 973, :column 8, :end-line 973, :end-column 20, :private true, :arglists (quote ([rgba]))}, :private true, :name thi.ng.color.core/rgba->ycbcra, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 20, :method-params ([rgba]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 973, :end-line 973, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rgba]))}, cmyka {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 880, :column 7, :end-line 880, :end-column 12, :arglists (quote ([[c m y k a]] [c m y k] [c m y k a])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([[c m y k a]] [c m y k] [c m y k a]), :arglists ([[c m y k a]] [c m y k] [c m y k a]), :arglists-meta (nil nil nil)}}, :name thi.ng.color.core/cmyka, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([[c m y k a]] [c m y k] [c m y k a]), :arglists ([[c m y k a]] [c m y k] [c m y k a]), :arglists-meta (nil nil nil)}, :method-params ([[c m y k a]] [c m y k] [c m y k a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 880, :end-line 880, :max-fixed-arity 5, :fn-var true, :arglists ([[c m y k a]] [c m y k] [c m y k a])}, MAGENTA {:name thi.ng.color.core/MAGENTA, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 895, :column 1, :end-line 895, :end-column 13, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 895, :column 6, :end-line 895, :end-column 13}}, luminance {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 49, :column 4, :end-line 49, :end-column 13, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/luminance, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 13, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, random-rgb {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 888, :column 7, :end-line 888, :end-column 17, :arglists (quote ([])), :doc "Returns a random RGBA color with 100% alpha"}, :name thi.ng.color.core/random-rgb, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 888, :end-line 888, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns a random RGBA color with 100% alpha"}, rgba->hcya {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 929, :column 8, :end-line 929, :end-column 18, :private true, :arglists (quote ([rgba]))}, :private true, :name thi.ng.color.core/rgba->hcya, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 18, :method-params ([rgba]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 929, :end-line 929, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rgba]))}, CMYKA {:num-fields 5, :protocols #{thi.ng.color.core/IHSLConvert cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert cljs.core/ICounted thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer cljs.core/IWithMeta thi.ng.color.core/IHSVConvert cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.color.core/CMYKA, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 622, :record true, :end-line 622, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, red {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 42, :column 4, :end-line 42, :end-column 7, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/red, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 7, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, as-css {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 35, :column 4, :end-line 35, :end-column 10, :protocol thi.ng.color.core/ICSSConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/ICSSConvert, :name thi.ng.color.core/as-css, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, blue {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 44, :column 4, :end-line 44, :end-column 8, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/blue, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 8, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, hsla {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 875, :column 7, :end-line 875, :end-column 11, :arglists (quote ([[h s l a]] [h s l] [h s l a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[h s l a]] [h s l] [h s l a]), :arglists ([[h s l a]] [h s l] [h s l a]), :arglists-meta (nil nil nil)}}, :name thi.ng.color.core/hsla, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[h s l a]] [h s l] [h s l a]), :arglists ([[h s l a]] [h s l] [h s l a]), :arglists-meta (nil nil nil)}, :method-params ([[h s l a]] [h s l] [h s l a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 875, :end-line 875, :max-fixed-arity 4, :fn-var true, :arglists ([[h s l a]] [h s l] [h s l a])}, hsva {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 870, :column 7, :end-line 870, :end-column 11, :arglists (quote ([[h s v a]] [h s v] [h s v a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[h s v a]] [h s v] [h s v a]), :arglists ([[h s v a]] [h s v] [h s v a]), :arglists-meta (nil nil nil)}}, :name thi.ng.color.core/hsva, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[h s v a]] [h s v] [h s v a]), :arglists ([[h s v a]] [h s v] [h s v a]), :arglists-meta (nil nil nil)}, :method-params ([[h s v a]] [h s v] [h s v a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 870, :end-line 870, :max-fixed-arity 4, :fn-var true, :arglists ([[h s v a]] [h s v] [h s v a])}, hcya->rgba {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 944, :column 8, :end-line 944, :end-column 18, :private true, :arglists (quote ([hcya] [h c y] [h c y a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([hcya] [h c y] [h c y a]), :arglists ([hcya] [h c y] [h c y a]), :arglists-meta (nil nil nil)}}, :private true, :name thi.ng.color.core/hcya->rgba, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([hcya] [h c y] [h c y a]), :arglists ([hcya] [h c y] [h c y a]), :arglists-meta (nil nil nil)}, :method-params ([hcya] [h c y] [h c y a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 944, :end-line 944, :max-fixed-arity 4, :fn-var true, :arglists ([hcya] [h c y] [h c y a])}, gamma-correct {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1092, :column 7, :end-line 1092, :end-column 20, :arglists (quote ([col gamma])), :doc "Returns gamma corrected version of color as RGBA"}, :name thi.ng.color.core/gamma-correct, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 20, :method-params ([col gamma]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1092, :end-line 1092, :max-fixed-arity 2, :fn-var true, :arglists (quote ([col gamma])), :doc "Returns gamma corrected version of color as RGBA"}, ICMYKConvert {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 26, :column 14, :line 31, :protocol-info {:methods {as-cmyka [[_]]}}, :end-line 31, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.color.core/ICMYKConvert, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 26, :column 1, :line 31, :protocol-info {:methods {as-cmyka [[_]]}}, :info nil, :end-line 31, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core25362 thi.ng.color.core/t_thi$ng$color$core25371 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core25368 thi.ng.color.core/t_thi$ng$color$core25365 thi.ng.color.core/HSLA thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, ->CSS {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 702, :column 12, :end-line 702, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([col]))}, :name thi.ng.color.core/->CSS, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 15, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 702, :end-line 702, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, int24 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 861, :column 7, :end-line 861, :end-column 12, :arglists (quote ([col]))}, :name thi.ng.color.core/int24, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 12, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 861, :end-line 861, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, cie1931-gamma-correct {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1006, :column 8, :end-line 1006, :end-column 29, :private true, :arglists (quote ([x]))}, :private true, :name thi.ng.color.core/cie1931-gamma-correct, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 29, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1006, :end-line 1006, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, alpha {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 45, :column 4, :end-line 45, :end-column 9, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/alpha, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 9, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, rgba->hcva {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 917, :column 8, :end-line 917, :end-column 18, :private true, :arglists (quote ([rgba]))}, :private true, :name thi.ng.color.core/rgba->hcva, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 18, :method-params ([rgba]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 917, :end-line 917, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rgba]))}, IHSLConvert {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 25, :column 14, :line 28, :protocol-info {:methods {as-hsla [[_]]}}, :end-line 28, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.color.core/IHSLConvert, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 25, :column 1, :line 28, :protocol-info {:methods {as-hsla [[_]]}}, :info nil, :end-line 28, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core25362 thi.ng.color.core/t_thi$ng$color$core25371 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core25368 thi.ng.color.core/t_thi$ng$color$core25365 thi.ng.color.core/HSLA thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, RED {:name thi.ng.color.core/RED, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :line 891, :column 1, :end-line 891, :end-column 9, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 891, :column 6, :end-line 891, :end-column 9}}, HSVA {:num-fields 4, :protocols #{thi.ng.color.core/IHSLConvert cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection thi.ng.color.core/IIntConvert thi.ng.math.core/IInvert cljs.core/ICounted thi.ng.dstruct.streams/IBuffer thi.ng.math.core/IInterpolate cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.dstruct.streams/IIntoBuffer cljs.core/IWithMeta thi.ng.color.core/IHSVConvert cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.color.core/HSVA, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 16, :type true, :column 12, :internal-ctor true, :line 388, :record true, :end-line 388, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, closest-hue {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/color/core.cljc", :line 1079, :column 7, :end-line 1079, :end-column 18, :arglists (quote ([col] [col hues])), :doc "Takes a color and map of hues (e.g. thi.ng.color.core.primary-hues),\n  returns key of closest hue.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([col] [col hues]), :arglists ([col] [col hues]), :arglists-meta (nil nil)}}, :name thi.ng.color.core/closest-hue, :variadic false, :file ".cljs_nashorn_repl/thi/ng/color/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([col] [col hues]), :arglists ([col] [col hues]), :arglists-meta (nil nil)}, :method-params ([col] [col hues]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1079, :end-line 1079, :max-fixed-arity 2, :fn-var true, :arglists ([col] [col hues]), :doc "Takes a color and map of hues (e.g. thi.ng.color.core.primary-hues),\n  returns key of closest hue."}}, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros}, :cljs.analyzer/constants {:seen #{:y :lime :orange :r :v to-rgba a String :else y :yellow meta25363 :m r ctor :green :cyan v double :s :l :k m :g :c meta25369 meta25372 :h :col :red :blue s k :azure l :b from-rgba c :teal g :magenta :tag :purple col h b meta25366 :a}, :order [:r :g :b :a r :tag double g b a :col col :h :s :v h s v :l l :c :m :y :k c m y k String to-rgba from-rgba ctor meta25363 meta25366 meta25369 meta25372 :else :red :orange :yellow :lime :green :teal :cyan :azure :blue :purple :magenta]}, :doc nil}