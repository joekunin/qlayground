{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{bit-count * min - + max}, :name thi.ng.math.core, :imports nil, :requires nil, :uses nil, :defs {dot {:protocol-inline nil, :meta {:protocol thi.ng.math.core/IDotProduct, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 7, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ a]), :arglists ([_] [_ a]), :arglists-meta (nil nil)}, :column 4, :line 37, :end-line 37, :arglists (quote ([_] [_ a])), :doc nil}, :protocol thi.ng.math.core/IDotProduct, :name thi.ng.math.core/dot, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 7, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ a]), :arglists ([_] [_ a]), :arglists-meta (nil nil)}, :method-params ([_] [_ a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ a]), :doc nil}, ensure-even {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 194, :column 7, :end-line 194, :end-column 18, :arglists (quote ([x])), :doc "Returns x if even or `x+1` if `x` is odd."}, :name thi.ng.math.core/ensure-even, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns x if even or `x+1` if `x` is odd."}, fract {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 361, :column 7, :end-line 361, :end-column 12, :arglists (quote ([x]))}, :name thi.ng.math.core/fract, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 361, :end-line 361, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ensure-odd {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 198, :column 7, :end-line 198, :end-column 17, :arglists (quote ([x])), :doc "Returns x if odd or `x+1` if `x` is even."}, :name thi.ng.math.core/ensure-odd, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns x if odd or `x+1` if `x` is even."}, mix-exp {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 300, :column 7, :end-line 300, :end-column 14, :arglists (quote ([a b t e]))}, :name thi.ng.math.core/mix-exp, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 14, :method-params ([a b t e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 300, :end-line 300, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a b t e]))}, -! {:protocol-inline nil, :meta {:protocol thi.ng.math.core/IMutableMathOps, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 6, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :column 4, :line 20, :end-line 20, :arglists (quote ([_] [_ a] [_ a b] [_ a b c])), :doc nil}, :protocol thi.ng.math.core/IMutableMathOps, :name thi.ng.math.core/-!, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 6, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :method-params ([_] [_ a] [_ a b] [_ a b c]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 18, :end-line 20, :max-fixed-arity 4, :fn-var true, :arglists ([_] [_ a] [_ a b] [_ a b c]), :doc nil}, union {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 57, :column 4, :end-line 57, :end-column 9, :protocol thi.ng.math.core/ISetOps, :doc nil, :arglists (quote ([_ x]))}, :protocol thi.ng.math.core/ISetOps, :name thi.ng.math.core/union, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 9, :method-params ([_ x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ x])), :doc nil}, mix {:protocol-inline nil, :meta {:protocol thi.ng.math.core/IInterpolate, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 7, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([_ x] [_ x t] [_ a b c u v]), :arglists ([_ x] [_ x t] [_ a b c u v]), :arglists-meta (nil nil nil)}, :column 4, :line 39, :end-line 39, :arglists (quote ([_ x] [_ x t] [_ a b c u v])), :doc nil}, :protocol thi.ng.math.core/IInterpolate, :name thi.ng.math.core/mix, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 7, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([_ x] [_ x t] [_ a b c u v]), :arglists ([_ x] [_ x t] [_ a b c u v]), :arglists-meta (nil nil nil)}, :method-params ([_ x] [_ x t] [_ a b c u v]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 38, :end-line 39, :max-fixed-arity 6, :fn-var true, :arglists ([_ x] [_ x t] [_ a b c u v]), :doc nil}, step {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 41, :column 4, :end-line 41, :end-column 8, :protocol thi.ng.math.core/IInterpolate, :doc nil, :arglists (quote ([_ e]))}, :protocol thi.ng.math.core/IInterpolate, :name thi.ng.math.core/step, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 8, :method-params ([_ e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ e])), :doc nil}, *! {:protocol-inline nil, :meta {:protocol thi.ng.math.core/IMutableMathOps, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 6, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :column 4, :line 21, :end-line 21, :arglists (quote ([_] [_ a] [_ a b] [_ a b c])), :doc nil}, :protocol thi.ng.math.core/IMutableMathOps, :name thi.ng.math.core/*!, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 6, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :method-params ([_] [_ a] [_ a b] [_ a b c]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 18, :end-line 21, :max-fixed-arity 4, :fn-var true, :arglists ([_] [_ a] [_ a b] [_ a b c]), :doc nil}, clamp {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 207, :column 7, :end-line 207, :end-column 12, :arglists (quote ([x min max])), :doc "Constraints x to be in closed interval [min max]."}, :name thi.ng.math.core/clamp, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 12, :method-params ([x min max]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x min max])), :doc "Constraints x to be in closed interval [min max]."}, radians {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 366, :column 7, :end-line 366, :end-column 14, :arglists (quote ([x]))}, :name thi.ng.math.core/radians, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 366, :end-line 366, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, degrees {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 368, :column 7, :end-line 368, :end-column 14, :arglists (quote ([x]))}, :name thi.ng.math.core/degrees, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 368, :end-line 368, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, floor {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 325, :column 7, :end-line 325, :end-column 12, :arglists (quote ([x]))}, :name thi.ng.math.core/floor, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 325, :end-line 325, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, IInvert {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 21, :column 14, :line 43, :protocol-info {:methods {invert [[_]]}}, :end-line 43, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/IInvert, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 21, :column 1, :line 43, :protocol-info {:methods {invert [[_]]}}, :info nil, :end-line 43, :impls #{}, :doc nil, :jsdoc ("@interface")}, cross {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 31, :column 4, :end-line 31, :end-column 9, :protocol thi.ng.math.core/ICrossProduct, :doc nil, :arglists (quote ([_ a]))}, :protocol thi.ng.math.core/ICrossProduct, :name thi.ng.math.core/cross, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 9, :method-params ([_ a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ a])), :doc nil}, normalize {:protocol-inline nil, :meta {:protocol thi.ng.math.core/INormalize, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ norm]), :arglists ([_] [_ norm]), :arglists-meta (nil nil)}, :column 4, :line 54, :end-line 54, :arglists (quote ([_] [_ norm])), :doc nil}, :protocol thi.ng.math.core/INormalize, :name thi.ng.math.core/normalize, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([_] [_ norm]), :arglists ([_] [_ norm]), :arglists-meta (nil nil)}, :method-params ([_] [_ norm]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists ([_] [_ norm]), :doc nil}, THREE_HALVES_PI {:name thi.ng.math.core/THREE_HALVES_PI, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 69, :column 1, :end-line 69, :end-column 29, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 69, :column 14, :end-line 69, :end-column 29, :const true}}, hypot {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 398, :column 7, :end-line 398, :end-column 12, :arglists (quote ([x y]))}, :name thi.ng.math.core/hypot, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 12, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 398, :end-line 398, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, clamp-normalized {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 211, :column 7, :end-line 211, :end-column 23, :arglists (quote ([x])), :doc "Constraints x to be in closed interval [0.0 .. 1.0]"}, :name thi.ng.math.core/clamp-normalized, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 23, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Constraints x to be in closed interval [0.0 .. 1.0]"}, wrap-range {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 253, :column 7, :end-line 253, :end-column 17, :arglists (quote ([x y])), :doc "Returns x mod y with result always in semi-closed interval [0..y"}, :name thi.ng.math.core/wrap-range, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 17, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 253, :end-line 253, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "Returns x mod y with result always in semi-closed interval [0..y"}, sinc {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 411, :column 7, :end-line 411, :end-column 11, :arglists (quote ([x] [x freq])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x freq]), :arglists ([x] [x freq]), :arglists-meta (nil nil)}}, :name thi.ng.math.core/sinc, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x freq]), :arglists ([x] [x freq]), :arglists-meta (nil nil)}, :method-params ([x] [x freq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 411, :end-line 411, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x freq])}, subm! {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 26, :column 4, :end-line 26, :end-column 9, :protocol thi.ng.math.core/IMutableMathOps, :doc nil, :arglists (quote ([_ a b]))}, :protocol thi.ng.math.core/IMutableMathOps, :name thi.ng.math.core/subm!, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 9, :method-params ([_ a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 26, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ a b])), :doc nil}, bit-count {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 355, :column 7, :end-line 355, :end-column 16, :arglists (quote ([x]))}, :name thi.ng.math.core/bit-count, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 355, :end-line 355, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, TWO_THIRD {:name thi.ng.math.core/TWO_THIRD, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 79, :column 1, :end-line 79, :end-column 23, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 79, :column 14, :end-line 79, :end-column 23, :const true}}, SIXTH_PI {:name thi.ng.math.core/SIXTH_PI, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 68, :column 1, :end-line 68, :end-column 22, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 68, :column 14, :end-line 68, :end-column 22, :const true}}, TWO_PI {:name thi.ng.math.core/TWO_PI, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 64, :column 1, :end-line 64, :end-column 20, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 64, :column 14, :end-line 64, :end-column 20, :const true}}, SIXTH {:name thi.ng.math.core/SIXTH, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 80, :column 1, :end-line 80, :end-column 19, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 80, :column 14, :end-line 80, :end-column 19, :const true}}, invert {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 44, :column 4, :end-line 44, :end-column 10, :protocol thi.ng.math.core/IInvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.math.core/IInvert, :name thi.ng.math.core/invert, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, mix-circular {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 272, :column 7, :end-line 272, :end-column 19, :arglists (quote ([a b t]))}, :name thi.ng.math.core/mix-circular, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 19, :method-params ([a b t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b t]))}, smoothstep* {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 267, :column 7, :end-line 267, :end-column 18, :arglists (quote ([e0 e1 x]))}, :name thi.ng.math.core/smoothstep*, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 18, :method-params ([e0 e1 x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 267, :end-line 267, :max-fixed-arity 3, :fn-var true, :arglists (quote ([e0 e1 x]))}, msub {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 15, :column 4, :end-line 15, :end-column 8, :protocol thi.ng.math.core/IMathOps, :doc nil, :arglists (quote ([_ a b]))}, :protocol thi.ng.math.core/IMathOps, :name thi.ng.math.core/msub, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 8, :method-params ([_ a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ a b])), :doc nil}, mix-with {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 40, :column 4, :end-line 40, :end-column 12, :protocol thi.ng.math.core/IInterpolate, :doc nil, :arglists (quote ([_ x t f]))}, :protocol thi.ng.math.core/IInterpolate, :name thi.ng.math.core/mix-with, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 12, :method-params ([_ x t f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 40, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_ x t f])), :doc nil}, fdim {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 364, :column 7, :end-line 364, :end-column 11, :arglists (quote ([x y]))}, :name thi.ng.math.core/fdim, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 11, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 364, :end-line 364, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, msub! {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 25, :column 4, :end-line 25, :end-column 9, :protocol thi.ng.math.core/IMutableMathOps, :doc nil, :arglists (quote ([_ a b]))}, :protocol thi.ng.math.core/IMutableMathOps, :name thi.ng.math.core/msub!, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 9, :method-params ([_ a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 25, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ a b])), :doc nil}, ceil {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 332, :column 7, :end-line 332, :end-column 11, :arglists (quote ([x]))}, :name thi.ng.math.core/ceil, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 332, :end-line 332, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, roundto {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 339, :column 7, :end-line 339, :end-column 14, :arglists (quote ([x prec]))}, :name thi.ng.math.core/roundto, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 14, :method-params ([x prec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 339, :end-line 339, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x prec]))}, mix-bezier {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 289, :column 7, :end-line 289, :end-column 17, :arglists (quote ([a b t c1 c2]))}, :name thi.ng.math.core/mix-bezier, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 17, :method-params ([a b t c1 c2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 289, :end-line 289, :max-fixed-arity 5, :fn-var true, :arglists (quote ([a b t c1 c2]))}, conjugate {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 29, :column 4, :end-line 29, :end-column 13, :protocol thi.ng.math.core/IConjugate, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.math.core/IConjugate, :name thi.ng.math.core/conjugate, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 13, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, INF+ {:name thi.ng.math.core/INF+, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 84, :column 1, :end-line 84, :end-column 18, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 84, :column 14, :end-line 84, :end-column 18, :const true}}, abs! {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 27, :column 4, :end-line 27, :end-column 8, :protocol thi.ng.math.core/IMutableMathOps, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.math.core/IMutableMathOps, :name thi.ng.math.core/abs!, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 8, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, THIRD_PI {:name thi.ng.math.core/THIRD_PI, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 66, :column 1, :end-line 66, :end-column 22, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 66, :column 14, :end-line 66, :end-column 22, :const true}}, INV7BIT {:name thi.ng.math.core/INV7BIT, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 90, :column 1, :end-line 90, :end-column 21, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 90, :column 14, :end-line 90, :end-column 21, :const true}}, impulse {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 407, :column 7, :end-line 407, :end-column 14, :arglists (quote ([k t]))}, :name thi.ng.math.core/impulse, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 14, :method-params ([k t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 407, :end-line 407, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k t]))}, quartile-range {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 447, :column 7, :end-line 447, :end-column 21, :arglists (quote ([n num]))}, :name thi.ng.math.core/quartile-range, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 21, :method-params ([n num]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 447, :end-line 447, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n num]))}, intersection {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 58, :column 4, :end-line 58, :end-column 16, :protocol thi.ng.math.core/ISetOps, :doc nil, :arglists (quote ([_ x]))}, :protocol thi.ng.math.core/ISetOps, :name thi.ng.math.core/intersection, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 16, :method-params ([_ x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ x])), :doc nil}, INV15BIT {:name thi.ng.math.core/INV15BIT, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 92, :column 1, :end-line 92, :end-column 22, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 92, :column 14, :end-line 92, :end-column 22, :const true}}, minmag {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 377, :column 7, :end-line 377, :end-column 13, :arglists (quote ([x y]))}, :name thi.ng.math.core/minmag, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 13, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 377, :end-line 377, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, * {:protocol-inline nil, :meta {:protocol thi.ng.math.core/IMathOps, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 5, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :column 4, :line 11, :end-line 11, :arglists (quote ([_] [_ a] [_ a b] [_ a b c])), :doc nil}, :protocol thi.ng.math.core/IMathOps, :name thi.ng.math.core/*, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 5, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :method-params ([_] [_ a] [_ a b] [_ a b c]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 8, :end-line 11, :max-fixed-arity 4, :fn-var true, :arglists ([_] [_ a] [_ a b] [_ a b c]), :doc nil}, abs-diff {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 102, :column 7, :end-line 102, :end-column 15, :arglists (quote ([x y]))}, :name thi.ng.math.core/abs-diff, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 15, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, min {:protocol-inline nil, :meta {:protocol thi.ng.math.core/IMinMax, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 7, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ a] [_ a b]), :arglists ([_ a] [_ a b]), :arglists-meta (nil nil)}, :column 4, :line 46, :end-line 46, :arglists (quote ([_ a] [_ a b])), :doc nil}, :protocol thi.ng.math.core/IMinMax, :name thi.ng.math.core/min, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 7, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ a] [_ a b]), :arglists ([_ a] [_ a b]), :arglists-meta (nil nil)}, :method-params ([_ a] [_ a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 46, :max-fixed-arity 3, :fn-var true, :arglists ([_ a] [_ a b]), :doc nil}, in-range? {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 246, :column 7, :end-line 246, :end-column 16, :arglists (quote ([[min max] x] [min max x])), :doc "Returns true if x >= min and x <= max.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([[min max] x] [min max x]), :arglists ([[min max] x] [min max x]), :arglists-meta (nil nil)}}, :name thi.ng.math.core/in-range?, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([[min max] x] [min max x]), :arglists ([[min max] x] [min max x]), :arglists-meta (nil nil)}, :method-params ([[min max] x] [min max x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 246, :end-line 246, :max-fixed-arity 3, :fn-var true, :arglists ([[min max] x] [min max x]), :doc "Returns true if x >= min and x <= max."}, IInterpolate {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 26, :column 14, :line 38, :protocol-info {:methods {mix [[_ x] [_ x t] [_ a b c u v]], mix-with [[_ x t f]], step [[_ e]], smoothstep [[_ e1 e2]]}}, :end-line 38, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/IInterpolate, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 26, :column 1, :line 38, :protocol-info {:methods {mix [[_ x] [_ x t] [_ a b c u v]], mix-with [[_ x t f]], step [[_ e]], smoothstep [[_ e1 e2]]}}, :info nil, :end-line 38, :impls #{}, :doc nil, :jsdoc ("@interface")}, sign {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 105, :column 7, :end-line 105, :end-column 11, :arglists (quote ([x]))}, :name thi.ng.math.core/sign, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, IMathOps {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 22, :column 14, :line 8, :protocol-info {:methods {msub [[_ a b]], * [[_] [_ a] [_ a b] [_ a b c]], - [[_] [_ a] [_ a b] [_ a b c]], madd [[_ a b]], addm [[_ a b]], div [[_] [_ a] [_ a b] [_ a b c]], + [[_] [_ a] [_ a b] [_ a b c]], abs [[_]], subm [[_ a b]]}}, :end-line 8, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/IMathOps, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 22, :column 1, :line 8, :protocol-info {:methods {msub [[_ a b]], * [[_] [_ a] [_ a b] [_ a b c]], - [[_] [_ a] [_ a b] [_ a b c]], madd [[_ a b]], addm [[_ a b]], div [[_] [_ a] [_ a b] [_ a b c]], + [[_] [_ a] [_ a b] [_ a b c]], abs [[_]], subm [[_ a b]]}}, :info nil, :end-line 8, :impls #{}, :doc nil, :jsdoc ("@interface")}, rootn {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 401, :column 7, :end-line 401, :end-column 12, :arglists (quote ([x y]))}, :name thi.ng.math.core/rootn, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 12, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 401, :end-line 401, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, mix-decimated {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 303, :column 7, :end-line 303, :end-column 20, :arglists (quote ([a b t n]))}, :name thi.ng.math.core/mix-decimated, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 20, :method-params ([a b t n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 303, :end-line 303, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a b t n]))}, limit {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 49, :column 4, :end-line 49, :end-column 9, :protocol thi.ng.math.core/ILimit, :doc nil, :arglists (quote ([_ x]))}, :protocol thi.ng.math.core/ILimit, :name thi.ng.math.core/limit, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 9, :method-params ([_ x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ x])), :doc nil}, IMutableMathOps {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 29, :column 14, :line 18, :protocol-info {:methods {-! [[_] [_ a] [_ a b] [_ a b c]], *! [[_] [_ a] [_ a b] [_ a b c]], subm! [[_ a b]], msub! [[_ a b]], abs! [[_]], madd! [[_ a b]], div! [[_] [_ a] [_ a b] [_ a b c]], +! [[_] [_ a] [_ a b] [_ a b c]], addm! [[_ a b]]}}, :end-line 18, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/IMutableMathOps, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 29, :column 1, :line 18, :protocol-info {:methods {-! [[_] [_ a] [_ a b] [_ a b c]], *! [[_] [_ a] [_ a b] [_ a b c]], subm! [[_ a b]], msub! [[_ a b]], abs! [[_]], madd! [[_ a b]], div! [[_] [_ a] [_ a b] [_ a b c]], +! [[_] [_ a] [_ a b] [_ a b c]], addm! [[_ a b]]}}, :info nil, :end-line 18, :impls #{}, :doc nil, :jsdoc ("@interface")}, INF- {:name thi.ng.math.core/INF-, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 85, :column 1, :end-line 85, :end-column 18, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 85, :column 14, :end-line 85, :end-column 18, :const true}}, mag {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 51, :column 4, :end-line 51, :end-column 7, :protocol thi.ng.math.core/IMagnitude, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.math.core/IMagnitude, :name thi.ng.math.core/mag, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 7, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, mix-circular-flipped {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 277, :column 7, :end-line 277, :end-column 27, :arglists (quote ([a b t]))}, :name thi.ng.math.core/mix-circular-flipped, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 27, :method-params ([a b t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 277, :end-line 277, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b t]))}, mix-cosine {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 286, :column 7, :end-line 286, :end-column 17, :arglists (quote ([a b t]))}, :name thi.ng.math.core/mix-cosine, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 17, :method-params ([a b t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b t]))}, QUARTER_PI {:name thi.ng.math.core/QUARTER_PI, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 67, :column 1, :end-line 67, :end-column 24, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 67, :column 14, :end-line 67, :end-column 24, :const true}}, mix-bounce {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 318, :column 7, :end-line 318, :end-column 17, :arglists (quote ([a b t k]))}, :name thi.ng.math.core/mix-bounce, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 17, :method-params ([a b t k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 318, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a b t k]))}, ICrossProduct {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 27, :column 14, :line 30, :protocol-info {:methods {cross [[_ a]]}}, :end-line 30, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/ICrossProduct, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 27, :column 1, :line 30, :protocol-info {:methods {cross [[_ a]]}}, :info nil, :end-line 30, :impls #{}, :doc nil, :jsdoc ("@interface")}, *rnd* {:name thi.ng.math.core/*rnd*, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 95, :column 1, :end-line 95, :end-column 21, :dynamic true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 95, :column 16, :end-line 95, :end-column 21, :dynamic true}}, mix-lens {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 306, :column 7, :end-line 306, :end-column 15, :arglists (quote ([a b t pos strength]))}, :name thi.ng.math.core/mix-lens, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 15, :method-params ([a b t pos strength]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 306, :end-line 306, :max-fixed-arity 5, :fn-var true, :arglists (quote ([a b t pos strength]))}, transpose {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 61, :column 4, :end-line 61, :end-column 13, :protocol thi.ng.math.core/ITranspose, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.math.core/ITranspose, :name thi.ng.math.core/transpose, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 13, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, IMinMax {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 21, :column 14, :line 45, :protocol-info {:methods {min [[_ a] [_ a b]], max [[_ a] [_ a b]]}}, :end-line 45, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/IMinMax, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 21, :column 1, :line 45, :protocol-info {:methods {min [[_ a] [_ a b]], max [[_ a] [_ a b]]}}, :info nil, :end-line 45, :impls #{}, :doc nil, :jsdoc ("@interface")}, IMagnitude {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 24, :column 14, :line 50, :protocol-info {:methods {mag [[_]], mag-squared [[_]]}}, :end-line 50, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/IMagnitude, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 24, :column 1, :line 50, :protocol-info {:methods {mag [[_]], mag-squared [[_]]}}, :info nil, :end-line 50, :impls #{}, :doc nil, :jsdoc ("@interface")}, PI {:name thi.ng.math.core/PI, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 63, :column 1, :end-line 63, :end-column 16, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 63, :column 14, :end-line 63, :end-column 16, :const true}}, abs* {:name thi.ng.math.core/abs*, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 100, :column 4, :end-line 100, :end-column 13, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 100, :column 9, :end-line 100, :end-column 13}}, - {:protocol-inline nil, :meta {:protocol thi.ng.math.core/IMathOps, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 5, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :column 4, :line 10, :end-line 10, :arglists (quote ([_] [_ a] [_ a b] [_ a b c])), :doc nil}, :protocol thi.ng.math.core/IMathOps, :name thi.ng.math.core/-, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 5, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :method-params ([_] [_ a] [_ a b] [_ a b c]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 8, :end-line 10, :max-fixed-arity 4, :fn-var true, :arglists ([_] [_ a] [_ a b] [_ a b c]), :doc nil}, mix* {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 261, :column 7, :end-line 261, :end-column 11, :arglists (quote ([a b t]))}, :name thi.ng.math.core/mix*, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 11, :method-params ([a b t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b t]))}, LOG2 {:name thi.ng.math.core/LOG2, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 82, :column 1, :end-line 82, :end-column 18, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 82, :column 14, :end-line 82, :end-column 18, :const true}}, madd! {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 23, :column 4, :end-line 23, :end-column 9, :protocol thi.ng.math.core/IMutableMathOps, :doc nil, :arglists (quote ([_ a b]))}, :protocol thi.ng.math.core/IMutableMathOps, :name thi.ng.math.core/madd!, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 9, :method-params ([_ a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 23, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ a b])), :doc nil}, ITranspose {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 24, :column 14, :line 60, :protocol-info {:methods {transpose [[_]]}}, :end-line 60, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/ITranspose, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 24, :column 1, :line 60, :protocol-info {:methods {transpose [[_]]}}, :info nil, :end-line 60, :impls #{}, :doc nil, :jsdoc ("@interface")}, MAX {:name thi.ng.math.core/MAX, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 71, :column 1, :end-line 71, :end-column 17, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 71, :column 14, :end-line 71, :end-column 17, :const true}}, IConjugate {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 24, :column 14, :line 28, :protocol-info {:methods {conjugate [[_]]}}, :end-line 28, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/IConjugate, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 24, :column 1, :line 28, :protocol-info {:methods {conjugate [[_]]}}, :info nil, :end-line 28, :impls #{}, :doc nil, :jsdoc ("@interface")}, INV16BIT {:name thi.ng.math.core/INV16BIT, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 93, :column 1, :end-line 93, :end-column 22, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 93, :column 14, :end-line 93, :end-column 22, :const true}}, determinant {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 35, :column 4, :end-line 35, :end-column 15, :protocol thi.ng.math.core/IDeterminant, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.math.core/IDeterminant, :name thi.ng.math.core/determinant, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 15, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, madd {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 13, :column 4, :end-line 13, :end-column 8, :protocol thi.ng.math.core/IMathOps, :doc nil, :arglists (quote ([_ a b]))}, :protocol thi.ng.math.core/IMathOps, :name thi.ng.math.core/madd, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 8, :method-params ([_ a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 13, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ a b])), :doc nil}, div! {:protocol-inline nil, :meta {:protocol thi.ng.math.core/IMutableMathOps, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 8, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :column 4, :line 22, :end-line 22, :arglists (quote ([_] [_ a] [_ a b] [_ a b c])), :doc nil}, :protocol thi.ng.math.core/IMutableMathOps, :name thi.ng.math.core/div!, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 8, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :method-params ([_] [_ a] [_ a b] [_ a b c]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 18, :end-line 22, :max-fixed-arity 4, :fn-var true, :arglists ([_] [_ a] [_ a b] [_ a b c]), :doc nil}, rsqrt {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 404, :column 7, :end-line 404, :end-column 12, :arglists (quote ([x]))}, :name thi.ng.math.core/rsqrt, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 404, :end-line 404, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, INormalize {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 24, :column 14, :line 53, :protocol-info {:methods {normalize [[_] [_ norm]], normalized? [[_]]}}, :end-line 53, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/INormalize, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 24, :column 1, :line 53, :protocol-info {:methods {normalize [[_] [_ norm]], normalized? [[_]]}}, :info nil, :end-line 53, :impls #{}, :doc nil, :jsdoc ("@interface")}, normdist-weights {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 458, :column 7, :end-line 458, :end-column 23, :arglists (quote ([n] [n scale])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([n] [n scale]), :arglists ([n] [n scale]), :arglists-meta (nil nil)}}, :name thi.ng.math.core/normdist-weights, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([n] [n scale]), :arglists ([n] [n scale]), :arglists-meta (nil nil)}, :method-params ([n] [n scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 458, :end-line 458, :max-fixed-arity 2, :fn-var true, :arglists ([n] [n scale])}, map-interval {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 215, :column 7, :end-line 215, :end-column 19, :arglists (quote ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2])), :doc "Maps x from one interval into another. Intervals can be defined as\n  vectors. If range of input interval is zero, returns min. bound of\n  output.", :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2]), :arglists ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2]), :arglists-meta (nil nil)}}, :name thi.ng.math.core/map-interval, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2]), :arglists ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2]), :arglists-meta (nil nil)}, :method-params ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 5, :fn-var true, :arglists ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2]), :doc "Maps x from one interval into another. Intervals can be defined as\n  vectors. If range of input interval is zero, returns min. bound of\n  output."}, IDeterminant {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 26, :column 14, :line 34, :protocol-info {:methods {determinant [[_]]}}, :end-line 34, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/IDeterminant, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 26, :column 1, :line 34, :protocol-info {:methods {determinant [[_]]}}, :info nil, :end-line 34, :impls #{}, :doc nil, :jsdoc ("@interface")}, DEG {:name thi.ng.math.core/DEG, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 87, :column 1, :end-line 87, :end-column 17, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 87, :column 14, :end-line 87, :end-column 17, :const true}}, HALF_PI {:name thi.ng.math.core/HALF_PI, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 65, :column 1, :end-line 65, :end-column 21, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 65, :column 14, :end-line 65, :end-column 21, :const true}}, quartile-index {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 444, :column 7, :end-line 444, :end-column 21, :arglists (quote ([n num]))}, :name thi.ng.math.core/quartile-index, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 21, :method-params ([n num]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 444, :end-line 444, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n num]))}, percentile-index {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 430, :column 7, :end-line 430, :end-column 23, :arglists (quote ([n num]))}, :name thi.ng.math.core/percentile-index, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 23, :method-params ([n num]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 430, :end-line 430, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n num]))}, addm {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 14, :column 4, :end-line 14, :end-column 8, :protocol thi.ng.math.core/IMathOps, :doc nil, :arglists (quote ([_ a b]))}, :protocol thi.ng.math.core/IMathOps, :name thi.ng.math.core/addm, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 8, :method-params ([_ a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 14, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ a b])), :doc nil}, remquo {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 388, :column 7, :end-line 388, :end-column 13, :arglists (quote ([x y]))}, :name thi.ng.math.core/remquo, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 13, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 388, :end-line 388, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, trunc {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 358, :column 7, :end-line 358, :end-column 12, :arglists (quote ([x]))}, :name thi.ng.math.core/trunc, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 358, :end-line 358, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, percentile {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 437, :column 7, :end-line 437, :end-column 17, :arglists (quote ([n sorted]))}, :name thi.ng.math.core/percentile, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 17, :method-params ([n sorted]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 437, :end-line 437, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n sorted]))}, div {:protocol-inline nil, :meta {:protocol thi.ng.math.core/IMathOps, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 7, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :column 4, :line 12, :end-line 12, :arglists (quote ([_] [_ a] [_ a b] [_ a b c])), :doc nil}, :protocol thi.ng.math.core/IMathOps, :name thi.ng.math.core/div, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 7, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :method-params ([_] [_ a] [_ a b] [_ a b c]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 8, :end-line 12, :max-fixed-arity 4, :fn-var true, :arglists ([_] [_ a] [_ a b] [_ a b c]), :doc nil}, MIN {:name thi.ng.math.core/MIN, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 72, :column 1, :end-line 72, :end-column 17, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 72, :column 14, :end-line 72, :end-column 17, :const true}}, ILimit {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 20, :column 14, :line 48, :protocol-info {:methods {limit [[_ x]]}}, :end-line 48, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/ILimit, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 20, :column 1, :line 48, :protocol-info {:methods {limit [[_ x]]}}, :info nil, :end-line 48, :impls #{}, :doc nil, :jsdoc ("@interface")}, normalized? {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 55, :column 4, :end-line 55, :end-column 15, :protocol thi.ng.math.core/INormalize, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.math.core/INormalize, :name thi.ng.math.core/normalized?, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 15, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, norm-range {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 257, :column 7, :end-line 257, :end-column 17, :arglists (quote ([n])), :doc "Returns lazy-seq of n values in the closed interval [0.0, 1.0] at\n  resolution 1/x."}, :name thi.ng.math.core/norm-range, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 17, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 257, :end-line 257, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :doc "Returns lazy-seq of n values in the closed interval [0.0, 1.0] at\n  resolution 1/x."}, RAD {:name thi.ng.math.core/RAD, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 88, :column 1, :end-line 88, :end-column 17, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 88, :column 14, :end-line 88, :end-column 17, :const true}}, INV8BIT {:name thi.ng.math.core/INV8BIT, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 91, :column 1, :end-line 91, :end-column 21, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 91, :column 14, :end-line 91, :end-column 21, :const true}}, +! {:protocol-inline nil, :meta {:protocol thi.ng.math.core/IMutableMathOps, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 6, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :column 4, :line 19, :end-line 19, :arglists (quote ([_] [_ a] [_ a b] [_ a b c])), :doc nil}, :protocol thi.ng.math.core/IMutableMathOps, :name thi.ng.math.core/+!, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 6, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :method-params ([_] [_ a] [_ a b] [_ a b c]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 18, :end-line 19, :max-fixed-arity 4, :fn-var true, :arglists ([_] [_ a] [_ a b] [_ a b c]), :doc nil}, ceil-pow2 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 342, :column 7, :end-line 342, :end-column 16, :arglists (quote ([x]))}, :name thi.ng.math.core/ceil-pow2, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 342, :end-line 342, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, PHI {:name thi.ng.math.core/PHI, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 76, :column 1, :end-line 76, :end-column 17, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 76, :column 14, :end-line 76, :end-column 17, :const true}}, *eps* {:name thi.ng.math.core/*eps*, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 94, :column 1, :end-line 94, :end-column 21, :dynamic true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 94, :column 16, :end-line 94, :end-column 21, :dynamic true}}, SQRT2 {:name thi.ng.math.core/SQRT2, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 74, :column 1, :end-line 74, :end-column 19, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 74, :column 14, :end-line 74, :end-column 19, :const true}}, smoothstep {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 42, :column 4, :end-line 42, :end-column 14, :protocol thi.ng.math.core/IInterpolate, :doc nil, :arglists (quote ([_ e1 e2]))}, :protocol thi.ng.math.core/IInterpolate, :name thi.ng.math.core/smoothstep, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 14, :method-params ([_ e1 e2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 42, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ e1 e2])), :doc nil}, + {:protocol-inline nil, :meta {:protocol thi.ng.math.core/IMathOps, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 5, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :column 4, :line 9, :end-line 9, :arglists (quote ([_] [_ a] [_ a b] [_ a b c])), :doc nil}, :protocol thi.ng.math.core/IMathOps, :name thi.ng.math.core/+, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 5, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([_] [_ a] [_ a b] [_ a b c]), :arglists ([_] [_ a] [_ a b] [_ a b c]), :arglists-meta (nil nil nil nil)}, :method-params ([_] [_ a] [_ a b] [_ a b c]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 8, :end-line 9, :max-fixed-arity 4, :fn-var true, :arglists ([_] [_ a] [_ a b] [_ a b c]), :doc nil}, abs {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 17, :column 4, :end-line 17, :end-column 7, :protocol thi.ng.math.core/IMathOps, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.math.core/IMathOps, :name thi.ng.math.core/abs, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 7, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, mag-squared {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 52, :column 4, :end-line 52, :end-column 15, :protocol thi.ng.math.core/IMagnitude, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.math.core/IMagnitude, :name thi.ng.math.core/mag-squared, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 15, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, maxmag {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 369, :column 7, :end-line 369, :end-column 13, :arglists (quote ([x y]))}, :name thi.ng.math.core/maxmag, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 13, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, IDotProduct {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 25, :column 14, :line 36, :protocol-info {:methods {dot [[_] [_ a]]}}, :end-line 36, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/IDotProduct, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 25, :column 1, :line 36, :protocol-info {:methods {dot [[_] [_ a]]}}, :info nil, :end-line 36, :impls #{}, :doc nil, :jsdoc ("@interface")}, difference {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 59, :column 4, :end-line 59, :end-column 14, :protocol thi.ng.math.core/ISetOps, :doc nil, :arglists (quote ([_ x]))}, :protocol thi.ng.math.core/ISetOps, :name thi.ng.math.core/difference, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 14, :method-params ([_ x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ x])), :doc nil}, map-interval-clamped {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 228, :column 7, :end-line 228, :end-column 27, :arglists (quote ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2] [x [in1 in2] [out1 out2] [c1 c2]] [x in1 in2 out1 out2 c1 c2])), :doc "Takes a number x, input interval and output interval. Returns x\n  mapped proportionally from input to output interval and clamps it to\n  output. If range of input interval is zero, returns min. bound of\n  output.", :top-fn {:variadic false, :max-fixed-arity 7, :method-params ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2] [x [in1 in2] [out1 out2] [c1 c2]] [x in1 in2 out1 out2 c1 c2]), :arglists ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2] [x [in1 in2] [out1 out2] [c1 c2]] [x in1 in2 out1 out2 c1 c2]), :arglists-meta (nil nil nil nil)}}, :name thi.ng.math.core/map-interval-clamped, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 7, :method-params ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2] [x [in1 in2] [out1 out2] [c1 c2]] [x in1 in2 out1 out2 c1 c2]), :arglists ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2] [x [in1 in2] [out1 out2] [c1 c2]] [x in1 in2 out1 out2 c1 c2]), :arglists-meta (nil nil nil nil)}, :method-params ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2] [x [in1 in2] [out1 out2] [c1 c2]] [x in1 in2 out1 out2 c1 c2]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 7, :fn-var true, :arglists ([x [in1 in2] [out1 out2]] [x in1 in2 out1 out2] [x [in1 in2] [out1 out2] [c1 c2]] [x in1 in2 out1 out2 c1 c2]), :doc "Takes a number x, input interval and output interval. Returns x\n  mapped proportionally from input to output interval and clamps it to\n  output. If range of input interval is zero, returns min. bound of\n  output."}, step* {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 264, :column 7, :end-line 264, :end-column 12, :arglists (quote ([edge x]))}, :name thi.ng.math.core/step*, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 12, :method-params ([edge x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 2, :fn-var true, :arglists (quote ([edge x]))}, quartile {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 453, :column 7, :end-line 453, :end-column 15, :arglists (quote ([n sorted])), :doc "Takes a quartile index (1..4) and sorted seq of samples, returns set of items in quartile."}, :name thi.ng.math.core/quartile, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 15, :method-params ([n sorted]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 453, :end-line 453, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n sorted])), :doc "Takes a quartile index (1..4) and sorted seq of samples, returns set of items in quartile."}, max {:protocol-inline nil, :meta {:protocol thi.ng.math.core/IMinMax, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 7, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ a] [_ a b]), :arglists ([_ a] [_ a b]), :arglists-meta (nil nil)}, :column 4, :line 47, :end-line 47, :arglists (quote ([_ a] [_ a b])), :doc nil}, :protocol thi.ng.math.core/IMinMax, :name thi.ng.math.core/max, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 7, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ a] [_ a b]), :arglists ([_ a] [_ a b]), :arglists-meta (nil nil)}, :method-params ([_ a] [_ a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 47, :max-fixed-arity 3, :fn-var true, :arglists ([_ a] [_ a b]), :doc nil}, THIRD {:name thi.ng.math.core/THIRD, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 78, :column 1, :end-line 78, :end-column 19, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 78, :column 14, :end-line 78, :end-column 19, :const true}}, subm {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 16, :column 4, :end-line 16, :end-column 8, :protocol thi.ng.math.core/IMathOps, :doc nil, :arglists (quote ([_ a b]))}, :protocol thi.ng.math.core/IMathOps, :name thi.ng.math.core/subm, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 8, :method-params ([_ a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 16, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ a b])), :doc nil}, delta= {:protocol-inline nil, :meta {:protocol thi.ng.math.core/IDeltaEquals, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a b] [a b eps]), :arglists ([a b] [a b eps]), :arglists-meta (nil nil)}, :column 4, :line 33, :end-line 33, :arglists (quote ([a b] [a b eps])), :doc nil}, :protocol thi.ng.math.core/IDeltaEquals, :name thi.ng.math.core/delta=, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a b] [a b eps]), :arglists ([a b] [a b eps]), :arglists-meta (nil nil)}, :method-params ([a b] [a b eps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 33, :max-fixed-arity 3, :fn-var true, :arglists ([a b] [a b eps]), :doc nil}, IDeltaEquals {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 26, :column 14, :line 32, :protocol-info {:methods {delta= [[a b] [a b eps]]}}, :end-line 32, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/IDeltaEquals, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 26, :column 1, :line 32, :protocol-info {:methods {delta= [[a b] [a b eps]]}}, :info nil, :end-line 32, :impls #{nil cljs.core/IndexedSeq cljs.core/LazySeq number cljs.core/PersistentVector cljs.core/List}, :doc nil, :jsdoc ("@interface")}, addm! {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 24, :column 4, :end-line 24, :end-column 9, :protocol thi.ng.math.core/IMutableMathOps, :doc nil, :arglists (quote ([_ a b]))}, :protocol thi.ng.math.core/IMutableMathOps, :name thi.ng.math.core/addm!, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 9, :method-params ([_ a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 24, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ a b])), :doc nil}, ISetOps {:meta {:protocol-symbol true, :file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 21, :column 14, :line 56, :protocol-info {:methods {union [[_ x]], intersection [[_ x]], difference [[_ x]]}}, :end-line 56, :doc nil, :jsdoc ("@interface")}, :protocol-symbol true, :name thi.ng.math.core/ISetOps, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 21, :column 1, :line 56, :protocol-info {:methods {union [[_ x]], intersection [[_ x]], difference [[_ x]]}}, :info nil, :end-line 56, :impls #{}, :doc nil, :jsdoc ("@interface")}, SQRT3 {:name thi.ng.math.core/SQRT3, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :line 75, :column 1, :end-line 75, :end-column 19, :const true, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 75, :column 14, :end-line 75, :end-column 19, :const true}}, random {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 414, :column 7, :end-line 414, :end-column 13, :arglists (quote ([] [max] [min max])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [max] [min max]), :arglists ([] [max] [min max]), :arglists-meta (nil nil nil)}}, :name thi.ng.math.core/random, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [max] [min max]), :arglists ([] [max] [min max]), :arglists-meta (nil nil nil)}, :method-params ([] [max] [min max]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 414, :end-line 414, :max-fixed-arity 2, :fn-var true, :arglists ([] [max] [min max])}, signum {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 202, :column 7, :end-line 202, :end-column 13, :arglists (quote ([x] [x delta])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x delta]), :arglists ([x] [x delta]), :arglists-meta (nil nil)}}, :name thi.ng.math.core/signum, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x delta]), :arglists ([x] [x delta]), :arglists-meta (nil nil)}, :method-params ([x] [x delta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x delta])}, randnorm {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 424, :column 7, :end-line 424, :end-column 15, :arglists (quote ([]))}, :name thi.ng.math.core/randnorm, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 424, :end-line 424, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, floor-pow2 {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 347, :column 7, :end-line 347, :end-column 17, :arglists (quote ([x]))}, :name thi.ng.math.core/floor-pow2, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 347, :end-line 347, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ldexp {:protocol-inline nil, :meta {:file "/Users/quasar/dev/qlayground-cljs/.cljs_nashorn_repl/thi/ng/math/core.cljc", :line 385, :column 7, :end-line 385, :end-column 12, :arglists (quote ([x k]))}, :name thi.ng.math.core/ldexp, :variadic false, :file ".cljs_nashorn_repl/thi/ng/math/core.cljc", :end-column 12, :method-params ([x k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 385, :end-line 385, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x k]))}}, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros}, :cljs.analyzer/constants {:seen #{:default}, :order [:default]}, :doc nil}